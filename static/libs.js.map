{
  "version": 3,
  "sources": ["../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/boundaries.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerHelper.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerIterator.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/Graphemer.js", "../node_modules/node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/index.js", "../node_modules/node_modules/.pnpm/iso-datestring-validator@2.2.2/node_modules/iso-datestring-validator/dist/index.js", "../node_modules/@atproto/api/src/index.ts", "../node_modules/@atproto/syntax/src/handle.ts", "../node_modules/@atproto/syntax/src/did.ts", "../node_modules/@atproto/syntax/src/nsid.ts", "../node_modules/@atproto/syntax/src/aturi_validation.ts", "../node_modules/@atproto/syntax/src/aturi.ts", "../node_modules/node_modules/.pnpm/zod@3.21.4/node_modules/zod/lib/index.mjs", "../node_modules/@atproto/common-web/src/check.ts", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/vendor/varint.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/varint.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bytes.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/digest.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base58.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/vendor/base-x.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base32.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/cid.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/identity.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base2.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base8.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base10.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base16.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base36.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base64.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/bases/base256emoji.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/sha2-browser.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/hasher.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/hashes/identity.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/codecs/json.js", "../node_modules/node_modules/.pnpm/multiformats@9.9.0/node_modules/multiformats/esm/src/basics.js", "../node_modules/node_modules/.pnpm/uint8arrays@3.0.0/node_modules/uint8arrays/esm/src/util/bases.js", "../node_modules/node_modules/.pnpm/uint8arrays@3.0.0/node_modules/uint8arrays/esm/src/from-string.js", "../node_modules/node_modules/.pnpm/uint8arrays@3.0.0/node_modules/uint8arrays/esm/src/to-string.js", "../node_modules/@atproto/common-web/src/ipld.ts", "../node_modules/@atproto/common-web/src/types.ts", "../node_modules/@atproto/common-web/src/times.ts", "../node_modules/@atproto/common-web/src/strings.ts", "../node_modules/@atproto/common-web/src/did-doc.ts", "../node_modules/@atproto/lexicon/src/validators/formats.ts", "../node_modules/@atproto/lexicon/src/validators/primitives.ts", "../node_modules/@atproto/lexicon/src/blob-refs.ts", "../node_modules/@atproto/lexicon/src/validators/blob.ts", "../node_modules/@atproto/lexicon/src/validators/complex.ts", "../node_modules/@atproto/lexicon/src/util.ts", "../node_modules/@atproto/lexicon/src/types.ts", "../node_modules/@atproto/lexicon/src/validators/xrpc.ts", "../node_modules/@atproto/lexicon/src/validation.ts", "../node_modules/@atproto/lexicon/src/lexicons.ts", "../node_modules/@atproto/lexicon/src/serialize.ts", "../node_modules/@atproto/xrpc/src/types.ts", "../node_modules/@atproto/xrpc/src/util.ts", "../node_modules/@atproto/xrpc/src/client.ts", "../node_modules/@atproto/xrpc/src/index.ts", "../node_modules/@atproto/api/src/client/lexicons.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/deleteAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/disableAccountInvites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/disableInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/emitModerationEvent.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/enableAccountInvites.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getAccountInfo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getModerationEvent.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/getSubjectStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/queryModerationEvents.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/queryModerationStatuses.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/searchRepos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/sendEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/updateSubjectStatus.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/resolveHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/identity/updateHandle.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/queryLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/moderation/createReport.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/applyWrites.ts", "../node_modules/@atproto/api/src/client/util.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/createRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/deleteRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/describeRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/listRecords.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/putRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/uploadBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/confirmEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createAppPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCode.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/createSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deleteAccount.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/deleteSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/describeServer.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getAccountInviteCodes.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/getSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/listAppPasswords.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/refreshSession.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestAccountDelete.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailConfirmation.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailUpdate.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/requestPasswordReset.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/reserveSigningKey.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/resetPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/revokeAppPassword.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/updateEmail.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlocks.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getCheckout.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getHead.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getLatestCommit.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRecord.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/getRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listBlobs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/listRepos.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/notifyOfUpdate.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/requestCrawl.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/fetchLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/importRepo.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/pushBlob.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/temp/transferAccount.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfile.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfiles.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/getSuggestions.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/putPreferences.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActors.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActorsTypeahead.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/describeFeedGenerator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorFeeds.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorLikes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getAuthorFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerators.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getLikes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getListFeed.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getPostThread.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getPosts.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getRepostedBy.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getSuggestedFeeds.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/getTimeline.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/searchPosts.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getBlocks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollowers.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollows.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getListBlocks.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getListMutes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getLists.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getMutes.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/getSuggestedFollowsByActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActorList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActor.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActorList.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/getUnreadCount.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/listNotifications.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/registerPush.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/notification/updateSeen.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getPopular.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getPopularFeedGenerators.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getTimelineSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchActorsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchPostsSkeleton.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/admin/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/label/subscribeLabels.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/moderation/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/repo/strongRef.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/server/defs.ts", "../node_modules/@atproto/api/src/client/types/com/atproto/sync/subscribeRepos.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/actor/profile.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/external.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/images.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/record.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/embed/recordWithMedia.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/generator.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/like.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/post.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/repost.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/feed/threadgate.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/block.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/defs.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/follow.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/list.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/listblock.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/graph/listitem.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/richtext/facet.ts", "../node_modules/@atproto/api/src/client/types/app/bsky/unspecced/defs.ts", "../node_modules/@atproto/api/src/client/index.ts", "../node_modules/@atproto/api/src/agent.ts", "../node_modules/@atproto/api/src/rich-text/unicode.ts", "../node_modules/@atproto/api/src/rich-text/sanitization.ts", "../node_modules/@atproto/api/src/rich-text/detection.ts", "../node_modules/@atproto/api/src/rich-text/rich-text.ts", "../node_modules/@atproto/api/src/moderation/types.ts", "../node_modules/@atproto/api/src/moderation/const/labels.ts", "../node_modules/@atproto/api/src/moderation/accumulator.ts", "../node_modules/@atproto/api/src/moderation/subjects/account.ts", "../node_modules/@atproto/api/src/moderation/subjects/profile.ts", "../node_modules/@atproto/api/src/moderation/subjects/post.ts", "../node_modules/@atproto/api/src/moderation/subjects/quoted-post.ts", "../node_modules/@atproto/api/src/moderation/subjects/feed-generator.ts", "../node_modules/@atproto/api/src/moderation/subjects/user-list.ts", "../node_modules/@atproto/api/src/moderation/util.ts", "../node_modules/@atproto/api/src/moderation/index.ts", "../node_modules/@atproto/api/src/moderation/const/label-groups.ts", "../node_modules/@atproto/api/src/bsky-agent.ts", "../node_modules/varint/encode.js", "../node_modules/varint/decode.js", "../node_modules/varint/length.js", "../node_modules/varint/index.js", "../node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition", "../node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/WidthCache.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts", "../node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap", "../node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts", "../node_modules/@xterm/addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition", "../node_modules/@xterm/addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts", "../lib/index.js", "../node_modules/@ipld/car/esm/lib/decoder.js", "../node_modules/multiformats/esm/src/varint.js", "../node_modules/multiformats/esm/vendor/varint.js", "../node_modules/multiformats/esm/src/hashes/digest.js", "../node_modules/multiformats/esm/src/bytes.js", "../node_modules/multiformats/esm/vendor/base-x.js", "../node_modules/multiformats/esm/src/bases/base.js", "../node_modules/multiformats/esm/src/bases/base58.js", "../node_modules/multiformats/esm/src/bases/base32.js", "../node_modules/multiformats/esm/src/cid.js", "../node_modules/cborg/esm/lib/is.js", "../node_modules/cborg/esm/lib/token.js", "../node_modules/cborg/esm/lib/byte-utils.js", "../node_modules/cborg/esm/lib/bl.js", "../node_modules/cborg/esm/lib/common.js", "../node_modules/cborg/esm/lib/0uint.js", "../node_modules/cborg/esm/lib/1negint.js", "../node_modules/cborg/esm/lib/2bytes.js", "../node_modules/cborg/esm/lib/3string.js", "../node_modules/cborg/esm/lib/4array.js", "../node_modules/cborg/esm/lib/5map.js", "../node_modules/cborg/esm/lib/6tag.js", "../node_modules/cborg/esm/lib/7float.js", "../node_modules/cborg/esm/lib/jump.js", "../node_modules/cborg/esm/lib/encode.js", "../node_modules/cborg/esm/lib/decode.js", "../node_modules/@ipld/dag-cbor/esm/index.js", "../node_modules/@ipld/car/esm/lib/reader-browser.js", "../node_modules/@ipld/car/esm/lib/encoder.js", "../node_modules/cbor-x/index.js", "../node_modules/cbor-x/decode.js", "../node_modules/cbor-x/encode.js", "../node_modules/cbor-x/iterators.js", "../node_modules/multiformats/esm/src/index.js", "../node_modules/multiformats/esm/src/hashes/hasher.js", "../lib/firehose.js", "../lib/init-xterm.js", "../lib/init-at-client.js"],
  "sourcesContent": ["\"use strict\";\n/**\n * The Grapheme_Cluster_Break property value\n * @see https://www.unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EXTENDED_PICTOGRAPHIC = exports.CLUSTER_BREAK = void 0;\nvar CLUSTER_BREAK;\n(function (CLUSTER_BREAK) {\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CR\"] = 0] = \"CR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LF\"] = 1] = \"LF\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CONTROL\"] = 2] = \"CONTROL\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"EXTEND\"] = 3] = \"EXTEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"REGIONAL_INDICATOR\"] = 4] = \"REGIONAL_INDICATOR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"SPACINGMARK\"] = 5] = \"SPACINGMARK\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"L\"] = 6] = \"L\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"V\"] = 7] = \"V\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"T\"] = 8] = \"T\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LV\"] = 9] = \"LV\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LVT\"] = 10] = \"LVT\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"OTHER\"] = 11] = \"OTHER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"PREPEND\"] = 12] = \"PREPEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE\"] = 13] = \"E_BASE\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_MODIFIER\"] = 14] = \"E_MODIFIER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"ZWJ\"] = 15] = \"ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"GLUE_AFTER_ZWJ\"] = 16] = \"GLUE_AFTER_ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE_GAZ\"] = 17] = \"E_BASE_GAZ\";\n})(CLUSTER_BREAK = exports.CLUSTER_BREAK || (exports.CLUSTER_BREAK = {}));\n/**\n * The Emoji character property is an extension of UCD but shares the same namespace and structure\n * @see http://www.unicode.org/reports/tr51/tr51-14.html#Emoji_Properties_and_Data_Files\n *\n * Here we model Extended_Pictograhpic only to implement UAX #29 GB11\n * \\p{Extended_Pictographic} Extend* ZWJ\t\u00D7\t\\p{Extended_Pictographic}\n *\n * The Emoji character property should not be mixed with Grapheme_Cluster_Break since they are not exclusive\n */\nexports.EXTENDED_PICTOGRAPHIC = 101;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\n// BreakTypes\n// @type {BreakType}\nconst NotBreak = 0;\nconst BreakStart = 1;\nconst Break = 2;\nconst BreakLastRegional = 3;\nconst BreakPenultimateRegional = 4;\nclass GraphemerHelper {\n    /**\n     * Check if the the character at the position {pos} of the string is surrogate\n     * @param str {string}\n     * @param pos {number}\n     * @returns {boolean}\n     */\n    static isSurrogate(str, pos) {\n        return (0xd800 <= str.charCodeAt(pos) &&\n            str.charCodeAt(pos) <= 0xdbff &&\n            0xdc00 <= str.charCodeAt(pos + 1) &&\n            str.charCodeAt(pos + 1) <= 0xdfff);\n    }\n    /**\n     * The String.prototype.codePointAt polyfill\n     * Private function, gets a Unicode code point from a JavaScript UTF-16 string\n     * handling surrogate pairs appropriately\n     * @param str {string}\n     * @param idx {number}\n     * @returns {number}\n     */\n    static codePointAt(str, idx) {\n        if (idx === undefined) {\n            idx = 0;\n        }\n        const code = str.charCodeAt(idx);\n        // if a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < str.length - 1) {\n            const hi = code;\n            const low = str.charCodeAt(idx + 1);\n            if (0xdc00 <= low && low <= 0xdfff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return hi;\n        }\n        // if a low surrogate\n        if (0xdc00 <= code && code <= 0xdfff && idx >= 1) {\n            const hi = str.charCodeAt(idx - 1);\n            const low = code;\n            if (0xd800 <= hi && hi <= 0xdbff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return low;\n        }\n        // just return the char if an unmatched surrogate half or a\n        // single-char codepoint\n        return code;\n    }\n    //\n    /**\n     * Private function, returns whether a break is allowed between the two given grapheme breaking classes\n     * Implemented the UAX #29 3.1.1 Grapheme Cluster Boundary Rules on extended grapheme clusters\n     * @param start {number}\n     * @param mid {Array<number>}\n     * @param end {number}\n     * @param startEmoji {number}\n     * @param midEmoji {Array<number>}\n     * @param endEmoji {number}\n     * @returns {number}\n     */\n    static shouldBreak(start, mid, end, startEmoji, midEmoji, endEmoji) {\n        const all = [start].concat(mid).concat([end]);\n        const allEmoji = [startEmoji].concat(midEmoji).concat([endEmoji]);\n        const previous = all[all.length - 2];\n        const next = end;\n        const nextEmoji = endEmoji;\n        // Lookahead terminator for:\n        // GB12. ^ (RI RI)* RI ? RI\n        // GB13. [^RI] (RI RI)* RI ? RI\n        const rIIndex = all.lastIndexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR);\n        if (rIIndex > 0 &&\n            all.slice(1, rIIndex).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }) &&\n            [boundaries_1.CLUSTER_BREAK.PREPEND, boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(previous) === -1) {\n            if (all.filter(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }).length %\n                2 ===\n                1) {\n                return BreakLastRegional;\n            }\n            else {\n                return BreakPenultimateRegional;\n            }\n        }\n        // GB3. CR \u00D7 LF\n        if (previous === boundaries_1.CLUSTER_BREAK.CR && next === boundaries_1.CLUSTER_BREAK.LF) {\n            return NotBreak;\n        }\n        // GB4. (Control|CR|LF) \u00F7\n        else if (previous === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            previous === boundaries_1.CLUSTER_BREAK.CR ||\n            previous === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB5. \u00F7 (Control|CR|LF)\n        else if (next === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            next === boundaries_1.CLUSTER_BREAK.CR ||\n            next === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB6. L \u00D7 (L|V|LV|LVT)\n        else if (previous === boundaries_1.CLUSTER_BREAK.L &&\n            (next === boundaries_1.CLUSTER_BREAK.L ||\n                next === boundaries_1.CLUSTER_BREAK.V ||\n                next === boundaries_1.CLUSTER_BREAK.LV ||\n                next === boundaries_1.CLUSTER_BREAK.LVT)) {\n            return NotBreak;\n        }\n        // GB7. (LV|V) \u00D7 (V|T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LV || previous === boundaries_1.CLUSTER_BREAK.V) &&\n            (next === boundaries_1.CLUSTER_BREAK.V || next === boundaries_1.CLUSTER_BREAK.T)) {\n            return NotBreak;\n        }\n        // GB8. (LVT|T) \u00D7 (T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LVT || previous === boundaries_1.CLUSTER_BREAK.T) &&\n            next === boundaries_1.CLUSTER_BREAK.T) {\n            return NotBreak;\n        }\n        // GB9. \u00D7 (Extend|ZWJ)\n        else if (next === boundaries_1.CLUSTER_BREAK.EXTEND || next === boundaries_1.CLUSTER_BREAK.ZWJ) {\n            return NotBreak;\n        }\n        // GB9a. \u00D7 SpacingMark\n        else if (next === boundaries_1.CLUSTER_BREAK.SPACINGMARK) {\n            return NotBreak;\n        }\n        // GB9b. Prepend \u00D7\n        else if (previous === boundaries_1.CLUSTER_BREAK.PREPEND) {\n            return NotBreak;\n        }\n        // GB11. \\p{Extended_Pictographic} Extend* ZWJ \u00D7 \\p{Extended_Pictographic}\n        const previousNonExtendIndex = allEmoji\n            .slice(0, -1)\n            .lastIndexOf(boundaries_1.EXTENDED_PICTOGRAPHIC);\n        if (previousNonExtendIndex !== -1 &&\n            allEmoji[previousNonExtendIndex] === boundaries_1.EXTENDED_PICTOGRAPHIC &&\n            all.slice(previousNonExtendIndex + 1, -2).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.EXTEND;\n            }) &&\n            previous === boundaries_1.CLUSTER_BREAK.ZWJ &&\n            nextEmoji === boundaries_1.EXTENDED_PICTOGRAPHIC) {\n            return NotBreak;\n        }\n        // GB12. ^ (RI RI)* RI \u00D7 RI\n        // GB13. [^RI] (RI RI)* RI \u00D7 RI\n        if (mid.indexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) !== -1) {\n            return Break;\n        }\n        if (previous === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR &&\n            next === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) {\n            return NotBreak;\n        }\n        // GB999. Any ? Any\n        return BreakStart;\n    }\n}\nexports.default = GraphemerHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * GraphemerIterator\n *\n * Takes a string and a \"BreakHandler\" method during initialisation\n * and creates an iterable object that returns individual graphemes.\n *\n * @param str {string}\n * @return GraphemerIterator\n */\nclass GraphemerIterator {\n    constructor(str, nextBreak) {\n        this._index = 0;\n        this._str = str;\n        this._nextBreak = nextBreak;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        let brk;\n        if ((brk = this._nextBreak(this._str, this._index)) < this._str.length) {\n            const value = this._str.slice(this._index, brk);\n            this._index = brk;\n            return { value: value, done: false };\n        }\n        if (this._index < this._str.length) {\n            const value = this._str.slice(this._index);\n            this._index = this._str.length;\n            return { value: value, done: false };\n        }\n        return { value: undefined, done: true };\n    }\n}\nexports.default = GraphemerIterator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\nconst GraphemerHelper_1 = __importDefault(require(\"./GraphemerHelper\"));\nconst GraphemerIterator_1 = __importDefault(require(\"./GraphemerIterator\"));\nclass Graphemer {\n    /**\n     * Returns the next grapheme break in the string after the given index\n     * @param string {string}\n     * @param index {number}\n     * @returns {number}\n     */\n    static nextBreak(string, index) {\n        if (index === undefined) {\n            index = 0;\n        }\n        if (index < 0) {\n            return 0;\n        }\n        if (index >= string.length - 1) {\n            return string.length;\n        }\n        const prevCP = GraphemerHelper_1.default.codePointAt(string, index);\n        const prev = Graphemer.getGraphemeBreakProperty(prevCP);\n        const prevEmoji = Graphemer.getEmojiProperty(prevCP);\n        const mid = [];\n        const midEmoji = [];\n        for (let i = index + 1; i < string.length; i++) {\n            // check for already processed low surrogates\n            if (GraphemerHelper_1.default.isSurrogate(string, i - 1)) {\n                continue;\n            }\n            const nextCP = GraphemerHelper_1.default.codePointAt(string, i);\n            const next = Graphemer.getGraphemeBreakProperty(nextCP);\n            const nextEmoji = Graphemer.getEmojiProperty(nextCP);\n            if (GraphemerHelper_1.default.shouldBreak(prev, mid, next, prevEmoji, midEmoji, nextEmoji)) {\n                return i;\n            }\n            mid.push(next);\n            midEmoji.push(nextEmoji);\n        }\n        return string.length;\n    }\n    /**\n     * Breaks the given string into an array of grapheme clusters\n     * @param str {string}\n     * @returns {string[]}\n     */\n    splitGraphemes(str) {\n        const res = [];\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            res.push(str.slice(index, brk));\n            index = brk;\n        }\n        if (index < str.length) {\n            res.push(str.slice(index));\n        }\n        return res;\n    }\n    /**\n     * Returns an iterator of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {GraphemerIterator}\n     */\n    iterateGraphemes(str) {\n        return new GraphemerIterator_1.default(str, Graphemer.nextBreak);\n    }\n    /**\n     * Returns the number of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {number}\n     */\n    countGraphemes(str) {\n        let count = 0;\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            index = brk;\n            count++;\n        }\n        if (index < str.length) {\n            count++;\n        }\n        return count;\n    }\n    /**\n     * Given a Unicode code point, determines this symbol's grapheme break property\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getGraphemeBreakProperty(code) {\n        // Grapheme break property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt\n        // and generated by\n        // node ./scripts/generate-grapheme-break.js\n        if (code < 0xbf09) {\n            if (code < 0xac54) {\n                if (code < 0x102d) {\n                    if (code < 0xb02) {\n                        if (code < 0x93b) {\n                            if (code < 0x6df) {\n                                if (code < 0x5bf) {\n                                    if (code < 0x7f) {\n                                        if (code < 0xb) {\n                                            if (code < 0xa) {\n                                                // Cc  [10] <control-0000>..<control-0009>\n                                                if (0x0 <= code && code <= 0x9) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cc       <control-000A>\n                                                if (0xa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LF;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd) {\n                                                // Cc   [2] <control-000B>..<control-000C>\n                                                if (0xb <= code && code <= 0xc) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe) {\n                                                    // Cc       <control-000D>\n                                                    if (0xd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CR;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cc  [18] <control-000E>..<control-001F>\n                                                    if (0xe <= code && code <= 0x1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x300) {\n                                            if (code < 0xad) {\n                                                // Cc  [33] <control-007F>..<control-009F>\n                                                if (0x7f <= code && code <= 0x9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SOFT HYPHEN\n                                                if (0xad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x483) {\n                                                // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\n                                                if (0x300 <= code && code <= 0x36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x591) {\n                                                    // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\n                                                    // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\n                                                    if (0x483 <= code && code <= 0x489) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\n                                                    if (0x591 <= code && code <= 0x5bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x610) {\n                                        if (code < 0x5c4) {\n                                            if (code < 0x5c1) {\n                                                // Mn       HEBREW POINT RAFE\n                                                if (0x5bf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\n                                                if (0x5c1 <= code && code <= 0x5c2) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x5c7) {\n                                                // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\n                                                if (0x5c4 <= code && code <= 0x5c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x600) {\n                                                    // Mn       HEBREW POINT QAMATS QATAN\n                                                    if (0x5c7 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\n                                                    if (0x600 <= code && code <= 0x605) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x670) {\n                                            if (code < 0x61c) {\n                                                // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\n                                                if (0x610 <= code && code <= 0x61a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x64b) {\n                                                    // Cf       ARABIC LETTER MARK\n                                                    if (0x61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\n                                                    if (0x64b <= code && code <= 0x65f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x6d6) {\n                                                // Mn       ARABIC LETTER SUPERSCRIPT ALEF\n                                                if (0x670 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x6dd) {\n                                                    // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\n                                                    if (0x6d6 <= code && code <= 0x6dc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC END OF AYAH\n                                                    if (0x6dd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x81b) {\n                                    if (code < 0x730) {\n                                        if (code < 0x6ea) {\n                                            if (code < 0x6e7) {\n                                                // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\n                                                if (0x6df <= code && code <= 0x6e4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\n                                                if (0x6e7 <= code && code <= 0x6e8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x70f) {\n                                                // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\n                                                if (0x6ea <= code && code <= 0x6ed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SYRIAC ABBREVIATION MARK\n                                                if (0x70f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                                // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\n                                                if (0x711 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x7eb) {\n                                            if (code < 0x7a6) {\n                                                // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\n                                                if (0x730 <= code && code <= 0x74a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [11] THAANA ABAFILI..THAANA SUKUN\n                                                if (0x7a6 <= code && code <= 0x7b0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x7fd) {\n                                                // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\n                                                if (0x7eb <= code && code <= 0x7f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x816) {\n                                                    // Mn       NKO DANTAYALAN\n                                                    if (0x7fd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\n                                                    if (0x816 <= code && code <= 0x819) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x898) {\n                                        if (code < 0x829) {\n                                            if (code < 0x825) {\n                                                // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\n                                                if (0x81b <= code && code <= 0x823) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\n                                                if (0x825 <= code && code <= 0x827) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x859) {\n                                                // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\n                                                if (0x829 <= code && code <= 0x82d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x890) {\n                                                    // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\n                                                    if (0x859 <= code && code <= 0x85b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [2] ARABIC POUND MARK ABOVE..ARABIC PIASTRE MARK ABOVE\n                                                    if (0x890 <= code && code <= 0x891) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x8e3) {\n                                            if (code < 0x8ca) {\n                                                // Mn   [8] ARABIC SMALL HIGH WORD AL-JUZ..ARABIC HALF MADDA OVER MADDA\n                                                if (0x898 <= code && code <= 0x89f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x8e2) {\n                                                    // Mn  [24] ARABIC SMALL HIGH FARSI YEH..ARABIC SMALL HIGH SIGN SAFHA\n                                                    if (0x8ca <= code && code <= 0x8e1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC DISPUTED END OF AYAH\n                                                    if (0x8e2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x903) {\n                                                // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\n                                                if (0x8e3 <= code && code <= 0x902) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DEVANAGARI SIGN VISARGA\n                                                if (0x903 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DEVANAGARI VOWEL SIGN OE\n                                                if (0x93a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xa01) {\n                                if (code < 0x982) {\n                                    if (code < 0x94d) {\n                                        if (code < 0x93e) {\n                                            // Mc       DEVANAGARI VOWEL SIGN OOE\n                                            if (0x93b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       DEVANAGARI SIGN NUKTA\n                                            if (0x93c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x941) {\n                                                // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\n                                                if (0x93e <= code && code <= 0x940) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x949) {\n                                                    // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\n                                                    if (0x941 <= code && code <= 0x948) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\n                                                    if (0x949 <= code && code <= 0x94c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x951) {\n                                            if (code < 0x94e) {\n                                                // Mn       DEVANAGARI SIGN VIRAMA\n                                                if (0x94d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\n                                                if (0x94e <= code && code <= 0x94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x962) {\n                                                // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\n                                                if (0x951 <= code && code <= 0x957) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x981) {\n                                                    // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\n                                                    if (0x962 <= code && code <= 0x963) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN CANDRABINDU\n                                                    if (0x981 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x9c7) {\n                                        if (code < 0x9be) {\n                                            if (code < 0x9bc) {\n                                                // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\n                                                if (0x982 <= code && code <= 0x983) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BENGALI SIGN NUKTA\n                                                if (0x9bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9bf) {\n                                                // Mc       BENGALI VOWEL SIGN AA\n                                                if (0x9be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9c1) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\n                                                    if (0x9bf <= code && code <= 0x9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\n                                                    if (0x9c1 <= code && code <= 0x9c4) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x9d7) {\n                                            if (code < 0x9cb) {\n                                                // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\n                                                if (0x9c7 <= code && code <= 0x9c8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9cd) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\n                                                    if (0x9cb <= code && code <= 0x9cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN VIRAMA\n                                                    if (0x9cd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9e2) {\n                                                // Mc       BENGALI AU LENGTH MARK\n                                                if (0x9d7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9fe) {\n                                                    // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\n                                                    if (0x9e2 <= code && code <= 0x9e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SANDHI MARK\n                                                    if (0x9fe === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa83) {\n                                    if (code < 0xa47) {\n                                        if (code < 0xa3c) {\n                                            if (code < 0xa03) {\n                                                // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\n                                                if (0xa01 <= code && code <= 0xa02) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GURMUKHI SIGN VISARGA\n                                                if (0xa03 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa3e) {\n                                                // Mn       GURMUKHI SIGN NUKTA\n                                                if (0xa3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa41) {\n                                                    // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\n                                                    if (0xa3e <= code && code <= 0xa40) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\n                                                    if (0xa41 <= code && code <= 0xa42) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa70) {\n                                            if (code < 0xa4b) {\n                                                // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\n                                                if (0xa47 <= code && code <= 0xa48) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa51) {\n                                                    // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\n                                                    if (0xa4b <= code && code <= 0xa4d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GURMUKHI SIGN UDAAT\n                                                    if (0xa51 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa75) {\n                                                // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\n                                                if (0xa70 <= code && code <= 0xa71) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa81) {\n                                                    // Mn       GURMUKHI SIGN YAKASH\n                                                    if (0xa75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\n                                                    if (0xa81 <= code && code <= 0xa82) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac9) {\n                                        if (code < 0xabe) {\n                                            // Mc       GUJARATI SIGN VISARGA\n                                            if (0xa83 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       GUJARATI SIGN NUKTA\n                                            if (0xabc === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac1) {\n                                                // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\n                                                if (0xabe <= code && code <= 0xac0) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac7) {\n                                                    // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\n                                                    if (0xac1 <= code && code <= 0xac5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\n                                                    if (0xac7 <= code && code <= 0xac8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae2) {\n                                            if (code < 0xacb) {\n                                                // Mc       GUJARATI VOWEL SIGN CANDRA O\n                                                if (0xac9 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacd) {\n                                                    // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\n                                                    if (0xacb <= code && code <= 0xacc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GUJARATI SIGN VIRAMA\n                                                    if (0xacd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xafa) {\n                                                // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\n                                                if (0xae2 <= code && code <= 0xae3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb01) {\n                                                    // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\n                                                    if (0xafa <= code && code <= 0xaff) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       ORIYA SIGN CANDRABINDU\n                                                    if (0xb01 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf3) {\n                            if (code < 0xc04) {\n                                if (code < 0xb82) {\n                                    if (code < 0xb47) {\n                                        if (code < 0xb3e) {\n                                            if (code < 0xb3c) {\n                                                // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\n                                                if (0xb02 <= code && code <= 0xb03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       ORIYA SIGN NUKTA\n                                                if (0xb3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb40) {\n                                                // Mc       ORIYA VOWEL SIGN AA\n                                                // Mn       ORIYA VOWEL SIGN I\n                                                if (0xb3e <= code && code <= 0xb3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb41) {\n                                                    // Mc       ORIYA VOWEL SIGN II\n                                                    if (0xb40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\n                                                    if (0xb41 <= code && code <= 0xb44) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4d) {\n                                            if (code < 0xb4b) {\n                                                // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\n                                                if (0xb47 <= code && code <= 0xb48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\n                                                if (0xb4b <= code && code <= 0xb4c) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb55) {\n                                                // Mn       ORIYA SIGN VIRAMA\n                                                if (0xb4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62) {\n                                                    // Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK\n                                                    // Mc       ORIYA AU LENGTH MARK\n                                                    if (0xb55 <= code && code <= 0xb57) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\n                                                    if (0xb62 <= code && code <= 0xb63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc6) {\n                                        if (code < 0xbbf) {\n                                            // Mn       TAMIL SIGN ANUSVARA\n                                            if (0xb82 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAMIL VOWEL SIGN AA\n                                            if (0xbbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc0) {\n                                                // Mc       TAMIL VOWEL SIGN I\n                                                if (0xbbf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc1) {\n                                                    // Mn       TAMIL VOWEL SIGN II\n                                                    if (0xbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\n                                                    if (0xbc1 <= code && code <= 0xbc2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd7) {\n                                            if (code < 0xbca) {\n                                                // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\n                                                if (0xbc6 <= code && code <= 0xbc8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcd) {\n                                                    // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\n                                                    if (0xbca <= code && code <= 0xbcc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TAMIL SIGN VIRAMA\n                                                    if (0xbcd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc00) {\n                                                // Mc       TAMIL AU LENGTH MARK\n                                                if (0xbd7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc01) {\n                                                    // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n                                                    if (0xc00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n                                                    if (0xc01 <= code && code <= 0xc03) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcbe) {\n                                    if (code < 0xc4a) {\n                                        if (code < 0xc3e) {\n                                            // Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n                                            if (0xc04 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TELUGU SIGN NUKTA\n                                            if (0xc3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc41) {\n                                                // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n                                                if (0xc3e <= code && code <= 0xc40) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc46) {\n                                                    // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n                                                    if (0xc41 <= code && code <= 0xc44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n                                                    if (0xc46 <= code && code <= 0xc48) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc81) {\n                                            if (code < 0xc55) {\n                                                // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\n                                                if (0xc4a <= code && code <= 0xc4d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc62) {\n                                                    // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\n                                                    if (0xc55 <= code && code <= 0xc56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\n                                                    if (0xc62 <= code && code <= 0xc63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc82) {\n                                                // Mn       KANNADA SIGN CANDRABINDU\n                                                if (0xc81 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbc) {\n                                                    // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\n                                                    if (0xc82 <= code && code <= 0xc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KANNADA SIGN NUKTA\n                                                    if (0xcbc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcc6) {\n                                        if (code < 0xcc0) {\n                                            // Mc       KANNADA VOWEL SIGN AA\n                                            if (0xcbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       KANNADA VOWEL SIGN I\n                                            if (0xcbf === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc2) {\n                                                // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\n                                                if (0xcc0 <= code && code <= 0xcc1) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc3) {\n                                                    // Mc       KANNADA VOWEL SIGN UU\n                                                    if (0xcc2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\n                                                    if (0xcc3 <= code && code <= 0xcc4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xccc) {\n                                            if (code < 0xcc7) {\n                                                // Mn       KANNADA VOWEL SIGN E\n                                                if (0xcc6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcca) {\n                                                    // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\n                                                    if (0xcc7 <= code && code <= 0xcc8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\n                                                    if (0xcca <= code && code <= 0xccb) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd5) {\n                                                // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\n                                                if (0xccc <= code && code <= 0xccd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce2) {\n                                                    // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n                                                    if (0xcd5 <= code && code <= 0xcd6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n                                                    if (0xce2 <= code && code <= 0xce3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xddf) {\n                                if (code < 0xd4e) {\n                                    if (code < 0xd3f) {\n                                        if (code < 0xd02) {\n                                            if (code < 0xd00) {\n                                                // Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n                                                if (0xcf3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n                                                if (0xd00 <= code && code <= 0xd01) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b) {\n                                                // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n                                                if (0xd02 <= code && code <= 0xd03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3e) {\n                                                    // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\n                                                    if (0xd3b <= code && code <= 0xd3c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MALAYALAM VOWEL SIGN AA\n                                                    if (0xd3e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd46) {\n                                            if (code < 0xd41) {\n                                                // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\n                                                if (0xd3f <= code && code <= 0xd40) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\n                                                if (0xd41 <= code && code <= 0xd44) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4a) {\n                                                // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\n                                                if (0xd46 <= code && code <= 0xd48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4d) {\n                                                    // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\n                                                    if (0xd4a <= code && code <= 0xd4c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MALAYALAM SIGN VIRAMA\n                                                    if (0xd4d === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xdca) {\n                                        if (code < 0xd62) {\n                                            // Lo       MALAYALAM LETTER DOT REPH\n                                            if (0xd4e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       MALAYALAM AU LENGTH MARK\n                                            if (0xd57 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd81) {\n                                                // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\n                                                if (0xd62 <= code && code <= 0xd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd82) {\n                                                    // Mn       SINHALA SIGN CANDRABINDU\n                                                    if (0xd81 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\n                                                    if (0xd82 <= code && code <= 0xd83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xdd2) {\n                                            if (code < 0xdcf) {\n                                                // Mn       SINHALA SIGN AL-LAKUNA\n                                                if (0xdca === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd0) {\n                                                    // Mc       SINHALA VOWEL SIGN AELA-PILLA\n                                                    if (0xdcf === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\n                                                    if (0xdd0 <= code && code <= 0xdd1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xdd6) {\n                                                // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\n                                                if (0xdd2 <= code && code <= 0xdd4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd8) {\n                                                    // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\n                                                    if (0xdd6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\n                                                    if (0xdd8 <= code && code <= 0xdde) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xf35) {\n                                    if (code < 0xe47) {\n                                        if (code < 0xe31) {\n                                            if (code < 0xdf2) {\n                                                // Mc       SINHALA VOWEL SIGN GAYANUKITTA\n                                                if (0xddf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\n                                                if (0xdf2 <= code && code <= 0xdf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe33) {\n                                                // Mn       THAI CHARACTER MAI HAN-AKAT\n                                                if (0xe31 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe34) {\n                                                    // Lo       THAI CHARACTER SARA AM\n                                                    if (0xe33 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\n                                                    if (0xe34 <= code && code <= 0xe3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xeb4) {\n                                            if (code < 0xeb1) {\n                                                // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n                                                if (0xe47 <= code && code <= 0xe4e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LAO VOWEL SIGN MAI KAN\n                                                if (0xeb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Lo       LAO VOWEL SIGN AM\n                                                if (0xeb3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xec8) {\n                                                // Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n                                                if (0xeb4 <= code && code <= 0xebc) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf18) {\n                                                    // Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n                                                    if (0xec8 <= code && code <= 0xece) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n                                                    if (0xf18 <= code && code <= 0xf19) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xf7f) {\n                                        if (code < 0xf39) {\n                                            // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n                                            if (0xf35 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n                                            if (0xf37 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf3e) {\n                                                // Mn       TIBETAN MARK TSA -PHRU\n                                                if (0xf39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf71) {\n                                                    // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\n                                                    if (0xf3e <= code && code <= 0xf3f) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n                                                    if (0xf71 <= code && code <= 0xf7e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xf8d) {\n                                            if (code < 0xf80) {\n                                                // Mc       TIBETAN SIGN RNAM BCAD\n                                                if (0xf7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf86) {\n                                                    // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\n                                                    if (0xf80 <= code && code <= 0xf84) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\n                                                    if (0xf86 <= code && code <= 0xf87) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf99) {\n                                                // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n                                                if (0xf8d <= code && code <= 0xf97) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfc6) {\n                                                    // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n                                                    if (0xf99 <= code && code <= 0xfbc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TIBETAN SYMBOL PADMA GDAN\n                                                    if (0xfc6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1c24) {\n                        if (code < 0x1930) {\n                            if (code < 0x1732) {\n                                if (code < 0x1082) {\n                                    if (code < 0x103d) {\n                                        if (code < 0x1032) {\n                                            if (code < 0x1031) {\n                                                // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\n                                                if (0x102d <= code && code <= 0x1030) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MYANMAR VOWEL SIGN E\n                                                if (0x1031 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1039) {\n                                                // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\n                                                if (0x1032 <= code && code <= 0x1037) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x103b) {\n                                                    // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\n                                                    if (0x1039 <= code && code <= 0x103a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\n                                                    if (0x103b <= code && code <= 0x103c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1058) {\n                                            if (code < 0x1056) {\n                                                // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\n                                                if (0x103d <= code && code <= 0x103e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\n                                                if (0x1056 <= code && code <= 0x1057) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x105e) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\n                                                if (0x1058 <= code && code <= 0x1059) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1071) {\n                                                    // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\n                                                    if (0x105e <= code && code <= 0x1060) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\n                                                    if (0x1071 <= code && code <= 0x1074) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1100) {\n                                        if (code < 0x1085) {\n                                            // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\n                                            if (0x1082 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       MYANMAR VOWEL SIGN SHAN E\n                                            if (0x1084 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x108d) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\n                                                if (0x1085 <= code && code <= 0x1086) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\n                                                if (0x108d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       MYANMAR VOWEL SIGN AITON AI\n                                                if (0x109d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x135d) {\n                                            if (code < 0x1160) {\n                                                // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\n                                                if (0x1100 <= code && code <= 0x115f) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8) {\n                                                    // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\n                                                    if (0x1160 <= code && code <= 0x11a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.V;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\n                                                    if (0x11a8 <= code && code <= 0x11ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.T;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1712) {\n                                                // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\n                                                if (0x135d <= code && code <= 0x135f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1715) {\n                                                    // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\n                                                    if (0x1712 <= code && code <= 0x1714) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       TAGALOG SIGN PAMUDPOD\n                                                    if (0x1715 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x17c9) {\n                                    if (code < 0x17b6) {\n                                        if (code < 0x1752) {\n                                            if (code < 0x1734) {\n                                                // Mn   [2] HANUNOO VOWEL SIGN I..HANUNOO VOWEL SIGN U\n                                                if (0x1732 <= code && code <= 0x1733) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       HANUNOO SIGN PAMUDPOD\n                                                if (0x1734 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1772) {\n                                                // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\n                                                if (0x1752 <= code && code <= 0x1753) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17b4) {\n                                                    // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\n                                                    if (0x1772 <= code && code <= 0x1773) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\n                                                    if (0x17b4 <= code && code <= 0x17b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x17be) {\n                                            if (code < 0x17b7) {\n                                                // Mc       KHMER VOWEL SIGN AA\n                                                if (0x17b6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\n                                                if (0x17b7 <= code && code <= 0x17bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x17c6) {\n                                                // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\n                                                if (0x17be <= code && code <= 0x17c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17c7) {\n                                                    // Mn       KHMER SIGN NIKAHIT\n                                                    if (0x17c6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\n                                                    if (0x17c7 <= code && code <= 0x17c8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1885) {\n                                        if (code < 0x180b) {\n                                            if (code < 0x17dd) {\n                                                // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\n                                                if (0x17c9 <= code && code <= 0x17d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHMER SIGN ATTHACAN\n                                                if (0x17dd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x180e) {\n                                                // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\n                                                if (0x180b <= code && code <= 0x180d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       MONGOLIAN VOWEL SEPARATOR\n                                                if (0x180e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Mn       MONGOLIAN FREE VARIATION SELECTOR FOUR\n                                                if (0x180f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1923) {\n                                            if (code < 0x18a9) {\n                                                // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\n                                                if (0x1885 <= code && code <= 0x1886) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1920) {\n                                                    // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\n                                                    if (0x18a9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\n                                                    if (0x1920 <= code && code <= 0x1922) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1927) {\n                                                // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\n                                                if (0x1923 <= code && code <= 0x1926) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1929) {\n                                                    // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\n                                                    if (0x1927 <= code && code <= 0x1928) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\n                                                    if (0x1929 <= code && code <= 0x192b) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1b3b) {\n                                if (code < 0x1a58) {\n                                    if (code < 0x1a19) {\n                                        if (code < 0x1933) {\n                                            if (code < 0x1932) {\n                                                // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\n                                                if (0x1930 <= code && code <= 0x1931) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LIMBU SMALL LETTER ANUSVARA\n                                                if (0x1932 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1939) {\n                                                // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\n                                                if (0x1933 <= code && code <= 0x1938) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a17) {\n                                                    // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\n                                                    if (0x1939 <= code && code <= 0x193b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\n                                                    if (0x1a17 <= code && code <= 0x1a18) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1a55) {\n                                            if (code < 0x1a1b) {\n                                                // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\n                                                if (0x1a19 <= code && code <= 0x1a1a) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BUGINESE VOWEL SIGN AE\n                                                if (0x1a1b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a56) {\n                                                // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\n                                                if (0x1a55 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\n                                                if (0x1a56 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\n                                                if (0x1a57 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1a73) {\n                                        if (code < 0x1a62) {\n                                            if (code < 0x1a60) {\n                                                // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\n                                                if (0x1a58 <= code && code <= 0x1a5e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM SIGN SAKOT\n                                                if (0x1a60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a65) {\n                                                // Mn       TAI THAM VOWEL SIGN MAI SAT\n                                                if (0x1a62 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a6d) {\n                                                    // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\n                                                    if (0x1a65 <= code && code <= 0x1a6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\n                                                    if (0x1a6d <= code && code <= 0x1a72) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1b00) {\n                                            if (code < 0x1a7f) {\n                                                // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\n                                                if (0x1a73 <= code && code <= 0x1a7c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ab0) {\n                                                    // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\n                                                    if (0x1a7f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\n                                                    // Me       COMBINING PARENTHESES OVERLAY\n                                                    // Mn  [16] COMBINING LATIN SMALL LETTER W BELOW..COMBINING LATIN SMALL LETTER INSULAR T\n                                                    if (0x1ab0 <= code && code <= 0x1ace) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b04) {\n                                                // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\n                                                if (0x1b00 <= code && code <= 0x1b03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b34) {\n                                                    // Mc       BALINESE SIGN BISAH\n                                                    if (0x1b04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BALINESE SIGN REREKAN\n                                                    // Mc       BALINESE VOWEL SIGN TEDUNG\n                                                    // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\n                                                    if (0x1b34 <= code && code <= 0x1b3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1ba8) {\n                                    if (code < 0x1b6b) {\n                                        if (code < 0x1b3d) {\n                                            // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\n                                            if (0x1b3b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BALINESE VOWEL SIGN LA LENGA\n                                            if (0x1b3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b42) {\n                                                // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\n                                                if (0x1b3d <= code && code <= 0x1b41) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b43) {\n                                                    // Mn       BALINESE VOWEL SIGN PEPET\n                                                    if (0x1b42 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\n                                                    if (0x1b43 <= code && code <= 0x1b44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ba1) {\n                                            if (code < 0x1b80) {\n                                                // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\n                                                if (0x1b6b <= code && code <= 0x1b73) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b82) {\n                                                    // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\n                                                    if (0x1b80 <= code && code <= 0x1b81) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SUNDANESE SIGN PANGWISAD\n                                                    if (0x1b82 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ba2) {\n                                                // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\n                                                if (0x1ba1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ba6) {\n                                                    // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\n                                                    if (0x1ba2 <= code && code <= 0x1ba5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\n                                                    if (0x1ba6 <= code && code <= 0x1ba7) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1be8) {\n                                        if (code < 0x1bab) {\n                                            if (code < 0x1baa) {\n                                                // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\n                                                if (0x1ba8 <= code && code <= 0x1ba9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SUNDANESE SIGN PAMAAEH\n                                                if (0x1baa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1be6) {\n                                                // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\n                                                if (0x1bab <= code && code <= 0x1bad) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BATAK SIGN TOMPI\n                                                if (0x1be6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       BATAK VOWEL SIGN E\n                                                if (0x1be7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1bee) {\n                                            if (code < 0x1bea) {\n                                                // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\n                                                if (0x1be8 <= code && code <= 0x1be9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bed) {\n                                                    // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\n                                                    if (0x1bea <= code && code <= 0x1bec) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BATAK VOWEL SIGN KARO O\n                                                    if (0x1bed === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1bef) {\n                                                // Mc       BATAK VOWEL SIGN U\n                                                if (0x1bee === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bf2) {\n                                                    // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\n                                                    if (0x1bef <= code && code <= 0x1bf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\n                                                    if (0x1bf2 <= code && code <= 0x1bf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xa952) {\n                            if (code < 0x2d7f) {\n                                if (code < 0x1cf7) {\n                                    if (code < 0x1cd4) {\n                                        if (code < 0x1c34) {\n                                            if (code < 0x1c2c) {\n                                                // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\n                                                if (0x1c24 <= code && code <= 0x1c2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\n                                                if (0x1c2c <= code && code <= 0x1c33) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1c36) {\n                                                // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\n                                                if (0x1c34 <= code && code <= 0x1c35) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1cd0) {\n                                                    // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\n                                                    if (0x1c36 <= code && code <= 0x1c37) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\n                                                    if (0x1cd0 <= code && code <= 0x1cd2) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ce2) {\n                                            if (code < 0x1ce1) {\n                                                // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\n                                                if (0x1cd4 <= code && code <= 0x1ce0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\n                                                if (0x1ce1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ced) {\n                                                // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\n                                                if (0x1ce2 <= code && code <= 0x1ce8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       VEDIC SIGN TIRYAK\n                                                if (0x1ced === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       VEDIC TONE CANDRA ABOVE\n                                                if (0x1cf4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x200d) {\n                                        if (code < 0x1dc0) {\n                                            if (code < 0x1cf8) {\n                                                // Mc       VEDIC SIGN ATIKRAMA\n                                                if (0x1cf7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\n                                                if (0x1cf8 <= code && code <= 0x1cf9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x200b) {\n                                                // Mn  [64] COMBINING DOTTED GRAVE ACCENT..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\n                                                if (0x1dc0 <= code && code <= 0x1dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       ZERO WIDTH SPACE\n                                                if (0x200b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Cf       ZERO WIDTH NON-JOINER\n                                                if (0x200c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x2060) {\n                                            if (code < 0x200e) {\n                                                // Cf       ZERO WIDTH JOINER\n                                                if (0x200d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.ZWJ;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2028) {\n                                                    // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\n                                                    if (0x200e <= code && code <= 0x200f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Zl       LINE SEPARATOR\n                                                    // Zp       PARAGRAPH SEPARATOR\n                                                    // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\n                                                    if (0x2028 <= code && code <= 0x202e) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x20d0) {\n                                                // Cf   [5] WORD JOINER..INVISIBLE PLUS\n                                                // Cn       <reserved-2065>\n                                                // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\n                                                if (0x2060 <= code && code <= 0x206f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2cef) {\n                                                    // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\n                                                    // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\n                                                    // Mn       COMBINING LEFT RIGHT ARROW ABOVE\n                                                    // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\n                                                    // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\n                                                    if (0x20d0 <= code && code <= 0x20f0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\n                                                    if (0x2cef <= code && code <= 0x2cf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa823) {\n                                    if (code < 0xa674) {\n                                        if (code < 0x302a) {\n                                            if (code < 0x2de0) {\n                                                // Mn       TIFINAGH CONSONANT JOINER\n                                                if (0x2d7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\n                                                if (0x2de0 <= code && code <= 0x2dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x3099) {\n                                                // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\n                                                // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\n                                                if (0x302a <= code && code <= 0x302f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa66f) {\n                                                    // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\n                                                    if (0x3099 <= code && code <= 0x309a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       COMBINING CYRILLIC VZMET\n                                                    // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\n                                                    if (0xa66f <= code && code <= 0xa672) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa802) {\n                                            if (code < 0xa69e) {\n                                                // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\n                                                if (0xa674 <= code && code <= 0xa67d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa6f0) {\n                                                    // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\n                                                    if (0xa69e <= code && code <= 0xa69f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\n                                                    if (0xa6f0 <= code && code <= 0xa6f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa806) {\n                                                // Mn       SYLOTI NAGRI SIGN DVISVARA\n                                                if (0xa802 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       SYLOTI NAGRI SIGN HASANTA\n                                                if (0xa806 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       SYLOTI NAGRI SIGN ANUSVARA\n                                                if (0xa80b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xa8b4) {\n                                        if (code < 0xa827) {\n                                            if (code < 0xa825) {\n                                                // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\n                                                if (0xa823 <= code && code <= 0xa824) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\n                                                if (0xa825 <= code && code <= 0xa826) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa82c) {\n                                                // Mc       SYLOTI NAGRI VOWEL SIGN OO\n                                                if (0xa827 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa880) {\n                                                    // Mn       SYLOTI NAGRI SIGN ALTERNATE HASANTA\n                                                    if (0xa82c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\n                                                    if (0xa880 <= code && code <= 0xa881) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa8ff) {\n                                            if (code < 0xa8c4) {\n                                                // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\n                                                if (0xa8b4 <= code && code <= 0xa8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa8e0) {\n                                                    // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\n                                                    if (0xa8c4 <= code && code <= 0xa8c5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\n                                                    if (0xa8e0 <= code && code <= 0xa8f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa926) {\n                                                // Mn       DEVANAGARI VOWEL SIGN AY\n                                                if (0xa8ff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa947) {\n                                                    // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\n                                                    if (0xa926 <= code && code <= 0xa92d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\n                                                    if (0xa947 <= code && code <= 0xa951) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xaab2) {\n                                if (code < 0xa9e5) {\n                                    if (code < 0xa9b4) {\n                                        if (code < 0xa980) {\n                                            if (code < 0xa960) {\n                                                // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\n                                                if (0xa952 <= code && code <= 0xa953) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\n                                                if (0xa960 <= code && code <= 0xa97c) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa983) {\n                                                // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\n                                                if (0xa980 <= code && code <= 0xa982) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       JAVANESE SIGN WIGNYAN\n                                                if (0xa983 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       JAVANESE SIGN CECAK TELU\n                                                if (0xa9b3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa9ba) {\n                                            if (code < 0xa9b6) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\n                                                if (0xa9b4 <= code && code <= 0xa9b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\n                                                if (0xa9b6 <= code && code <= 0xa9b9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa9bc) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\n                                                if (0xa9ba <= code && code <= 0xa9bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa9be) {\n                                                    // Mn   [2] JAVANESE VOWEL SIGN PEPET..JAVANESE CONSONANT SIGN KERET\n                                                    if (0xa9bc <= code && code <= 0xa9bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] JAVANESE CONSONANT SIGN PENGKAL..JAVANESE PANGKON\n                                                    if (0xa9be <= code && code <= 0xa9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaa35) {\n                                        if (code < 0xaa2f) {\n                                            if (code < 0xaa29) {\n                                                // Mn       MYANMAR SIGN SHAN SAW\n                                                if (0xa9e5 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\n                                                if (0xaa29 <= code && code <= 0xaa2e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa31) {\n                                                // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\n                                                if (0xaa2f <= code && code <= 0xaa30) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaa33) {\n                                                    // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\n                                                    if (0xaa31 <= code && code <= 0xaa32) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\n                                                    if (0xaa33 <= code && code <= 0xaa34) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaa4d) {\n                                            if (code < 0xaa43) {\n                                                // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\n                                                if (0xaa35 <= code && code <= 0xaa36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       CHAM CONSONANT SIGN FINAL NG\n                                                if (0xaa43 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       CHAM CONSONANT SIGN FINAL M\n                                                if (0xaa4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa7c) {\n                                                // Mc       CHAM CONSONANT SIGN FINAL H\n                                                if (0xaa4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN TAI LAING TONE-2\n                                                if (0xaa7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       TAI VIET MAI KANG\n                                                if (0xaab0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xabe6) {\n                                    if (code < 0xaaec) {\n                                        if (code < 0xaabe) {\n                                            if (code < 0xaab7) {\n                                                // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\n                                                if (0xaab2 <= code && code <= 0xaab4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\n                                                if (0xaab7 <= code && code <= 0xaab8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaac1) {\n                                                // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\n                                                if (0xaabe <= code && code <= 0xaabf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI VIET TONE MAI THO\n                                                if (0xaac1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MEETEI MAYEK VOWEL SIGN II\n                                                if (0xaaeb === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaaf6) {\n                                            if (code < 0xaaee) {\n                                                // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\n                                                if (0xaaec <= code && code <= 0xaaed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaaf5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\n                                                    if (0xaaee <= code && code <= 0xaaef) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\n                                                    if (0xaaf5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabe3) {\n                                                // Mn       MEETEI MAYEK VIRAMA\n                                                if (0xaaf6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xabe5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\n                                                    if (0xabe3 <= code && code <= 0xabe4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MEETEI MAYEK VOWEL SIGN ANAP\n                                                    if (0xabe5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac00) {\n                                        if (code < 0xabe9) {\n                                            if (code < 0xabe8) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\n                                                if (0xabe6 <= code && code <= 0xabe7) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MEETEI MAYEK VOWEL SIGN UNAP\n                                                if (0xabe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabec) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\n                                                if (0xabe9 <= code && code <= 0xabea) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MEETEI MAYEK LUM IYEK\n                                                if (0xabec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       MEETEI MAYEK APUN IYEK\n                                                if (0xabed === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xac1d) {\n                                            if (code < 0xac01) {\n                                                // Lo       HANGUL SYLLABLE GA\n                                                if (0xac00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\n                                                    if (0xac01 <= code && code <= 0xac1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GAE\n                                                    if (0xac1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac38) {\n                                                // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\n                                                if (0xac1d <= code && code <= 0xac37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac39) {\n                                                    // Lo       HANGUL SYLLABLE GYA\n                                                    if (0xac38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\n                                                    if (0xac39 <= code && code <= 0xac53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0xb5a1) {\n                    if (code < 0xb0ed) {\n                        if (code < 0xaea0) {\n                            if (code < 0xad6d) {\n                                if (code < 0xace0) {\n                                    if (code < 0xac8d) {\n                                        if (code < 0xac70) {\n                                            if (code < 0xac55) {\n                                                // Lo       HANGUL SYLLABLE GYAE\n                                                if (0xac54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\n                                                if (0xac55 <= code && code <= 0xac6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac71) {\n                                                // Lo       HANGUL SYLLABLE GEO\n                                                if (0xac70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac8c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\n                                                    if (0xac71 <= code && code <= 0xac8b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GE\n                                                    if (0xac8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaca9) {\n                                            if (code < 0xaca8) {\n                                                // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\n                                                if (0xac8d <= code && code <= 0xaca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYEO\n                                                if (0xaca8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacc4) {\n                                                // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\n                                                if (0xaca9 <= code && code <= 0xacc3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacc5) {\n                                                    // Lo       HANGUL SYLLABLE GYE\n                                                    if (0xacc4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\n                                                    if (0xacc5 <= code && code <= 0xacdf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xad19) {\n                                        if (code < 0xacfc) {\n                                            if (code < 0xace1) {\n                                                // Lo       HANGUL SYLLABLE GO\n                                                if (0xace0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\n                                                if (0xace1 <= code && code <= 0xacfb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacfd) {\n                                                // Lo       HANGUL SYLLABLE GWA\n                                                if (0xacfc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad18) {\n                                                    // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\n                                                    if (0xacfd <= code && code <= 0xad17) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GWAE\n                                                    if (0xad18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xad50) {\n                                            if (code < 0xad34) {\n                                                // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\n                                                if (0xad19 <= code && code <= 0xad33) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad35) {\n                                                    // Lo       HANGUL SYLLABLE GOE\n                                                    if (0xad34 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\n                                                    if (0xad35 <= code && code <= 0xad4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xad51) {\n                                                // Lo       HANGUL SYLLABLE GYO\n                                                if (0xad50 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad6c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\n                                                    if (0xad51 <= code && code <= 0xad6b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GU\n                                                    if (0xad6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xadf9) {\n                                    if (code < 0xadc0) {\n                                        if (code < 0xad89) {\n                                            if (code < 0xad88) {\n                                                // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\n                                                if (0xad6d <= code && code <= 0xad87) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GWEO\n                                                if (0xad88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xada4) {\n                                                // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\n                                                if (0xad89 <= code && code <= 0xada3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xada5) {\n                                                    // Lo       HANGUL SYLLABLE GWE\n                                                    if (0xada4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\n                                                    if (0xada5 <= code && code <= 0xadbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaddc) {\n                                            if (code < 0xadc1) {\n                                                // Lo       HANGUL SYLLABLE GWI\n                                                if (0xadc0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\n                                                if (0xadc1 <= code && code <= 0xaddb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaddd) {\n                                                // Lo       HANGUL SYLLABLE GYU\n                                                if (0xaddc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xadf8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\n                                                    if (0xaddd <= code && code <= 0xadf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GEU\n                                                    if (0xadf8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xae4c) {\n                                        if (code < 0xae15) {\n                                            if (code < 0xae14) {\n                                                // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\n                                                if (0xadf9 <= code && code <= 0xae13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYI\n                                                if (0xae14 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae30) {\n                                                // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\n                                                if (0xae15 <= code && code <= 0xae2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae31) {\n                                                    // Lo       HANGUL SYLLABLE GI\n                                                    if (0xae30 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\n                                                    if (0xae31 <= code && code <= 0xae4b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae69) {\n                                            if (code < 0xae4d) {\n                                                // Lo       HANGUL SYLLABLE GGA\n                                                if (0xae4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae68) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\n                                                    if (0xae4d <= code && code <= 0xae67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGAE\n                                                    if (0xae68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae84) {\n                                                // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\n                                                if (0xae69 <= code && code <= 0xae83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae85) {\n                                                    // Lo       HANGUL SYLLABLE GGYA\n                                                    if (0xae84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\n                                                    if (0xae85 <= code && code <= 0xae9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xafb9) {\n                                if (code < 0xaf2c) {\n                                    if (code < 0xaed9) {\n                                        if (code < 0xaebc) {\n                                            if (code < 0xaea1) {\n                                                // Lo       HANGUL SYLLABLE GGYAE\n                                                if (0xaea0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\n                                                if (0xaea1 <= code && code <= 0xaebb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaebd) {\n                                                // Lo       HANGUL SYLLABLE GGEO\n                                                if (0xaebc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaed8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\n                                                    if (0xaebd <= code && code <= 0xaed7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGE\n                                                    if (0xaed8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaef5) {\n                                            if (code < 0xaef4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\n                                                if (0xaed9 <= code && code <= 0xaef3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGYEO\n                                                if (0xaef4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf10) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\n                                                if (0xaef5 <= code && code <= 0xaf0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf11) {\n                                                    // Lo       HANGUL SYLLABLE GGYE\n                                                    if (0xaf10 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\n                                                    if (0xaf11 <= code && code <= 0xaf2b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaf65) {\n                                        if (code < 0xaf48) {\n                                            if (code < 0xaf2d) {\n                                                // Lo       HANGUL SYLLABLE GGO\n                                                if (0xaf2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\n                                                if (0xaf2d <= code && code <= 0xaf47) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf49) {\n                                                // Lo       HANGUL SYLLABLE GGWA\n                                                if (0xaf48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf64) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\n                                                    if (0xaf49 <= code && code <= 0xaf63) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGWAE\n                                                    if (0xaf64 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaf9c) {\n                                            if (code < 0xaf80) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\n                                                if (0xaf65 <= code && code <= 0xaf7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf81) {\n                                                    // Lo       HANGUL SYLLABLE GGOE\n                                                    if (0xaf80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\n                                                    if (0xaf81 <= code && code <= 0xaf9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf9d) {\n                                                // Lo       HANGUL SYLLABLE GGYO\n                                                if (0xaf9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xafb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\n                                                    if (0xaf9d <= code && code <= 0xafb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGU\n                                                    if (0xafb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb060) {\n                                    if (code < 0xb00c) {\n                                        if (code < 0xafd5) {\n                                            if (code < 0xafd4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\n                                                if (0xafb9 <= code && code <= 0xafd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGWEO\n                                                if (0xafd4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaff0) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\n                                                if (0xafd5 <= code && code <= 0xafef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaff1) {\n                                                    // Lo       HANGUL SYLLABLE GGWE\n                                                    if (0xaff0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\n                                                    if (0xaff1 <= code && code <= 0xb00b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb029) {\n                                            if (code < 0xb00d) {\n                                                // Lo       HANGUL SYLLABLE GGWI\n                                                if (0xb00c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb028) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\n                                                    if (0xb00d <= code && code <= 0xb027) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGYU\n                                                    if (0xb028 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb044) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\n                                                if (0xb029 <= code && code <= 0xb043) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb045) {\n                                                    // Lo       HANGUL SYLLABLE GGEU\n                                                    if (0xb044 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\n                                                    if (0xb045 <= code && code <= 0xb05f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb099) {\n                                        if (code < 0xb07c) {\n                                            if (code < 0xb061) {\n                                                // Lo       HANGUL SYLLABLE GGYI\n                                                if (0xb060 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\n                                                if (0xb061 <= code && code <= 0xb07b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb07d) {\n                                                // Lo       HANGUL SYLLABLE GGI\n                                                if (0xb07c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb098) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\n                                                    if (0xb07d <= code && code <= 0xb097) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NA\n                                                    if (0xb098 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb0d0) {\n                                            if (code < 0xb0b4) {\n                                                // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\n                                                if (0xb099 <= code && code <= 0xb0b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0b5) {\n                                                    // Lo       HANGUL SYLLABLE NAE\n                                                    if (0xb0b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\n                                                    if (0xb0b5 <= code && code <= 0xb0cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb0d1) {\n                                                // Lo       HANGUL SYLLABLE NYA\n                                                if (0xb0d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\n                                                    if (0xb0d1 <= code && code <= 0xb0eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYAE\n                                                    if (0xb0ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xb354) {\n                            if (code < 0xb220) {\n                                if (code < 0xb179) {\n                                    if (code < 0xb140) {\n                                        if (code < 0xb109) {\n                                            if (code < 0xb108) {\n                                                // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\n                                                if (0xb0ed <= code && code <= 0xb107) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NEO\n                                                if (0xb108 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb124) {\n                                                // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\n                                                if (0xb109 <= code && code <= 0xb123) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb125) {\n                                                    // Lo       HANGUL SYLLABLE NE\n                                                    if (0xb124 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\n                                                    if (0xb125 <= code && code <= 0xb13f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb15c) {\n                                            if (code < 0xb141) {\n                                                // Lo       HANGUL SYLLABLE NYEO\n                                                if (0xb140 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\n                                                if (0xb141 <= code && code <= 0xb15b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb15d) {\n                                                // Lo       HANGUL SYLLABLE NYE\n                                                if (0xb15c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb178) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\n                                                    if (0xb15d <= code && code <= 0xb177) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NO\n                                                    if (0xb178 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb1cc) {\n                                        if (code < 0xb195) {\n                                            if (code < 0xb194) {\n                                                // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\n                                                if (0xb179 <= code && code <= 0xb193) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NWA\n                                                if (0xb194 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb1b0) {\n                                                // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\n                                                if (0xb195 <= code && code <= 0xb1af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1b1) {\n                                                    // Lo       HANGUL SYLLABLE NWAE\n                                                    if (0xb1b0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\n                                                    if (0xb1b1 <= code && code <= 0xb1cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb1e9) {\n                                            if (code < 0xb1cd) {\n                                                // Lo       HANGUL SYLLABLE NOE\n                                                if (0xb1cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\n                                                    if (0xb1cd <= code && code <= 0xb1e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYO\n                                                    if (0xb1e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb204) {\n                                                // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\n                                                if (0xb1e9 <= code && code <= 0xb203) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb205) {\n                                                    // Lo       HANGUL SYLLABLE NU\n                                                    if (0xb204 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\n                                                    if (0xb205 <= code && code <= 0xb21f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb2ad) {\n                                    if (code < 0xb259) {\n                                        if (code < 0xb23c) {\n                                            if (code < 0xb221) {\n                                                // Lo       HANGUL SYLLABLE NWEO\n                                                if (0xb220 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\n                                                if (0xb221 <= code && code <= 0xb23b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb23d) {\n                                                // Lo       HANGUL SYLLABLE NWE\n                                                if (0xb23c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb258) {\n                                                    // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\n                                                    if (0xb23d <= code && code <= 0xb257) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NWI\n                                                    if (0xb258 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb290) {\n                                            if (code < 0xb274) {\n                                                // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\n                                                if (0xb259 <= code && code <= 0xb273) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb275) {\n                                                    // Lo       HANGUL SYLLABLE NYU\n                                                    if (0xb274 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\n                                                    if (0xb275 <= code && code <= 0xb28f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb291) {\n                                                // Lo       HANGUL SYLLABLE NEU\n                                                if (0xb290 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\n                                                    if (0xb291 <= code && code <= 0xb2ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYI\n                                                    if (0xb2ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb300) {\n                                        if (code < 0xb2c9) {\n                                            if (code < 0xb2c8) {\n                                                // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\n                                                if (0xb2ad <= code && code <= 0xb2c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NI\n                                                if (0xb2c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb2e4) {\n                                                // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\n                                                if (0xb2c9 <= code && code <= 0xb2e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2e5) {\n                                                    // Lo       HANGUL SYLLABLE DA\n                                                    if (0xb2e4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\n                                                    if (0xb2e5 <= code && code <= 0xb2ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb31d) {\n                                            if (code < 0xb301) {\n                                                // Lo       HANGUL SYLLABLE DAE\n                                                if (0xb300 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb31c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\n                                                    if (0xb301 <= code && code <= 0xb31b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYA\n                                                    if (0xb31c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb338) {\n                                                // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\n                                                if (0xb31d <= code && code <= 0xb337) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb339) {\n                                                    // Lo       HANGUL SYLLABLE DYAE\n                                                    if (0xb338 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\n                                                    if (0xb339 <= code && code <= 0xb353) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb46d) {\n                                if (code < 0xb3e0) {\n                                    if (code < 0xb38d) {\n                                        if (code < 0xb370) {\n                                            if (code < 0xb355) {\n                                                // Lo       HANGUL SYLLABLE DEO\n                                                if (0xb354 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\n                                                if (0xb355 <= code && code <= 0xb36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb371) {\n                                                // Lo       HANGUL SYLLABLE DE\n                                                if (0xb370 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb38c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\n                                                    if (0xb371 <= code && code <= 0xb38b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYEO\n                                                    if (0xb38c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb3a9) {\n                                            if (code < 0xb3a8) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\n                                                if (0xb38d <= code && code <= 0xb3a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DYE\n                                                if (0xb3a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3c4) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\n                                                if (0xb3a9 <= code && code <= 0xb3c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb3c5) {\n                                                    // Lo       HANGUL SYLLABLE DO\n                                                    if (0xb3c4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\n                                                    if (0xb3c5 <= code && code <= 0xb3df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb419) {\n                                        if (code < 0xb3fc) {\n                                            if (code < 0xb3e1) {\n                                                // Lo       HANGUL SYLLABLE DWA\n                                                if (0xb3e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\n                                                if (0xb3e1 <= code && code <= 0xb3fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3fd) {\n                                                // Lo       HANGUL SYLLABLE DWAE\n                                                if (0xb3fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb418) {\n                                                    // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\n                                                    if (0xb3fd <= code && code <= 0xb417) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DOE\n                                                    if (0xb418 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb450) {\n                                            if (code < 0xb434) {\n                                                // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\n                                                if (0xb419 <= code && code <= 0xb433) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb435) {\n                                                    // Lo       HANGUL SYLLABLE DYO\n                                                    if (0xb434 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\n                                                    if (0xb435 <= code && code <= 0xb44f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb451) {\n                                                // Lo       HANGUL SYLLABLE DU\n                                                if (0xb450 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb46c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\n                                                    if (0xb451 <= code && code <= 0xb46b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DWEO\n                                                    if (0xb46c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb514) {\n                                    if (code < 0xb4c0) {\n                                        if (code < 0xb489) {\n                                            if (code < 0xb488) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\n                                                if (0xb46d <= code && code <= 0xb487) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DWE\n                                                if (0xb488 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4a4) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\n                                                if (0xb489 <= code && code <= 0xb4a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4a5) {\n                                                    // Lo       HANGUL SYLLABLE DWI\n                                                    if (0xb4a4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\n                                                    if (0xb4a5 <= code && code <= 0xb4bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4dd) {\n                                            if (code < 0xb4c1) {\n                                                // Lo       HANGUL SYLLABLE DYU\n                                                if (0xb4c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\n                                                    if (0xb4c1 <= code && code <= 0xb4db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DEU\n                                                    if (0xb4dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4f8) {\n                                                // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\n                                                if (0xb4dd <= code && code <= 0xb4f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4f9) {\n                                                    // Lo       HANGUL SYLLABLE DYI\n                                                    if (0xb4f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\n                                                    if (0xb4f9 <= code && code <= 0xb513) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb54d) {\n                                        if (code < 0xb530) {\n                                            if (code < 0xb515) {\n                                                // Lo       HANGUL SYLLABLE DI\n                                                if (0xb514 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\n                                                if (0xb515 <= code && code <= 0xb52f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb531) {\n                                                // Lo       HANGUL SYLLABLE DDA\n                                                if (0xb530 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb54c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\n                                                    if (0xb531 <= code && code <= 0xb54b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDAE\n                                                    if (0xb54c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb584) {\n                                            if (code < 0xb568) {\n                                                // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\n                                                if (0xb54d <= code && code <= 0xb567) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb569) {\n                                                    // Lo       HANGUL SYLLABLE DDYA\n                                                    if (0xb568 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\n                                                    if (0xb569 <= code && code <= 0xb583) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb585) {\n                                                // Lo       HANGUL SYLLABLE DDYAE\n                                                if (0xb584 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\n                                                    if (0xb585 <= code && code <= 0xb59f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDEO\n                                                    if (0xb5a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xba55) {\n                        if (code < 0xb808) {\n                            if (code < 0xb6d4) {\n                                if (code < 0xb62d) {\n                                    if (code < 0xb5f4) {\n                                        if (code < 0xb5bd) {\n                                            if (code < 0xb5bc) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\n                                                if (0xb5a1 <= code && code <= 0xb5bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDE\n                                                if (0xb5bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb5d8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\n                                                if (0xb5bd <= code && code <= 0xb5d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5d9) {\n                                                    // Lo       HANGUL SYLLABLE DDYEO\n                                                    if (0xb5d8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\n                                                    if (0xb5d9 <= code && code <= 0xb5f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb610) {\n                                            if (code < 0xb5f5) {\n                                                // Lo       HANGUL SYLLABLE DDYE\n                                                if (0xb5f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\n                                                if (0xb5f5 <= code && code <= 0xb60f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb611) {\n                                                // Lo       HANGUL SYLLABLE DDO\n                                                if (0xb610 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\n                                                    if (0xb611 <= code && code <= 0xb62b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDWA\n                                                    if (0xb62c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb680) {\n                                        if (code < 0xb649) {\n                                            if (code < 0xb648) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\n                                                if (0xb62d <= code && code <= 0xb647) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDWAE\n                                                if (0xb648 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb664) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\n                                                if (0xb649 <= code && code <= 0xb663) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb665) {\n                                                    // Lo       HANGUL SYLLABLE DDOE\n                                                    if (0xb664 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\n                                                    if (0xb665 <= code && code <= 0xb67f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb69d) {\n                                            if (code < 0xb681) {\n                                                // Lo       HANGUL SYLLABLE DDYO\n                                                if (0xb680 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb69c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\n                                                    if (0xb681 <= code && code <= 0xb69b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDU\n                                                    if (0xb69c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6b8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\n                                                if (0xb69d <= code && code <= 0xb6b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb6b9) {\n                                                    // Lo       HANGUL SYLLABLE DDWEO\n                                                    if (0xb6b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\n                                                    if (0xb6b9 <= code && code <= 0xb6d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb761) {\n                                    if (code < 0xb70d) {\n                                        if (code < 0xb6f0) {\n                                            if (code < 0xb6d5) {\n                                                // Lo       HANGUL SYLLABLE DDWE\n                                                if (0xb6d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\n                                                if (0xb6d5 <= code && code <= 0xb6ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6f1) {\n                                                // Lo       HANGUL SYLLABLE DDWI\n                                                if (0xb6f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb70c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\n                                                    if (0xb6f1 <= code && code <= 0xb70b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDYU\n                                                    if (0xb70c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb744) {\n                                            if (code < 0xb728) {\n                                                // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\n                                                if (0xb70d <= code && code <= 0xb727) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb729) {\n                                                    // Lo       HANGUL SYLLABLE DDEU\n                                                    if (0xb728 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\n                                                    if (0xb729 <= code && code <= 0xb743) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb745) {\n                                                // Lo       HANGUL SYLLABLE DDYI\n                                                if (0xb744 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb760) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\n                                                    if (0xb745 <= code && code <= 0xb75f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDI\n                                                    if (0xb760 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb7b4) {\n                                        if (code < 0xb77d) {\n                                            if (code < 0xb77c) {\n                                                // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\n                                                if (0xb761 <= code && code <= 0xb77b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RA\n                                                if (0xb77c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb798) {\n                                                // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\n                                                if (0xb77d <= code && code <= 0xb797) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb799) {\n                                                    // Lo       HANGUL SYLLABLE RAE\n                                                    if (0xb798 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\n                                                    if (0xb799 <= code && code <= 0xb7b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb7d1) {\n                                            if (code < 0xb7b5) {\n                                                // Lo       HANGUL SYLLABLE RYA\n                                                if (0xb7b4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7d0) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\n                                                    if (0xb7b5 <= code && code <= 0xb7cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYAE\n                                                    if (0xb7d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb7ec) {\n                                                // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\n                                                if (0xb7d1 <= code && code <= 0xb7eb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7ed) {\n                                                    // Lo       HANGUL SYLLABLE REO\n                                                    if (0xb7ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\n                                                    if (0xb7ed <= code && code <= 0xb807) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb921) {\n                                if (code < 0xb894) {\n                                    if (code < 0xb841) {\n                                        if (code < 0xb824) {\n                                            if (code < 0xb809) {\n                                                // Lo       HANGUL SYLLABLE RE\n                                                if (0xb808 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\n                                                if (0xb809 <= code && code <= 0xb823) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb825) {\n                                                // Lo       HANGUL SYLLABLE RYEO\n                                                if (0xb824 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb840) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\n                                                    if (0xb825 <= code && code <= 0xb83f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYE\n                                                    if (0xb840 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb85d) {\n                                            if (code < 0xb85c) {\n                                                // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\n                                                if (0xb841 <= code && code <= 0xb85b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RO\n                                                if (0xb85c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb878) {\n                                                // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\n                                                if (0xb85d <= code && code <= 0xb877) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb879) {\n                                                    // Lo       HANGUL SYLLABLE RWA\n                                                    if (0xb878 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\n                                                    if (0xb879 <= code && code <= 0xb893) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb8cd) {\n                                        if (code < 0xb8b0) {\n                                            if (code < 0xb895) {\n                                                // Lo       HANGUL SYLLABLE RWAE\n                                                if (0xb894 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\n                                                if (0xb895 <= code && code <= 0xb8af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb8b1) {\n                                                // Lo       HANGUL SYLLABLE ROE\n                                                if (0xb8b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8cc) {\n                                                    // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\n                                                    if (0xb8b1 <= code && code <= 0xb8cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYO\n                                                    if (0xb8cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb904) {\n                                            if (code < 0xb8e8) {\n                                                // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\n                                                if (0xb8cd <= code && code <= 0xb8e7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8e9) {\n                                                    // Lo       HANGUL SYLLABLE RU\n                                                    if (0xb8e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\n                                                    if (0xb8e9 <= code && code <= 0xb903) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb905) {\n                                                // Lo       HANGUL SYLLABLE RWEO\n                                                if (0xb904 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb920) {\n                                                    // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\n                                                    if (0xb905 <= code && code <= 0xb91f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RWE\n                                                    if (0xb920 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb9c8) {\n                                    if (code < 0xb974) {\n                                        if (code < 0xb93d) {\n                                            if (code < 0xb93c) {\n                                                // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\n                                                if (0xb921 <= code && code <= 0xb93b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RWI\n                                                if (0xb93c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb958) {\n                                                // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\n                                                if (0xb93d <= code && code <= 0xb957) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb959) {\n                                                    // Lo       HANGUL SYLLABLE RYU\n                                                    if (0xb958 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\n                                                    if (0xb959 <= code && code <= 0xb973) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb991) {\n                                            if (code < 0xb975) {\n                                                // Lo       HANGUL SYLLABLE REU\n                                                if (0xb974 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb990) {\n                                                    // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\n                                                    if (0xb975 <= code && code <= 0xb98f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYI\n                                                    if (0xb990 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9ac) {\n                                                // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\n                                                if (0xb991 <= code && code <= 0xb9ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb9ad) {\n                                                    // Lo       HANGUL SYLLABLE RI\n                                                    if (0xb9ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\n                                                    if (0xb9ad <= code && code <= 0xb9c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xba01) {\n                                        if (code < 0xb9e4) {\n                                            if (code < 0xb9c9) {\n                                                // Lo       HANGUL SYLLABLE MA\n                                                if (0xb9c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\n                                                if (0xb9c9 <= code && code <= 0xb9e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9e5) {\n                                                // Lo       HANGUL SYLLABLE MAE\n                                                if (0xb9e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba00) {\n                                                    // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\n                                                    if (0xb9e5 <= code && code <= 0xb9ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MYA\n                                                    if (0xba00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xba38) {\n                                            if (code < 0xba1c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\n                                                if (0xba01 <= code && code <= 0xba1b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba1d) {\n                                                    // Lo       HANGUL SYLLABLE MYAE\n                                                    if (0xba1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\n                                                    if (0xba1d <= code && code <= 0xba37) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba39) {\n                                                // Lo       HANGUL SYLLABLE MEO\n                                                if (0xba38 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba54) {\n                                                    // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\n                                                    if (0xba39 <= code && code <= 0xba53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE ME\n                                                    if (0xba54 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xbcbc) {\n                            if (code < 0xbb88) {\n                                if (code < 0xbae1) {\n                                    if (code < 0xbaa8) {\n                                        if (code < 0xba71) {\n                                            if (code < 0xba70) {\n                                                // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\n                                                if (0xba55 <= code && code <= 0xba6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MYEO\n                                                if (0xba70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba8c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\n                                                if (0xba71 <= code && code <= 0xba8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba8d) {\n                                                    // Lo       HANGUL SYLLABLE MYE\n                                                    if (0xba8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\n                                                    if (0xba8d <= code && code <= 0xbaa7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbac4) {\n                                            if (code < 0xbaa9) {\n                                                // Lo       HANGUL SYLLABLE MO\n                                                if (0xbaa8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\n                                                if (0xbaa9 <= code && code <= 0xbac3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbac5) {\n                                                // Lo       HANGUL SYLLABLE MWA\n                                                if (0xbac4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbae0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\n                                                    if (0xbac5 <= code && code <= 0xbadf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWAE\n                                                    if (0xbae0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbb34) {\n                                        if (code < 0xbafd) {\n                                            if (code < 0xbafc) {\n                                                // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\n                                                if (0xbae1 <= code && code <= 0xbafb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MOE\n                                                if (0xbafc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb18) {\n                                                // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\n                                                if (0xbafd <= code && code <= 0xbb17) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb19) {\n                                                    // Lo       HANGUL SYLLABLE MYO\n                                                    if (0xbb18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\n                                                    if (0xbb19 <= code && code <= 0xbb33) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbb51) {\n                                            if (code < 0xbb35) {\n                                                // Lo       HANGUL SYLLABLE MU\n                                                if (0xbb34 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb50) {\n                                                    // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\n                                                    if (0xbb35 <= code && code <= 0xbb4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWEO\n                                                    if (0xbb50 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb6c) {\n                                                // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\n                                                if (0xbb51 <= code && code <= 0xbb6b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb6d) {\n                                                    // Lo       HANGUL SYLLABLE MWE\n                                                    if (0xbb6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\n                                                    if (0xbb6d <= code && code <= 0xbb87) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbc15) {\n                                    if (code < 0xbbc1) {\n                                        if (code < 0xbba4) {\n                                            if (code < 0xbb89) {\n                                                // Lo       HANGUL SYLLABLE MWI\n                                                if (0xbb88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\n                                                if (0xbb89 <= code && code <= 0xbba3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbba5) {\n                                                // Lo       HANGUL SYLLABLE MYU\n                                                if (0xbba4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbc0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\n                                                    if (0xbba5 <= code && code <= 0xbbbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MEU\n                                                    if (0xbbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbbf8) {\n                                            if (code < 0xbbdc) {\n                                                // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\n                                                if (0xbbc1 <= code && code <= 0xbbdb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbdd) {\n                                                    // Lo       HANGUL SYLLABLE MYI\n                                                    if (0xbbdc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\n                                                    if (0xbbdd <= code && code <= 0xbbf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbbf9) {\n                                                // Lo       HANGUL SYLLABLE MI\n                                                if (0xbbf8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc14) {\n                                                    // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\n                                                    if (0xbbf9 <= code && code <= 0xbc13) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BA\n                                                    if (0xbc14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc68) {\n                                        if (code < 0xbc31) {\n                                            if (code < 0xbc30) {\n                                                // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\n                                                if (0xbc15 <= code && code <= 0xbc2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BAE\n                                                if (0xbc30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc4c) {\n                                                // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\n                                                if (0xbc31 <= code && code <= 0xbc4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc4d) {\n                                                    // Lo       HANGUL SYLLABLE BYA\n                                                    if (0xbc4c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\n                                                    if (0xbc4d <= code && code <= 0xbc67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbc85) {\n                                            if (code < 0xbc69) {\n                                                // Lo       HANGUL SYLLABLE BYAE\n                                                if (0xbc68 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc84) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\n                                                    if (0xbc69 <= code && code <= 0xbc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BEO\n                                                    if (0xbc84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbca0) {\n                                                // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\n                                                if (0xbc85 <= code && code <= 0xbc9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbca1) {\n                                                    // Lo       HANGUL SYLLABLE BE\n                                                    if (0xbca0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\n                                                    if (0xbca1 <= code && code <= 0xbcbb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xbdd5) {\n                                if (code < 0xbd48) {\n                                    if (code < 0xbcf5) {\n                                        if (code < 0xbcd8) {\n                                            if (code < 0xbcbd) {\n                                                // Lo       HANGUL SYLLABLE BYEO\n                                                if (0xbcbc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\n                                                if (0xbcbd <= code && code <= 0xbcd7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbcd9) {\n                                                // Lo       HANGUL SYLLABLE BYE\n                                                if (0xbcd8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcf4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\n                                                    if (0xbcd9 <= code && code <= 0xbcf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BO\n                                                    if (0xbcf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd11) {\n                                            if (code < 0xbd10) {\n                                                // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\n                                                if (0xbcf5 <= code && code <= 0xbd0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BWA\n                                                if (0xbd10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd2c) {\n                                                // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\n                                                if (0xbd11 <= code && code <= 0xbd2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd2d) {\n                                                    // Lo       HANGUL SYLLABLE BWAE\n                                                    if (0xbd2c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\n                                                    if (0xbd2d <= code && code <= 0xbd47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbd81) {\n                                        if (code < 0xbd64) {\n                                            if (code < 0xbd49) {\n                                                // Lo       HANGUL SYLLABLE BOE\n                                                if (0xbd48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\n                                                if (0xbd49 <= code && code <= 0xbd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd65) {\n                                                // Lo       HANGUL SYLLABLE BYO\n                                                if (0xbd64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd80) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\n                                                    if (0xbd65 <= code && code <= 0xbd7f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BU\n                                                    if (0xbd80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbdb8) {\n                                            if (code < 0xbd9c) {\n                                                // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\n                                                if (0xbd81 <= code && code <= 0xbd9b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd9d) {\n                                                    // Lo       HANGUL SYLLABLE BWEO\n                                                    if (0xbd9c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\n                                                    if (0xbd9d <= code && code <= 0xbdb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbdb9) {\n                                                // Lo       HANGUL SYLLABLE BWE\n                                                if (0xbdb8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbdd4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\n                                                    if (0xbdb9 <= code && code <= 0xbdd3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BWI\n                                                    if (0xbdd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbe7c) {\n                                    if (code < 0xbe28) {\n                                        if (code < 0xbdf1) {\n                                            if (code < 0xbdf0) {\n                                                // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\n                                                if (0xbdd5 <= code && code <= 0xbdef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BYU\n                                                if (0xbdf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe0c) {\n                                                // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\n                                                if (0xbdf1 <= code && code <= 0xbe0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe0d) {\n                                                    // Lo       HANGUL SYLLABLE BEU\n                                                    if (0xbe0c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\n                                                    if (0xbe0d <= code && code <= 0xbe27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbe45) {\n                                            if (code < 0xbe29) {\n                                                // Lo       HANGUL SYLLABLE BYI\n                                                if (0xbe28 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe44) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\n                                                    if (0xbe29 <= code && code <= 0xbe43) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BI\n                                                    if (0xbe44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe60) {\n                                                // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\n                                                if (0xbe45 <= code && code <= 0xbe5f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe61) {\n                                                    // Lo       HANGUL SYLLABLE BBA\n                                                    if (0xbe60 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\n                                                    if (0xbe61 <= code && code <= 0xbe7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbeb5) {\n                                        if (code < 0xbe98) {\n                                            if (code < 0xbe7d) {\n                                                // Lo       HANGUL SYLLABLE BBAE\n                                                if (0xbe7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\n                                                if (0xbe7d <= code && code <= 0xbe97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe99) {\n                                                // Lo       HANGUL SYLLABLE BBYA\n                                                if (0xbe98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbeb4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\n                                                    if (0xbe99 <= code && code <= 0xbeb3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYAE\n                                                    if (0xbeb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbeec) {\n                                            if (code < 0xbed0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\n                                                if (0xbeb5 <= code && code <= 0xbecf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbed1) {\n                                                    // Lo       HANGUL SYLLABLE BBEO\n                                                    if (0xbed0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\n                                                    if (0xbed1 <= code && code <= 0xbeeb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbeed) {\n                                                // Lo       HANGUL SYLLABLE BBE\n                                                if (0xbeec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf08) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\n                                                    if (0xbeed <= code && code <= 0xbf07) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYEO\n                                                    if (0xbf08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0xd1d8) {\n                if (code < 0xc870) {\n                    if (code < 0xc3bc) {\n                        if (code < 0xc155) {\n                            if (code < 0xc03c) {\n                                if (code < 0xbf95) {\n                                    if (code < 0xbf5c) {\n                                        if (code < 0xbf25) {\n                                            if (code < 0xbf24) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\n                                                if (0xbf09 <= code && code <= 0xbf23) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYE\n                                                if (0xbf24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf40) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\n                                                if (0xbf25 <= code && code <= 0xbf3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf41) {\n                                                    // Lo       HANGUL SYLLABLE BBO\n                                                    if (0xbf40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\n                                                    if (0xbf41 <= code && code <= 0xbf5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbf78) {\n                                            if (code < 0xbf5d) {\n                                                // Lo       HANGUL SYLLABLE BBWA\n                                                if (0xbf5c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\n                                                if (0xbf5d <= code && code <= 0xbf77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf79) {\n                                                // Lo       HANGUL SYLLABLE BBWAE\n                                                if (0xbf78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf94) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\n                                                    if (0xbf79 <= code && code <= 0xbf93) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBOE\n                                                    if (0xbf94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbfe8) {\n                                        if (code < 0xbfb1) {\n                                            if (code < 0xbfb0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\n                                                if (0xbf95 <= code && code <= 0xbfaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYO\n                                                if (0xbfb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbfcc) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\n                                                if (0xbfb1 <= code && code <= 0xbfcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbfcd) {\n                                                    // Lo       HANGUL SYLLABLE BBU\n                                                    if (0xbfcc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\n                                                    if (0xbfcd <= code && code <= 0xbfe7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc005) {\n                                            if (code < 0xbfe9) {\n                                                // Lo       HANGUL SYLLABLE BBWEO\n                                                if (0xbfe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc004) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\n                                                    if (0xbfe9 <= code && code <= 0xc003) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBWE\n                                                    if (0xc004 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc020) {\n                                                // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\n                                                if (0xc005 <= code && code <= 0xc01f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc021) {\n                                                    // Lo       HANGUL SYLLABLE BBWI\n                                                    if (0xc020 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\n                                                    if (0xc021 <= code && code <= 0xc03b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc0c8) {\n                                    if (code < 0xc075) {\n                                        if (code < 0xc058) {\n                                            if (code < 0xc03d) {\n                                                // Lo       HANGUL SYLLABLE BBYU\n                                                if (0xc03c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\n                                                if (0xc03d <= code && code <= 0xc057) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc059) {\n                                                // Lo       HANGUL SYLLABLE BBEU\n                                                if (0xc058 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc074) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\n                                                    if (0xc059 <= code && code <= 0xc073) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYI\n                                                    if (0xc074 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc091) {\n                                            if (code < 0xc090) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\n                                                if (0xc075 <= code && code <= 0xc08f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBI\n                                                if (0xc090 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0ac) {\n                                                // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\n                                                if (0xc091 <= code && code <= 0xc0ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc0ad) {\n                                                    // Lo       HANGUL SYLLABLE SA\n                                                    if (0xc0ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\n                                                    if (0xc0ad <= code && code <= 0xc0c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc101) {\n                                        if (code < 0xc0e4) {\n                                            if (code < 0xc0c9) {\n                                                // Lo       HANGUL SYLLABLE SAE\n                                                if (0xc0c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\n                                                if (0xc0c9 <= code && code <= 0xc0e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0e5) {\n                                                // Lo       HANGUL SYLLABLE SYA\n                                                if (0xc0e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc100) {\n                                                    // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\n                                                    if (0xc0e5 <= code && code <= 0xc0ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYAE\n                                                    if (0xc100 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc138) {\n                                            if (code < 0xc11c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\n                                                if (0xc101 <= code && code <= 0xc11b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc11d) {\n                                                    // Lo       HANGUL SYLLABLE SEO\n                                                    if (0xc11c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\n                                                    if (0xc11d <= code && code <= 0xc137) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc139) {\n                                                // Lo       HANGUL SYLLABLE SE\n                                                if (0xc138 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc154) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\n                                                    if (0xc139 <= code && code <= 0xc153) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYEO\n                                                    if (0xc154 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc288) {\n                                if (code < 0xc1e1) {\n                                    if (code < 0xc1a8) {\n                                        if (code < 0xc171) {\n                                            if (code < 0xc170) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\n                                                if (0xc155 <= code && code <= 0xc16f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYE\n                                                if (0xc170 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc18c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\n                                                if (0xc171 <= code && code <= 0xc18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc18d) {\n                                                    // Lo       HANGUL SYLLABLE SO\n                                                    if (0xc18c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\n                                                    if (0xc18d <= code && code <= 0xc1a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc1c4) {\n                                            if (code < 0xc1a9) {\n                                                // Lo       HANGUL SYLLABLE SWA\n                                                if (0xc1a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\n                                                if (0xc1a9 <= code && code <= 0xc1c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc1c5) {\n                                                // Lo       HANGUL SYLLABLE SWAE\n                                                if (0xc1c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc1e0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\n                                                    if (0xc1c5 <= code && code <= 0xc1df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SOE\n                                                    if (0xc1e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc234) {\n                                        if (code < 0xc1fd) {\n                                            if (code < 0xc1fc) {\n                                                // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\n                                                if (0xc1e1 <= code && code <= 0xc1fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYO\n                                                if (0xc1fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc218) {\n                                                // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\n                                                if (0xc1fd <= code && code <= 0xc217) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc219) {\n                                                    // Lo       HANGUL SYLLABLE SU\n                                                    if (0xc218 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\n                                                    if (0xc219 <= code && code <= 0xc233) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc251) {\n                                            if (code < 0xc235) {\n                                                // Lo       HANGUL SYLLABLE SWEO\n                                                if (0xc234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc250) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\n                                                    if (0xc235 <= code && code <= 0xc24f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SWE\n                                                    if (0xc250 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc26c) {\n                                                // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\n                                                if (0xc251 <= code && code <= 0xc26b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc26d) {\n                                                    // Lo       HANGUL SYLLABLE SWI\n                                                    if (0xc26c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\n                                                    if (0xc26d <= code && code <= 0xc287) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc315) {\n                                    if (code < 0xc2c1) {\n                                        if (code < 0xc2a4) {\n                                            if (code < 0xc289) {\n                                                // Lo       HANGUL SYLLABLE SYU\n                                                if (0xc288 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\n                                                if (0xc289 <= code && code <= 0xc2a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2a5) {\n                                                // Lo       HANGUL SYLLABLE SEU\n                                                if (0xc2a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2c0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\n                                                    if (0xc2a5 <= code && code <= 0xc2bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYI\n                                                    if (0xc2c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc2f8) {\n                                            if (code < 0xc2dc) {\n                                                // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\n                                                if (0xc2c1 <= code && code <= 0xc2db) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2dd) {\n                                                    // Lo       HANGUL SYLLABLE SI\n                                                    if (0xc2dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\n                                                    if (0xc2dd <= code && code <= 0xc2f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2f9) {\n                                                // Lo       HANGUL SYLLABLE SSA\n                                                if (0xc2f8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc314) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\n                                                    if (0xc2f9 <= code && code <= 0xc313) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSAE\n                                                    if (0xc314 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc368) {\n                                        if (code < 0xc331) {\n                                            if (code < 0xc330) {\n                                                // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\n                                                if (0xc315 <= code && code <= 0xc32f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSYA\n                                                if (0xc330 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc34c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\n                                                if (0xc331 <= code && code <= 0xc34b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc34d) {\n                                                    // Lo       HANGUL SYLLABLE SSYAE\n                                                    if (0xc34c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\n                                                    if (0xc34d <= code && code <= 0xc367) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc385) {\n                                            if (code < 0xc369) {\n                                                // Lo       HANGUL SYLLABLE SSEO\n                                                if (0xc368 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc384) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\n                                                    if (0xc369 <= code && code <= 0xc383) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSE\n                                                    if (0xc384 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3a0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\n                                                if (0xc385 <= code && code <= 0xc39f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3a1) {\n                                                    // Lo       HANGUL SYLLABLE SSYEO\n                                                    if (0xc3a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\n                                                    if (0xc3a1 <= code && code <= 0xc3bb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xc609) {\n                            if (code < 0xc4d5) {\n                                if (code < 0xc448) {\n                                    if (code < 0xc3f5) {\n                                        if (code < 0xc3d8) {\n                                            if (code < 0xc3bd) {\n                                                // Lo       HANGUL SYLLABLE SSYE\n                                                if (0xc3bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\n                                                if (0xc3bd <= code && code <= 0xc3d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3d9) {\n                                                // Lo       HANGUL SYLLABLE SSO\n                                                if (0xc3d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3f4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\n                                                    if (0xc3d9 <= code && code <= 0xc3f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWA\n                                                    if (0xc3f4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc411) {\n                                            if (code < 0xc410) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\n                                                if (0xc3f5 <= code && code <= 0xc40f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSWAE\n                                                if (0xc410 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc42c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\n                                                if (0xc411 <= code && code <= 0xc42b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc42d) {\n                                                    // Lo       HANGUL SYLLABLE SSOE\n                                                    if (0xc42c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\n                                                    if (0xc42d <= code && code <= 0xc447) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc481) {\n                                        if (code < 0xc464) {\n                                            if (code < 0xc449) {\n                                                // Lo       HANGUL SYLLABLE SSYO\n                                                if (0xc448 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\n                                                if (0xc449 <= code && code <= 0xc463) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc465) {\n                                                // Lo       HANGUL SYLLABLE SSU\n                                                if (0xc464 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc480) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\n                                                    if (0xc465 <= code && code <= 0xc47f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWEO\n                                                    if (0xc480 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc4b8) {\n                                            if (code < 0xc49c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\n                                                if (0xc481 <= code && code <= 0xc49b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc49d) {\n                                                    // Lo       HANGUL SYLLABLE SSWE\n                                                    if (0xc49c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\n                                                    if (0xc49d <= code && code <= 0xc4b7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc4b9) {\n                                                // Lo       HANGUL SYLLABLE SSWI\n                                                if (0xc4b8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc4d4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\n                                                    if (0xc4b9 <= code && code <= 0xc4d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSYU\n                                                    if (0xc4d4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc57c) {\n                                    if (code < 0xc528) {\n                                        if (code < 0xc4f1) {\n                                            if (code < 0xc4f0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\n                                                if (0xc4d5 <= code && code <= 0xc4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSEU\n                                                if (0xc4f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc50c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\n                                                if (0xc4f1 <= code && code <= 0xc50b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc50d) {\n                                                    // Lo       HANGUL SYLLABLE SSYI\n                                                    if (0xc50c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\n                                                    if (0xc50d <= code && code <= 0xc527) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc545) {\n                                            if (code < 0xc529) {\n                                                // Lo       HANGUL SYLLABLE SSI\n                                                if (0xc528 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc544) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\n                                                    if (0xc529 <= code && code <= 0xc543) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE A\n                                                    if (0xc544 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc560) {\n                                                // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\n                                                if (0xc545 <= code && code <= 0xc55f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc561) {\n                                                    // Lo       HANGUL SYLLABLE AE\n                                                    if (0xc560 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\n                                                    if (0xc561 <= code && code <= 0xc57b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc5b5) {\n                                        if (code < 0xc598) {\n                                            if (code < 0xc57d) {\n                                                // Lo       HANGUL SYLLABLE YA\n                                                if (0xc57c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\n                                                if (0xc57d <= code && code <= 0xc597) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc599) {\n                                                // Lo       HANGUL SYLLABLE YAE\n                                                if (0xc598 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5b4) {\n                                                    // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\n                                                    if (0xc599 <= code && code <= 0xc5b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE EO\n                                                    if (0xc5b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc5ec) {\n                                            if (code < 0xc5d0) {\n                                                // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\n                                                if (0xc5b5 <= code && code <= 0xc5cf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5d1) {\n                                                    // Lo       HANGUL SYLLABLE E\n                                                    if (0xc5d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\n                                                    if (0xc5d1 <= code && code <= 0xc5eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc5ed) {\n                                                // Lo       HANGUL SYLLABLE YEO\n                                                if (0xc5ec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc608) {\n                                                    // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\n                                                    if (0xc5ed <= code && code <= 0xc607) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YE\n                                                    if (0xc608 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc73c) {\n                                if (code < 0xc695) {\n                                    if (code < 0xc65c) {\n                                        if (code < 0xc625) {\n                                            if (code < 0xc624) {\n                                                // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\n                                                if (0xc609 <= code && code <= 0xc623) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE O\n                                                if (0xc624 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc640) {\n                                                // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\n                                                if (0xc625 <= code && code <= 0xc63f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc641) {\n                                                    // Lo       HANGUL SYLLABLE WA\n                                                    if (0xc640 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\n                                                    if (0xc641 <= code && code <= 0xc65b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc678) {\n                                            if (code < 0xc65d) {\n                                                // Lo       HANGUL SYLLABLE WAE\n                                                if (0xc65c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\n                                                if (0xc65d <= code && code <= 0xc677) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc679) {\n                                                // Lo       HANGUL SYLLABLE OE\n                                                if (0xc678 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc694) {\n                                                    // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\n                                                    if (0xc679 <= code && code <= 0xc693) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YO\n                                                    if (0xc694 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc6e8) {\n                                        if (code < 0xc6b1) {\n                                            if (code < 0xc6b0) {\n                                                // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\n                                                if (0xc695 <= code && code <= 0xc6af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE U\n                                                if (0xc6b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc6cc) {\n                                                // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\n                                                if (0xc6b1 <= code && code <= 0xc6cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc6cd) {\n                                                    // Lo       HANGUL SYLLABLE WEO\n                                                    if (0xc6cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\n                                                    if (0xc6cd <= code && code <= 0xc6e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc705) {\n                                            if (code < 0xc6e9) {\n                                                // Lo       HANGUL SYLLABLE WE\n                                                if (0xc6e8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc704) {\n                                                    // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\n                                                    if (0xc6e9 <= code && code <= 0xc703) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE WI\n                                                    if (0xc704 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc720) {\n                                                // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\n                                                if (0xc705 <= code && code <= 0xc71f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc721) {\n                                                    // Lo       HANGUL SYLLABLE YU\n                                                    if (0xc720 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\n                                                    if (0xc721 <= code && code <= 0xc73b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc7c9) {\n                                    if (code < 0xc775) {\n                                        if (code < 0xc758) {\n                                            if (code < 0xc73d) {\n                                                // Lo       HANGUL SYLLABLE EU\n                                                if (0xc73c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\n                                                if (0xc73d <= code && code <= 0xc757) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc759) {\n                                                // Lo       HANGUL SYLLABLE YI\n                                                if (0xc758 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc774) {\n                                                    // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\n                                                    if (0xc759 <= code && code <= 0xc773) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE I\n                                                    if (0xc774 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc7ac) {\n                                            if (code < 0xc790) {\n                                                // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\n                                                if (0xc775 <= code && code <= 0xc78f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc791) {\n                                                    // Lo       HANGUL SYLLABLE JA\n                                                    if (0xc790 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\n                                                    if (0xc791 <= code && code <= 0xc7ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc7ad) {\n                                                // Lo       HANGUL SYLLABLE JAE\n                                                if (0xc7ac === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc7c8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\n                                                    if (0xc7ad <= code && code <= 0xc7c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYA\n                                                    if (0xc7c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc81c) {\n                                        if (code < 0xc7e5) {\n                                            if (code < 0xc7e4) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\n                                                if (0xc7c9 <= code && code <= 0xc7e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYAE\n                                                if (0xc7e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc800) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\n                                                if (0xc7e5 <= code && code <= 0xc7ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc801) {\n                                                    // Lo       HANGUL SYLLABLE JEO\n                                                    if (0xc800 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\n                                                    if (0xc801 <= code && code <= 0xc81b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc839) {\n                                            if (code < 0xc81d) {\n                                                // Lo       HANGUL SYLLABLE JE\n                                                if (0xc81c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc838) {\n                                                    // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\n                                                    if (0xc81d <= code && code <= 0xc837) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYEO\n                                                    if (0xc838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc854) {\n                                                // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\n                                                if (0xc839 <= code && code <= 0xc853) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc855) {\n                                                    // Lo       HANGUL SYLLABLE JYE\n                                                    if (0xc854 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\n                                                    if (0xc855 <= code && code <= 0xc86f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xcd24) {\n                        if (code < 0xcabd) {\n                            if (code < 0xc989) {\n                                if (code < 0xc8fc) {\n                                    if (code < 0xc8a9) {\n                                        if (code < 0xc88c) {\n                                            if (code < 0xc871) {\n                                                // Lo       HANGUL SYLLABLE JO\n                                                if (0xc870 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\n                                                if (0xc871 <= code && code <= 0xc88b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc88d) {\n                                                // Lo       HANGUL SYLLABLE JWA\n                                                if (0xc88c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8a8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\n                                                    if (0xc88d <= code && code <= 0xc8a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWAE\n                                                    if (0xc8a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc8c5) {\n                                            if (code < 0xc8c4) {\n                                                // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\n                                                if (0xc8a9 <= code && code <= 0xc8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JOE\n                                                if (0xc8c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc8e0) {\n                                                // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\n                                                if (0xc8c5 <= code && code <= 0xc8df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8e1) {\n                                                    // Lo       HANGUL SYLLABLE JYO\n                                                    if (0xc8e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\n                                                    if (0xc8e1 <= code && code <= 0xc8fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc935) {\n                                        if (code < 0xc918) {\n                                            if (code < 0xc8fd) {\n                                                // Lo       HANGUL SYLLABLE JU\n                                                if (0xc8fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\n                                                if (0xc8fd <= code && code <= 0xc917) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc919) {\n                                                // Lo       HANGUL SYLLABLE JWEO\n                                                if (0xc918 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc934) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\n                                                    if (0xc919 <= code && code <= 0xc933) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWE\n                                                    if (0xc934 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc96c) {\n                                            if (code < 0xc950) {\n                                                // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\n                                                if (0xc935 <= code && code <= 0xc94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc951) {\n                                                    // Lo       HANGUL SYLLABLE JWI\n                                                    if (0xc950 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\n                                                    if (0xc951 <= code && code <= 0xc96b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc96d) {\n                                                // Lo       HANGUL SYLLABLE JYU\n                                                if (0xc96c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc988) {\n                                                    // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\n                                                    if (0xc96d <= code && code <= 0xc987) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JEU\n                                                    if (0xc988 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xca30) {\n                                    if (code < 0xc9dc) {\n                                        if (code < 0xc9a5) {\n                                            if (code < 0xc9a4) {\n                                                // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\n                                                if (0xc989 <= code && code <= 0xc9a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYI\n                                                if (0xc9a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc9c0) {\n                                                // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\n                                                if (0xc9a5 <= code && code <= 0xc9bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9c1) {\n                                                    // Lo       HANGUL SYLLABLE JI\n                                                    if (0xc9c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\n                                                    if (0xc9c1 <= code && code <= 0xc9db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc9f9) {\n                                            if (code < 0xc9dd) {\n                                                // Lo       HANGUL SYLLABLE JJA\n                                                if (0xc9dc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9f8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\n                                                    if (0xc9dd <= code && code <= 0xc9f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJAE\n                                                    if (0xc9f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca14) {\n                                                // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\n                                                if (0xc9f9 <= code && code <= 0xca13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca15) {\n                                                    // Lo       HANGUL SYLLABLE JJYA\n                                                    if (0xca14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\n                                                    if (0xca15 <= code && code <= 0xca2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xca69) {\n                                        if (code < 0xca4c) {\n                                            if (code < 0xca31) {\n                                                // Lo       HANGUL SYLLABLE JJYAE\n                                                if (0xca30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\n                                                if (0xca31 <= code && code <= 0xca4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca4d) {\n                                                // Lo       HANGUL SYLLABLE JJEO\n                                                if (0xca4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca68) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\n                                                    if (0xca4d <= code && code <= 0xca67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJE\n                                                    if (0xca68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcaa0) {\n                                            if (code < 0xca84) {\n                                                // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\n                                                if (0xca69 <= code && code <= 0xca83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca85) {\n                                                    // Lo       HANGUL SYLLABLE JJYEO\n                                                    if (0xca84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\n                                                    if (0xca85 <= code && code <= 0xca9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaa1) {\n                                                // Lo       HANGUL SYLLABLE JJYE\n                                                if (0xcaa0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcabc) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\n                                                    if (0xcaa1 <= code && code <= 0xcabb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJO\n                                                    if (0xcabc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xcbf0) {\n                                if (code < 0xcb49) {\n                                    if (code < 0xcb10) {\n                                        if (code < 0xcad9) {\n                                            if (code < 0xcad8) {\n                                                // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\n                                                if (0xcabd <= code && code <= 0xcad7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWA\n                                                if (0xcad8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaf4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\n                                                if (0xcad9 <= code && code <= 0xcaf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcaf5) {\n                                                    // Lo       HANGUL SYLLABLE JJWAE\n                                                    if (0xcaf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\n                                                    if (0xcaf5 <= code && code <= 0xcb0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcb2c) {\n                                            if (code < 0xcb11) {\n                                                // Lo       HANGUL SYLLABLE JJOE\n                                                if (0xcb10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\n                                                if (0xcb11 <= code && code <= 0xcb2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb2d) {\n                                                // Lo       HANGUL SYLLABLE JJYO\n                                                if (0xcb2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb48) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\n                                                    if (0xcb2d <= code && code <= 0xcb47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJU\n                                                    if (0xcb48 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcb9c) {\n                                        if (code < 0xcb65) {\n                                            if (code < 0xcb64) {\n                                                // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\n                                                if (0xcb49 <= code && code <= 0xcb63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWEO\n                                                if (0xcb64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb80) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\n                                                if (0xcb65 <= code && code <= 0xcb7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb81) {\n                                                    // Lo       HANGUL SYLLABLE JJWE\n                                                    if (0xcb80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\n                                                    if (0xcb81 <= code && code <= 0xcb9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcbb9) {\n                                            if (code < 0xcb9d) {\n                                                // Lo       HANGUL SYLLABLE JJWI\n                                                if (0xcb9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\n                                                    if (0xcb9d <= code && code <= 0xcbb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJYU\n                                                    if (0xcbb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcbd4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\n                                                if (0xcbb9 <= code && code <= 0xcbd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbd5) {\n                                                    // Lo       HANGUL SYLLABLE JJEU\n                                                    if (0xcbd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\n                                                    if (0xcbd5 <= code && code <= 0xcbef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcc7d) {\n                                    if (code < 0xcc29) {\n                                        if (code < 0xcc0c) {\n                                            if (code < 0xcbf1) {\n                                                // Lo       HANGUL SYLLABLE JJYI\n                                                if (0xcbf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\n                                                if (0xcbf1 <= code && code <= 0xcc0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc0d) {\n                                                // Lo       HANGUL SYLLABLE JJI\n                                                if (0xcc0c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc28) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\n                                                    if (0xcc0d <= code && code <= 0xcc27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CA\n                                                    if (0xcc28 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcc60) {\n                                            if (code < 0xcc44) {\n                                                // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\n                                                if (0xcc29 <= code && code <= 0xcc43) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc45) {\n                                                    // Lo       HANGUL SYLLABLE CAE\n                                                    if (0xcc44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\n                                                    if (0xcc45 <= code && code <= 0xcc5f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc61) {\n                                                // Lo       HANGUL SYLLABLE CYA\n                                                if (0xcc60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc7c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\n                                                    if (0xcc61 <= code && code <= 0xcc7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYAE\n                                                    if (0xcc7c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xccd0) {\n                                        if (code < 0xcc99) {\n                                            if (code < 0xcc98) {\n                                                // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\n                                                if (0xcc7d <= code && code <= 0xcc97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CEO\n                                                if (0xcc98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xccb4) {\n                                                // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\n                                                if (0xcc99 <= code && code <= 0xccb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccb5) {\n                                                    // Lo       HANGUL SYLLABLE CE\n                                                    if (0xccb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\n                                                    if (0xccb5 <= code && code <= 0xcccf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcced) {\n                                            if (code < 0xccd1) {\n                                                // Lo       HANGUL SYLLABLE CYEO\n                                                if (0xccd0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccec) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\n                                                    if (0xccd1 <= code && code <= 0xcceb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYE\n                                                    if (0xccec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd08) {\n                                                // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\n                                                if (0xcced <= code && code <= 0xcd07) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd09) {\n                                                    // Lo       HANGUL SYLLABLE CO\n                                                    if (0xcd08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\n                                                    if (0xcd09 <= code && code <= 0xcd23) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf71) {\n                            if (code < 0xce3d) {\n                                if (code < 0xcdb0) {\n                                    if (code < 0xcd5d) {\n                                        if (code < 0xcd40) {\n                                            if (code < 0xcd25) {\n                                                // Lo       HANGUL SYLLABLE CWA\n                                                if (0xcd24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\n                                                if (0xcd25 <= code && code <= 0xcd3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd41) {\n                                                // Lo       HANGUL SYLLABLE CWAE\n                                                if (0xcd40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd5c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\n                                                    if (0xcd41 <= code && code <= 0xcd5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE COE\n                                                    if (0xcd5c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcd79) {\n                                            if (code < 0xcd78) {\n                                                // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\n                                                if (0xcd5d <= code && code <= 0xcd77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CYO\n                                                if (0xcd78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd94) {\n                                                // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\n                                                if (0xcd79 <= code && code <= 0xcd93) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd95) {\n                                                    // Lo       HANGUL SYLLABLE CU\n                                                    if (0xcd94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\n                                                    if (0xcd95 <= code && code <= 0xcdaf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcde9) {\n                                        if (code < 0xcdcc) {\n                                            if (code < 0xcdb1) {\n                                                // Lo       HANGUL SYLLABLE CWEO\n                                                if (0xcdb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\n                                                if (0xcdb1 <= code && code <= 0xcdcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcdcd) {\n                                                // Lo       HANGUL SYLLABLE CWE\n                                                if (0xcdcc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcde8) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\n                                                    if (0xcdcd <= code && code <= 0xcde7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CWI\n                                                    if (0xcde8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xce20) {\n                                            if (code < 0xce04) {\n                                                // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\n                                                if (0xcde9 <= code && code <= 0xce03) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce05) {\n                                                    // Lo       HANGUL SYLLABLE CYU\n                                                    if (0xce04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\n                                                    if (0xce05 <= code && code <= 0xce1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce21) {\n                                                // Lo       HANGUL SYLLABLE CEU\n                                                if (0xce20 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce3c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\n                                                    if (0xce21 <= code && code <= 0xce3b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYI\n                                                    if (0xce3c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcee4) {\n                                    if (code < 0xce90) {\n                                        if (code < 0xce59) {\n                                            if (code < 0xce58) {\n                                                // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\n                                                if (0xce3d <= code && code <= 0xce57) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CI\n                                                if (0xce58 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce74) {\n                                                // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\n                                                if (0xce59 <= code && code <= 0xce73) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce75) {\n                                                    // Lo       HANGUL SYLLABLE KA\n                                                    if (0xce74 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\n                                                    if (0xce75 <= code && code <= 0xce8f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcead) {\n                                            if (code < 0xce91) {\n                                                // Lo       HANGUL SYLLABLE KAE\n                                                if (0xce90 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xceac) {\n                                                    // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\n                                                    if (0xce91 <= code && code <= 0xceab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYA\n                                                    if (0xceac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcec8) {\n                                                // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\n                                                if (0xcead <= code && code <= 0xcec7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcec9) {\n                                                    // Lo       HANGUL SYLLABLE KYAE\n                                                    if (0xcec8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\n                                                    if (0xcec9 <= code && code <= 0xcee3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcf1d) {\n                                        if (code < 0xcf00) {\n                                            if (code < 0xcee5) {\n                                                // Lo       HANGUL SYLLABLE KEO\n                                                if (0xcee4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\n                                                if (0xcee5 <= code && code <= 0xceff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf01) {\n                                                // Lo       HANGUL SYLLABLE KE\n                                                if (0xcf00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\n                                                    if (0xcf01 <= code && code <= 0xcf1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYEO\n                                                    if (0xcf1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcf54) {\n                                            if (code < 0xcf38) {\n                                                // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\n                                                if (0xcf1d <= code && code <= 0xcf37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf39) {\n                                                    // Lo       HANGUL SYLLABLE KYE\n                                                    if (0xcf38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\n                                                    if (0xcf39 <= code && code <= 0xcf53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf55) {\n                                                // Lo       HANGUL SYLLABLE KO\n                                                if (0xcf54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf70) {\n                                                    // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\n                                                    if (0xcf55 <= code && code <= 0xcf6f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWA\n                                                    if (0xcf70 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd0a4) {\n                                if (code < 0xcffd) {\n                                    if (code < 0xcfc4) {\n                                        if (code < 0xcf8d) {\n                                            if (code < 0xcf8c) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\n                                                if (0xcf71 <= code && code <= 0xcf8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWAE\n                                                if (0xcf8c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfa8) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\n                                                if (0xcf8d <= code && code <= 0xcfa7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcfa9) {\n                                                    // Lo       HANGUL SYLLABLE KOE\n                                                    if (0xcfa8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\n                                                    if (0xcfa9 <= code && code <= 0xcfc3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcfe0) {\n                                            if (code < 0xcfc5) {\n                                                // Lo       HANGUL SYLLABLE KYO\n                                                if (0xcfc4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\n                                                if (0xcfc5 <= code && code <= 0xcfdf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfe1) {\n                                                // Lo       HANGUL SYLLABLE KU\n                                                if (0xcfe0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcffc) {\n                                                    // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\n                                                    if (0xcfe1 <= code && code <= 0xcffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWEO\n                                                    if (0xcffc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd050) {\n                                        if (code < 0xd019) {\n                                            if (code < 0xd018) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\n                                                if (0xcffd <= code && code <= 0xd017) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWE\n                                                if (0xd018 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd034) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\n                                                if (0xd019 <= code && code <= 0xd033) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd035) {\n                                                    // Lo       HANGUL SYLLABLE KWI\n                                                    if (0xd034 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\n                                                    if (0xd035 <= code && code <= 0xd04f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd06d) {\n                                            if (code < 0xd051) {\n                                                // Lo       HANGUL SYLLABLE KYU\n                                                if (0xd050 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd06c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\n                                                    if (0xd051 <= code && code <= 0xd06b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KEU\n                                                    if (0xd06c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd088) {\n                                                // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\n                                                if (0xd06d <= code && code <= 0xd087) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd089) {\n                                                    // Lo       HANGUL SYLLABLE KYI\n                                                    if (0xd088 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\n                                                    if (0xd089 <= code && code <= 0xd0a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd131) {\n                                    if (code < 0xd0dd) {\n                                        if (code < 0xd0c0) {\n                                            if (code < 0xd0a5) {\n                                                // Lo       HANGUL SYLLABLE KI\n                                                if (0xd0a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\n                                                if (0xd0a5 <= code && code <= 0xd0bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd0c1) {\n                                                // Lo       HANGUL SYLLABLE TA\n                                                if (0xd0c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\n                                                    if (0xd0c1 <= code && code <= 0xd0db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TAE\n                                                    if (0xd0dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd114) {\n                                            if (code < 0xd0f8) {\n                                                // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\n                                                if (0xd0dd <= code && code <= 0xd0f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0f9) {\n                                                    // Lo       HANGUL SYLLABLE TYA\n                                                    if (0xd0f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\n                                                    if (0xd0f9 <= code && code <= 0xd113) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd115) {\n                                                // Lo       HANGUL SYLLABLE TYAE\n                                                if (0xd114 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd130) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\n                                                    if (0xd115 <= code && code <= 0xd12f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TEO\n                                                    if (0xd130 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd184) {\n                                        if (code < 0xd14d) {\n                                            if (code < 0xd14c) {\n                                                // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\n                                                if (0xd131 <= code && code <= 0xd14b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TE\n                                                if (0xd14c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd168) {\n                                                // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\n                                                if (0xd14d <= code && code <= 0xd167) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd169) {\n                                                    // Lo       HANGUL SYLLABLE TYEO\n                                                    if (0xd168 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\n                                                    if (0xd169 <= code && code <= 0xd183) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd1a1) {\n                                            if (code < 0xd185) {\n                                                // Lo       HANGUL SYLLABLE TYE\n                                                if (0xd184 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\n                                                    if (0xd185 <= code && code <= 0xd19f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TO\n                                                    if (0xd1a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1bc) {\n                                                // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\n                                                if (0xd1a1 <= code && code <= 0xd1bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1bd) {\n                                                    // Lo       HANGUL SYLLABLE TWA\n                                                    if (0xd1bc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\n                                                    if (0xd1bd <= code && code <= 0xd1d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1133b) {\n                    if (code < 0xd671) {\n                        if (code < 0xd424) {\n                            if (code < 0xd2f1) {\n                                if (code < 0xd264) {\n                                    if (code < 0xd211) {\n                                        if (code < 0xd1f4) {\n                                            if (code < 0xd1d9) {\n                                                // Lo       HANGUL SYLLABLE TWAE\n                                                if (0xd1d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\n                                                if (0xd1d9 <= code && code <= 0xd1f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1f5) {\n                                                // Lo       HANGUL SYLLABLE TOE\n                                                if (0xd1f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd210) {\n                                                    // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\n                                                    if (0xd1f5 <= code && code <= 0xd20f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYO\n                                                    if (0xd210 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd22d) {\n                                            if (code < 0xd22c) {\n                                                // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\n                                                if (0xd211 <= code && code <= 0xd22b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TU\n                                                if (0xd22c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd248) {\n                                                // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\n                                                if (0xd22d <= code && code <= 0xd247) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd249) {\n                                                    // Lo       HANGUL SYLLABLE TWEO\n                                                    if (0xd248 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\n                                                    if (0xd249 <= code && code <= 0xd263) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd29d) {\n                                        if (code < 0xd280) {\n                                            if (code < 0xd265) {\n                                                // Lo       HANGUL SYLLABLE TWE\n                                                if (0xd264 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\n                                                if (0xd265 <= code && code <= 0xd27f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd281) {\n                                                // Lo       HANGUL SYLLABLE TWI\n                                                if (0xd280 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd29c) {\n                                                    // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\n                                                    if (0xd281 <= code && code <= 0xd29b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYU\n                                                    if (0xd29c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd2d4) {\n                                            if (code < 0xd2b8) {\n                                                // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\n                                                if (0xd29d <= code && code <= 0xd2b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2b9) {\n                                                    // Lo       HANGUL SYLLABLE TEU\n                                                    if (0xd2b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\n                                                    if (0xd2b9 <= code && code <= 0xd2d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd2d5) {\n                                                // Lo       HANGUL SYLLABLE TYI\n                                                if (0xd2d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2f0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\n                                                    if (0xd2d5 <= code && code <= 0xd2ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TI\n                                                    if (0xd2f0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd37d) {\n                                    if (code < 0xd344) {\n                                        if (code < 0xd30d) {\n                                            if (code < 0xd30c) {\n                                                // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\n                                                if (0xd2f1 <= code && code <= 0xd30b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PA\n                                                if (0xd30c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd328) {\n                                                // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\n                                                if (0xd30d <= code && code <= 0xd327) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd329) {\n                                                    // Lo       HANGUL SYLLABLE PAE\n                                                    if (0xd328 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\n                                                    if (0xd329 <= code && code <= 0xd343) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd360) {\n                                            if (code < 0xd345) {\n                                                // Lo       HANGUL SYLLABLE PYA\n                                                if (0xd344 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\n                                                if (0xd345 <= code && code <= 0xd35f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd361) {\n                                                // Lo       HANGUL SYLLABLE PYAE\n                                                if (0xd360 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd37c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\n                                                    if (0xd361 <= code && code <= 0xd37b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PEO\n                                                    if (0xd37c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd3d0) {\n                                        if (code < 0xd399) {\n                                            if (code < 0xd398) {\n                                                // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\n                                                if (0xd37d <= code && code <= 0xd397) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PE\n                                                if (0xd398 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b4) {\n                                                // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\n                                                if (0xd399 <= code && code <= 0xd3b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3b5) {\n                                                    // Lo       HANGUL SYLLABLE PYEO\n                                                    if (0xd3b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\n                                                    if (0xd3b5 <= code && code <= 0xd3cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd3ed) {\n                                            if (code < 0xd3d1) {\n                                                // Lo       HANGUL SYLLABLE PYE\n                                                if (0xd3d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\n                                                    if (0xd3d1 <= code && code <= 0xd3eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PO\n                                                    if (0xd3ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd408) {\n                                                // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\n                                                if (0xd3ed <= code && code <= 0xd407) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd409) {\n                                                    // Lo       HANGUL SYLLABLE PWA\n                                                    if (0xd408 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\n                                                    if (0xd409 <= code && code <= 0xd423) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd53d) {\n                                if (code < 0xd4b0) {\n                                    if (code < 0xd45d) {\n                                        if (code < 0xd440) {\n                                            if (code < 0xd425) {\n                                                // Lo       HANGUL SYLLABLE PWAE\n                                                if (0xd424 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\n                                                if (0xd425 <= code && code <= 0xd43f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd441) {\n                                                // Lo       HANGUL SYLLABLE POE\n                                                if (0xd440 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd45c) {\n                                                    // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\n                                                    if (0xd441 <= code && code <= 0xd45b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYO\n                                                    if (0xd45c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd479) {\n                                            if (code < 0xd478) {\n                                                // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\n                                                if (0xd45d <= code && code <= 0xd477) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PU\n                                                if (0xd478 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd494) {\n                                                // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\n                                                if (0xd479 <= code && code <= 0xd493) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd495) {\n                                                    // Lo       HANGUL SYLLABLE PWEO\n                                                    if (0xd494 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\n                                                    if (0xd495 <= code && code <= 0xd4af) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd4e9) {\n                                        if (code < 0xd4cc) {\n                                            if (code < 0xd4b1) {\n                                                // Lo       HANGUL SYLLABLE PWE\n                                                if (0xd4b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\n                                                if (0xd4b1 <= code && code <= 0xd4cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4cd) {\n                                                // Lo       HANGUL SYLLABLE PWI\n                                                if (0xd4cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\n                                                    if (0xd4cd <= code && code <= 0xd4e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYU\n                                                    if (0xd4e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd520) {\n                                            if (code < 0xd504) {\n                                                // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\n                                                if (0xd4e9 <= code && code <= 0xd503) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd505) {\n                                                    // Lo       HANGUL SYLLABLE PEU\n                                                    if (0xd504 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\n                                                    if (0xd505 <= code && code <= 0xd51f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd521) {\n                                                // Lo       HANGUL SYLLABLE PYI\n                                                if (0xd520 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd53c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\n                                                    if (0xd521 <= code && code <= 0xd53b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PI\n                                                    if (0xd53c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd5e4) {\n                                    if (code < 0xd590) {\n                                        if (code < 0xd559) {\n                                            if (code < 0xd558) {\n                                                // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\n                                                if (0xd53d <= code && code <= 0xd557) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HA\n                                                if (0xd558 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd574) {\n                                                // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\n                                                if (0xd559 <= code && code <= 0xd573) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd575) {\n                                                    // Lo       HANGUL SYLLABLE HAE\n                                                    if (0xd574 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\n                                                    if (0xd575 <= code && code <= 0xd58f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd5ad) {\n                                            if (code < 0xd591) {\n                                                // Lo       HANGUL SYLLABLE HYA\n                                                if (0xd590 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\n                                                    if (0xd591 <= code && code <= 0xd5ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYAE\n                                                    if (0xd5ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd5c8) {\n                                                // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\n                                                if (0xd5ad <= code && code <= 0xd5c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5c9) {\n                                                    // Lo       HANGUL SYLLABLE HEO\n                                                    if (0xd5c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\n                                                    if (0xd5c9 <= code && code <= 0xd5e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd61d) {\n                                        if (code < 0xd600) {\n                                            if (code < 0xd5e5) {\n                                                // Lo       HANGUL SYLLABLE HE\n                                                if (0xd5e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\n                                                if (0xd5e5 <= code && code <= 0xd5ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd601) {\n                                                // Lo       HANGUL SYLLABLE HYEO\n                                                if (0xd600 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd61c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\n                                                    if (0xd601 <= code && code <= 0xd61b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYE\n                                                    if (0xd61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd654) {\n                                            if (code < 0xd638) {\n                                                // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\n                                                if (0xd61d <= code && code <= 0xd637) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd639) {\n                                                    // Lo       HANGUL SYLLABLE HO\n                                                    if (0xd638 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\n                                                    if (0xd639 <= code && code <= 0xd653) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd655) {\n                                                // Lo       HANGUL SYLLABLE HWA\n                                                if (0xd654 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd670) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\n                                                    if (0xd655 <= code && code <= 0xd66f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWAE\n                                                    if (0xd670 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x11000) {\n                            if (code < 0xd7b0) {\n                                if (code < 0xd6fd) {\n                                    if (code < 0xd6c4) {\n                                        if (code < 0xd68d) {\n                                            if (code < 0xd68c) {\n                                                // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\n                                                if (0xd671 <= code && code <= 0xd68b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HOE\n                                                if (0xd68c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6a8) {\n                                                // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\n                                                if (0xd68d <= code && code <= 0xd6a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6a9) {\n                                                    // Lo       HANGUL SYLLABLE HYO\n                                                    if (0xd6a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\n                                                    if (0xd6a9 <= code && code <= 0xd6c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd6e0) {\n                                            if (code < 0xd6c5) {\n                                                // Lo       HANGUL SYLLABLE HU\n                                                if (0xd6c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\n                                                if (0xd6c5 <= code && code <= 0xd6df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6e1) {\n                                                // Lo       HANGUL SYLLABLE HWEO\n                                                if (0xd6e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6fc) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\n                                                    if (0xd6e1 <= code && code <= 0xd6fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWE\n                                                    if (0xd6fc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd750) {\n                                        if (code < 0xd719) {\n                                            if (code < 0xd718) {\n                                                // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\n                                                if (0xd6fd <= code && code <= 0xd717) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HWI\n                                                if (0xd718 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd734) {\n                                                // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\n                                                if (0xd719 <= code && code <= 0xd733) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd735) {\n                                                    // Lo       HANGUL SYLLABLE HYU\n                                                    if (0xd734 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\n                                                    if (0xd735 <= code && code <= 0xd74f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd76d) {\n                                            if (code < 0xd751) {\n                                                // Lo       HANGUL SYLLABLE HEU\n                                                if (0xd750 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd76c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\n                                                    if (0xd751 <= code && code <= 0xd76b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYI\n                                                    if (0xd76c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd788) {\n                                                // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\n                                                if (0xd76d <= code && code <= 0xd787) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd789) {\n                                                    // Lo       HANGUL SYLLABLE HI\n                                                    if (0xd788 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\n                                                    if (0xd789 <= code && code <= 0xd7a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x10a01) {\n                                    if (code < 0xfeff) {\n                                        if (code < 0xfb1e) {\n                                            if (code < 0xd7cb) {\n                                                // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\n                                                if (0xd7b0 <= code && code <= 0xd7c6) {\n                                                    return boundaries_1.CLUSTER_BREAK.V;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\n                                                if (0xd7cb <= code && code <= 0xd7fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.T;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xfe00) {\n                                                // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n                                                if (0xfb1e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfe20) {\n                                                    // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\n                                                    if (0xfe00 <= code && code <= 0xfe0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\n                                                    if (0xfe20 <= code && code <= 0xfe2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x101fd) {\n                                            if (code < 0xff9e) {\n                                                // Cf       ZERO WIDTH NO-BREAK SPACE\n                                                if (0xfeff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfff0) {\n                                                    // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n                                                    if (0xff9e <= code && code <= 0xff9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\n                                                    // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\n                                                    if (0xfff0 <= code && code <= 0xfffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x102e0) {\n                                                // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\n                                                if (0x101fd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10376) {\n                                                    // Mn       COPTIC EPACT THOUSANDS MARK\n                                                    if (0x102e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\n                                                    if (0x10376 <= code && code <= 0x1037a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x10ae5) {\n                                        if (code < 0x10a0c) {\n                                            if (code < 0x10a05) {\n                                                // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\n                                                if (0x10a01 <= code && code <= 0x10a03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\n                                                if (0x10a05 <= code && code <= 0x10a06) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10a38) {\n                                                // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\n                                                if (0x10a0c <= code && code <= 0x10a0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10a3f) {\n                                                    // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\n                                                    if (0x10a38 <= code && code <= 0x10a3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHAROSHTHI VIRAMA\n                                                    if (0x10a3f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x10efd) {\n                                            if (code < 0x10d24) {\n                                                // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n                                                if (0x10ae5 <= code && code <= 0x10ae6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10eab) {\n                                                    // Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n                                                    if (0x10d24 <= code && code <= 0x10d27) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n                                                    if (0x10eab <= code && code <= 0x10eac) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10f46) {\n                                                // Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n                                                if (0x10efd <= code && code <= 0x10eff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10f82) {\n                                                    // Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n                                                    if (0x10f46 <= code && code <= 0x10f50) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n                                                    if (0x10f82 <= code && code <= 0x10f85) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x11180) {\n                                if (code < 0x110b7) {\n                                    if (code < 0x11073) {\n                                        if (code < 0x11002) {\n                                            // Mc       BRAHMI SIGN CANDRABINDU\n                                            if (0x11000 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BRAHMI SIGN ANUSVARA\n                                            if (0x11001 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11038) {\n                                                // Mc       BRAHMI SIGN VISARGA\n                                                if (0x11002 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11070) {\n                                                    // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\n                                                    if (0x11038 <= code && code <= 0x11046) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BRAHMI SIGN OLD TAMIL VIRAMA\n                                                    if (0x11070 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11082) {\n                                            if (code < 0x1107f) {\n                                                // Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n                                                if (0x11073 <= code && code <= 0x11074) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\n                                                if (0x1107f <= code && code <= 0x11081) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110b0) {\n                                                // Mc       KAITHI SIGN VISARGA\n                                                if (0x11082 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x110b3) {\n                                                    // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n                                                    if (0x110b0 <= code && code <= 0x110b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n                                                    if (0x110b3 <= code && code <= 0x110b6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11100) {\n                                        if (code < 0x110bd) {\n                                            if (code < 0x110b9) {\n                                                // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\n                                                if (0x110b7 <= code && code <= 0x110b8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\n                                                if (0x110b9 <= code && code <= 0x110ba) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110c2) {\n                                                // Cf       KAITHI NUMBER SIGN\n                                                if (0x110bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KAITHI VOWEL SIGN VOCALIC R\n                                                if (0x110c2 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Cf       KAITHI NUMBER SIGN ABOVE\n                                                if (0x110cd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1112d) {\n                                            if (code < 0x11127) {\n                                                // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\n                                                if (0x11100 <= code && code <= 0x11102) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1112c) {\n                                                    // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\n                                                    if (0x11127 <= code && code <= 0x1112b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       CHAKMA VOWEL SIGN E\n                                                    if (0x1112c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11145) {\n                                                // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\n                                                if (0x1112d <= code && code <= 0x11134) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11173) {\n                                                    // Mc   [2] CHAKMA VOWEL SIGN AA..CHAKMA VOWEL SIGN EI\n                                                    if (0x11145 <= code && code <= 0x11146) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MAHAJANI SIGN NUKTA\n                                                    if (0x11173 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11232) {\n                                    if (code < 0x111c2) {\n                                        if (code < 0x111b3) {\n                                            if (code < 0x11182) {\n                                                // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\n                                                if (0x11180 <= code && code <= 0x11181) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SHARADA SIGN VISARGA\n                                                if (0x11182 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x111b6) {\n                                                // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\n                                                if (0x111b3 <= code && code <= 0x111b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111bf) {\n                                                    // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\n                                                    if (0x111b6 <= code && code <= 0x111be) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\n                                                    if (0x111bf <= code && code <= 0x111c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x111cf) {\n                                            if (code < 0x111c9) {\n                                                // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\n                                                if (0x111c2 <= code && code <= 0x111c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111ce) {\n                                                    // Mn   [4] SHARADA SANDHI MARK..SHARADA EXTRA SHORT VOWEL MARK\n                                                    if (0x111c9 <= code && code <= 0x111cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SHARADA VOWEL SIGN PRISHTHAMATRA E\n                                                    if (0x111ce === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1122c) {\n                                                // Mn       SHARADA SIGN INVERTED CANDRABINDU\n                                                if (0x111cf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1122f) {\n                                                    // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\n                                                    if (0x1122c <= code && code <= 0x1122e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\n                                                    if (0x1122f <= code && code <= 0x11231) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11241) {\n                                        if (code < 0x11235) {\n                                            if (code < 0x11234) {\n                                                // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n                                                if (0x11232 <= code && code <= 0x11233) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHOJKI SIGN ANUSVARA\n                                                if (0x11234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11236) {\n                                                // Mc       KHOJKI SIGN VIRAMA\n                                                if (0x11235 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1123e) {\n                                                    // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n                                                    if (0x11236 <= code && code <= 0x11237) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHOJKI SIGN SUKUN\n                                                    if (0x1123e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x112e3) {\n                                            if (code < 0x112df) {\n                                                // Mn       KHOJKI VOWEL SIGN VOCALIC R\n                                                if (0x11241 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x112e0) {\n                                                    // Mn       KHUDAWADI SIGN ANUSVARA\n                                                    if (0x112df === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n                                                    if (0x112e0 <= code && code <= 0x112e2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11300) {\n                                                // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n                                                if (0x112e3 <= code && code <= 0x112ea) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11302) {\n                                                    // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n                                                    if (0x11300 <= code && code <= 0x11301) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\n                                                    if (0x11302 <= code && code <= 0x11303) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x11a97) {\n                        if (code < 0x116ab) {\n                            if (code < 0x114b9) {\n                                if (code < 0x11370) {\n                                    if (code < 0x11347) {\n                                        if (code < 0x1133f) {\n                                            if (code < 0x1133e) {\n                                                // Mn   [2] COMBINING BINDU BELOW..GRANTHA SIGN NUKTA\n                                                if (0x1133b <= code && code <= 0x1133c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GRANTHA VOWEL SIGN AA\n                                                if (0x1133e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11340) {\n                                                // Mc       GRANTHA VOWEL SIGN I\n                                                if (0x1133f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11341) {\n                                                    // Mn       GRANTHA VOWEL SIGN II\n                                                    if (0x11340 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\n                                                    if (0x11341 <= code && code <= 0x11344) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11357) {\n                                            if (code < 0x1134b) {\n                                                // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\n                                                if (0x11347 <= code && code <= 0x11348) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\n                                                if (0x1134b <= code && code <= 0x1134d) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11362) {\n                                                // Mc       GRANTHA AU LENGTH MARK\n                                                if (0x11357 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11366) {\n                                                    // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\n                                                    if (0x11362 <= code && code <= 0x11363) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\n                                                    if (0x11366 <= code && code <= 0x1136c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11445) {\n                                        if (code < 0x11438) {\n                                            if (code < 0x11435) {\n                                                // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\n                                                if (0x11370 <= code && code <= 0x11374) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\n                                                if (0x11435 <= code && code <= 0x11437) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11440) {\n                                                // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\n                                                if (0x11438 <= code && code <= 0x1143f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11442) {\n                                                    // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\n                                                    if (0x11440 <= code && code <= 0x11441) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\n                                                    if (0x11442 <= code && code <= 0x11444) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x114b0) {\n                                            if (code < 0x11446) {\n                                                // Mc       NEWA SIGN VISARGA\n                                                if (0x11445 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NEWA SIGN NUKTA\n                                                if (0x11446 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       NEWA SANDHI MARK\n                                                if (0x1145e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114b1) {\n                                                // Mc       TIRHUTA VOWEL SIGN AA\n                                                if (0x114b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114b3) {\n                                                    // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\n                                                    if (0x114b1 <= code && code <= 0x114b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\n                                                    if (0x114b3 <= code && code <= 0x114b8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x115b8) {\n                                    if (code < 0x114bf) {\n                                        if (code < 0x114bb) {\n                                            // Mc       TIRHUTA VOWEL SIGN E\n                                            if (0x114b9 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TIRHUTA VOWEL SIGN SHORT E\n                                            if (0x114ba === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114bd) {\n                                                // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\n                                                if (0x114bb <= code && code <= 0x114bc) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       TIRHUTA VOWEL SIGN SHORT O\n                                                if (0x114bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TIRHUTA VOWEL SIGN AU\n                                                if (0x114be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x115af) {\n                                            if (code < 0x114c1) {\n                                                // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\n                                                if (0x114bf <= code && code <= 0x114c0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114c2) {\n                                                    // Mc       TIRHUTA SIGN VISARGA\n                                                    if (0x114c1 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\n                                                    if (0x114c2 <= code && code <= 0x114c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115b0) {\n                                                // Mc       SIDDHAM VOWEL SIGN AA\n                                                if (0x115af === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115b2) {\n                                                    // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\n                                                    if (0x115b0 <= code && code <= 0x115b1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\n                                                    if (0x115b2 <= code && code <= 0x115b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11630) {\n                                        if (code < 0x115be) {\n                                            if (code < 0x115bc) {\n                                                // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\n                                                if (0x115b8 <= code && code <= 0x115bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\n                                                if (0x115bc <= code && code <= 0x115bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115bf) {\n                                                // Mc       SIDDHAM SIGN VISARGA\n                                                if (0x115be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115dc) {\n                                                    // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\n                                                    if (0x115bf <= code && code <= 0x115c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\n                                                    if (0x115dc <= code && code <= 0x115dd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1163d) {\n                                            if (code < 0x11633) {\n                                                // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\n                                                if (0x11630 <= code && code <= 0x11632) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163b) {\n                                                    // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\n                                                    if (0x11633 <= code && code <= 0x1163a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\n                                                    if (0x1163b <= code && code <= 0x1163c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1163e) {\n                                                // Mn       MODI SIGN ANUSVARA\n                                                if (0x1163d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163f) {\n                                                    // Mc       MODI SIGN VISARGA\n                                                    if (0x1163e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\n                                                    if (0x1163f <= code && code <= 0x11640) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1193f) {\n                                if (code < 0x11727) {\n                                    if (code < 0x116b6) {\n                                        if (code < 0x116ad) {\n                                            // Mn       TAKRI SIGN ANUSVARA\n                                            if (0x116ab === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAKRI SIGN VISARGA\n                                            if (0x116ac === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x116ae) {\n                                                // Mn       TAKRI VOWEL SIGN AA\n                                                if (0x116ad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x116b0) {\n                                                    // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\n                                                    if (0x116ae <= code && code <= 0x116af) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\n                                                    if (0x116b0 <= code && code <= 0x116b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1171d) {\n                                            // Mc       TAKRI SIGN VIRAMA\n                                            if (0x116b6 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TAKRI SIGN NUKTA\n                                            if (0x116b7 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11722) {\n                                                // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\n                                                if (0x1171d <= code && code <= 0x1171f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11726) {\n                                                    // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\n                                                    if (0x11722 <= code && code <= 0x11725) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       AHOM VOWEL SIGN E\n                                                    if (0x11726 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11930) {\n                                        if (code < 0x1182f) {\n                                            if (code < 0x1182c) {\n                                                // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\n                                                if (0x11727 <= code && code <= 0x1172b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] DOGRA VOWEL SIGN AA..DOGRA VOWEL SIGN II\n                                                if (0x1182c <= code && code <= 0x1182e) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11838) {\n                                                // Mn   [9] DOGRA VOWEL SIGN U..DOGRA SIGN ANUSVARA\n                                                if (0x1182f <= code && code <= 0x11837) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11839) {\n                                                    // Mc       DOGRA SIGN VISARGA\n                                                    if (0x11838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DOGRA SIGN VIRAMA..DOGRA SIGN NUKTA\n                                                    if (0x11839 <= code && code <= 0x1183a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1193b) {\n                                            if (code < 0x11931) {\n                                                // Mc       DIVES AKURU VOWEL SIGN AA\n                                                if (0x11930 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11937) {\n                                                    // Mc   [5] DIVES AKURU VOWEL SIGN I..DIVES AKURU VOWEL SIGN E\n                                                    if (0x11931 <= code && code <= 0x11935) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O\n                                                    if (0x11937 <= code && code <= 0x11938) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1193d) {\n                                                // Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU\n                                                if (0x1193b <= code && code <= 0x1193c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU SIGN HALANTA\n                                                if (0x1193d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU VIRAMA\n                                                if (0x1193e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11a01) {\n                                    if (code < 0x119d1) {\n                                        if (code < 0x11941) {\n                                            // Lo       DIVES AKURU PREFIXED NASAL SIGN\n                                            if (0x1193f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       DIVES AKURU MEDIAL YA\n                                            if (0x11940 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11942) {\n                                                // Lo       DIVES AKURU INITIAL RA\n                                                if (0x11941 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU MEDIAL RA\n                                                if (0x11942 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU SIGN NUKTA\n                                                if (0x11943 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x119dc) {\n                                            if (code < 0x119d4) {\n                                                // Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II\n                                                if (0x119d1 <= code && code <= 0x119d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x119da) {\n                                                    // Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR\n                                                    if (0x119d4 <= code && code <= 0x119d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI\n                                                    if (0x119da <= code && code <= 0x119db) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x119e0) {\n                                                // Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA\n                                                if (0x119dc <= code && code <= 0x119df) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NANDINAGARI SIGN VIRAMA\n                                                if (0x119e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E\n                                                if (0x119e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11a47) {\n                                        if (code < 0x11a39) {\n                                            if (code < 0x11a33) {\n                                                // Mn  [10] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL LENGTH MARK\n                                                if (0x11a01 <= code && code <= 0x11a0a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\n                                                if (0x11a33 <= code && code <= 0x11a38) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a3a) {\n                                                // Mc       ZANABAZAR SQUARE SIGN VISARGA\n                                                if (0x11a39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a3b) {\n                                                    // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\n                                                    if (0x11a3a === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\n                                                    if (0x11a3b <= code && code <= 0x11a3e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11a59) {\n                                            if (code < 0x11a51) {\n                                                // Mn       ZANABAZAR SQUARE SUBJOINER\n                                                if (0x11a47 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a57) {\n                                                    // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\n                                                    if (0x11a51 <= code && code <= 0x11a56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\n                                                    if (0x11a57 <= code && code <= 0x11a58) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a84) {\n                                                // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\n                                                if (0x11a59 <= code && code <= 0x11a5b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8a) {\n                                                    // Lo   [6] SOYOMBO SIGN JIHVAMULIYA..SOYOMBO CLUSTER-INITIAL LETTER SA\n                                                    if (0x11a84 <= code && code <= 0x11a89) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\n                                                    if (0x11a8a <= code && code <= 0x11a96) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x16f51) {\n                            if (code < 0x11d90) {\n                                if (code < 0x11cb1) {\n                                    if (code < 0x11c3e) {\n                                        if (code < 0x11c2f) {\n                                            if (code < 0x11a98) {\n                                                // Mc       SOYOMBO SIGN VISARGA\n                                                if (0x11a97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\n                                                if (0x11a98 <= code && code <= 0x11a99) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11c30) {\n                                                // Mc       BHAIKSUKI VOWEL SIGN AA\n                                                if (0x11c2f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11c38) {\n                                                    // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\n                                                    if (0x11c30 <= code && code <= 0x11c36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\n                                                    if (0x11c38 <= code && code <= 0x11c3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11c92) {\n                                            // Mc       BHAIKSUKI SIGN VISARGA\n                                            if (0x11c3e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BHAIKSUKI SIGN VIRAMA\n                                            if (0x11c3f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11ca9) {\n                                                // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\n                                                if (0x11c92 <= code && code <= 0x11ca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11caa) {\n                                                    // Mc       MARCHEN SUBJOINED LETTER YA\n                                                    if (0x11ca9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\n                                                    if (0x11caa <= code && code <= 0x11cb0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11d3a) {\n                                        if (code < 0x11cb4) {\n                                            if (code < 0x11cb2) {\n                                                // Mc       MARCHEN VOWEL SIGN I\n                                                if (0x11cb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\n                                                if (0x11cb2 <= code && code <= 0x11cb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11cb5) {\n                                                // Mc       MARCHEN VOWEL SIGN O\n                                                if (0x11cb4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d31) {\n                                                    // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\n                                                    if (0x11cb5 <= code && code <= 0x11cb6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\n                                                    if (0x11d31 <= code && code <= 0x11d36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11d46) {\n                                            if (code < 0x11d3c) {\n                                                // Mn       MASARAM GONDI VOWEL SIGN E\n                                                if (0x11d3a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d3f) {\n                                                    // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\n                                                    if (0x11d3c <= code && code <= 0x11d3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\n                                                    if (0x11d3f <= code && code <= 0x11d45) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d47) {\n                                                // Lo       MASARAM GONDI REPHA\n                                                if (0x11d46 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d8a) {\n                                                    // Mn       MASARAM GONDI RA-KARA\n                                                    if (0x11d47 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [5] GUNJALA GONDI VOWEL SIGN AA..GUNJALA GONDI VOWEL SIGN UU\n                                                    if (0x11d8a <= code && code <= 0x11d8e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11f36) {\n                                    if (code < 0x11ef3) {\n                                        if (code < 0x11d95) {\n                                            if (code < 0x11d93) {\n                                                // Mn   [2] GUNJALA GONDI VOWEL SIGN EE..GUNJALA GONDI VOWEL SIGN AI\n                                                if (0x11d90 <= code && code <= 0x11d91) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] GUNJALA GONDI VOWEL SIGN OO..GUNJALA GONDI VOWEL SIGN AU\n                                                if (0x11d93 <= code && code <= 0x11d94) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d96) {\n                                                // Mn       GUNJALA GONDI SIGN ANUSVARA\n                                                if (0x11d95 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GUNJALA GONDI SIGN VISARGA\n                                                if (0x11d96 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       GUNJALA GONDI VIRAMA\n                                                if (0x11d97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11f02) {\n                                            if (code < 0x11ef5) {\n                                                // Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n                                                if (0x11ef3 <= code && code <= 0x11ef4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f00) {\n                                                    // Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n                                                    if (0x11ef5 <= code && code <= 0x11ef6) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n                                                    if (0x11f00 <= code && code <= 0x11f01) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f03) {\n                                                // Lo       KAWI SIGN REPHA\n                                                if (0x11f02 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f34) {\n                                                    // Mc       KAWI SIGN VISARGA\n                                                    if (0x11f03 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n                                                    if (0x11f34 <= code && code <= 0x11f35) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x13430) {\n                                        if (code < 0x11f40) {\n                                            if (code < 0x11f3e) {\n                                                // Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n                                                if (0x11f36 <= code && code <= 0x11f3a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n                                                if (0x11f3e <= code && code <= 0x11f3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f41) {\n                                                // Mn       KAWI VOWEL SIGN EU\n                                                if (0x11f40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       KAWI SIGN KILLER\n                                                if (0x11f41 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       KAWI CONJOINER\n                                                if (0x11f42 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x16af0) {\n                                            if (code < 0x13440) {\n                                                // Cf  [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n                                                if (0x13430 <= code && code <= 0x1343f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x13447) {\n                                                    // Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n                                                    if (0x13440 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n                                                    if (0x13447 <= code && code <= 0x13455) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16b30) {\n                                                // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n                                                if (0x16af0 <= code && code <= 0x16af4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x16f4f) {\n                                                    // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n                                                    if (0x16b30 <= code && code <= 0x16b36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MIAO SIGN CONSONANT MODIFIER BAR\n                                                    if (0x16f4f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1da84) {\n                                if (code < 0x1d167) {\n                                    if (code < 0x1bca0) {\n                                        if (code < 0x16fe4) {\n                                            if (code < 0x16f8f) {\n                                                // Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n                                                if (0x16f51 <= code && code <= 0x16f87) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n                                                if (0x16f8f <= code && code <= 0x16f92) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16ff0) {\n                                                // Mn       KHITAN SMALL SCRIPT FILLER\n                                                if (0x16fe4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bc9d) {\n                                                    // Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY\n                                                    if (0x16ff0 <= code && code <= 0x16ff1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\n                                                    if (0x1bc9d <= code && code <= 0x1bc9e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1cf30) {\n                                            if (code < 0x1cf00) {\n                                                // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\n                                                if (0x1bca0 <= code && code <= 0x1bca3) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [46] ZNAMENNY COMBINING MARK GORAZDO NIZKO S KRYZHEM ON LEFT..ZNAMENNY COMBINING MARK KRYZH ON LEFT\n                                                if (0x1cf00 <= code && code <= 0x1cf2d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d165) {\n                                                // Mn  [23] ZNAMENNY COMBINING TONAL RANGE MARK MRACHNO..ZNAMENNY PRIZNAK MODIFIER ROG\n                                                if (0x1cf30 <= code && code <= 0x1cf46) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING STEM\n                                                if (0x1d165 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\n                                                if (0x1d166 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1d185) {\n                                        if (code < 0x1d16e) {\n                                            if (code < 0x1d16d) {\n                                                // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\n                                                if (0x1d167 <= code && code <= 0x1d169) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\n                                                if (0x1d16d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d173) {\n                                                // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\n                                                if (0x1d16e <= code && code <= 0x1d172) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d17b) {\n                                                    // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\n                                                    if (0x1d173 <= code && code <= 0x1d17a) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n                                                    if (0x1d17b <= code && code <= 0x1d182) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1da00) {\n                                            if (code < 0x1d1aa) {\n                                                // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n                                                if (0x1d185 <= code && code <= 0x1d18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d242) {\n                                                    // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n                                                    if (0x1d1aa <= code && code <= 0x1d1ad) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n                                                    if (0x1d242 <= code && code <= 0x1d244) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1da3b) {\n                                                // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\n                                                if (0x1da00 <= code && code <= 0x1da36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1da75) {\n                                                    // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\n                                                    if (0x1da3b <= code && code <= 0x1da6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\n                                                    if (0x1da75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1e2ec) {\n                                    if (code < 0x1e01b) {\n                                        if (code < 0x1daa1) {\n                                            if (code < 0x1da9b) {\n                                                // Mn       SIGNWRITING LOCATION HEAD NECK\n                                                if (0x1da84 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\n                                                if (0x1da9b <= code && code <= 0x1da9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e000) {\n                                                // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\n                                                if (0x1daa1 <= code && code <= 0x1daaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e008) {\n                                                    // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n                                                    if (0x1e000 <= code && code <= 0x1e006) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n                                                    if (0x1e008 <= code && code <= 0x1e018) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1e08f) {\n                                            if (code < 0x1e023) {\n                                                // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n                                                if (0x1e01b <= code && code <= 0x1e021) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e026) {\n                                                    // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n                                                    if (0x1e023 <= code && code <= 0x1e024) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n                                                    if (0x1e026 <= code && code <= 0x1e02a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e130) {\n                                                // Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n                                                if (0x1e08f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e2ae) {\n                                                    // Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n                                                    if (0x1e130 <= code && code <= 0x1e136) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TOTO SIGN RISING TONE\n                                                    if (0x1e2ae === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1f3fb) {\n                                        if (code < 0x1e8d0) {\n                                            if (code < 0x1e4ec) {\n                                                // Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n                                                if (0x1e2ec <= code && code <= 0x1e2ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n                                                if (0x1e4ec <= code && code <= 0x1e4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e944) {\n                                                // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n                                                if (0x1e8d0 <= code && code <= 0x1e8d6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1f1e6) {\n                                                    // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n                                                    if (0x1e944 <= code && code <= 0x1e94a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\n                                                    if (0x1f1e6 <= code && code <= 0x1f1ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xe0080) {\n                                            if (code < 0xe0000) {\n                                                // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n                                                if (0x1f3fb <= code && code <= 0x1f3ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe0020) {\n                                                    // Cn       <reserved-E0000>\n                                                    // Cf       LANGUAGE TAG\n                                                    // Cn  [30] <reserved-E0002>..<reserved-E001F>\n                                                    if (0xe0000 <= code && code <= 0xe001f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf  [96] TAG SPACE..CANCEL TAG\n                                                    if (0xe0020 <= code && code <= 0xe007f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe0100) {\n                                                // Cn [128] <reserved-E0080>..<reserved-E00FF>\n                                                if (0xe0080 <= code && code <= 0xe00ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe01f0) {\n                                                    // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n                                                    if (0xe0100 <= code && code <= 0xe01ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n                                                    if (0xe01f0 <= code && code <= 0xe0fff) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n    /**\n     * Given a Unicode code point, returns if symbol is an extended pictographic or some other break\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getEmojiProperty(code) {\n        // emoji property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt\n        // and generated by\n        // node ./scripts/generate-emoji-extended-pictographic.js\n        if (code < 0x27b0) {\n            if (code < 0x2600) {\n                if (code < 0x2328) {\n                    if (code < 0x2122) {\n                        if (code < 0x203c) {\n                            // E0.6   [1] (\u00A9\uFE0F)       copyright\n                            if (0xa9 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u00AE\uFE0F)       registered\n                            if (0xae === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            // E0.6   [1] (\u203C\uFE0F)       double exclamation mark\n                            if (0x203c === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2049\uFE0F)       exclamation question mark\n                            if (0x2049 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2194) {\n                            // E0.6   [1] (\u2122\uFE0F)       trade mark\n                            if (0x2122 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2139\uFE0F)       information\n                            if (0x2139 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x21a9) {\n                                // E0.6   [6] (\u2194\uFE0F..\u2199\uFE0F)    left-right arrow..down-left arrow\n                                if (0x2194 <= code && code <= 0x2199) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x231a) {\n                                    // E0.6   [2] (\u21A9\uFE0F..\u21AA\uFE0F)    right arrow curving left..left arrow curving right\n                                    if (0x21a9 <= code && code <= 0x21aa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [2] (\u231A..\u231B)    watch..hourglass done\n                                    if (0x231a <= code && code <= 0x231b) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x24c2) {\n                        if (code < 0x23cf) {\n                            // E1.0   [1] (\u2328\uFE0F)       keyboard\n                            if (0x2328 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.0   [1] (\u2388)       HELM SYMBOL\n                            if (0x2388 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x23e9) {\n                                // E1.0   [1] (\u23CF\uFE0F)       eject button\n                                if (0x23cf === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x23f8) {\n                                    // E0.6   [4] (\u23E9..\u23EC)    fast-forward button..fast down button\n                                    // E0.7   [2] (\u23ED\uFE0F..\u23EE\uFE0F)    next track button..last track button\n                                    // E1.0   [1] (\u23EF\uFE0F)       play or pause button\n                                    // E0.6   [1] (\u23F0)       alarm clock\n                                    // E1.0   [2] (\u23F1\uFE0F..\u23F2\uFE0F)    stopwatch..timer clock\n                                    // E0.6   [1] (\u23F3)       hourglass not done\n                                    if (0x23e9 <= code && code <= 0x23f3) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.7   [3] (\u23F8\uFE0F..\u23FA\uFE0F)    pause button..record button\n                                    if (0x23f8 <= code && code <= 0x23fa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x25b6) {\n                            if (code < 0x25aa) {\n                                // E0.6   [1] (\u24C2\uFE0F)       circled M\n                                if (0x24c2 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\u25AA\uFE0F..\u25AB\uFE0F)    black small square..white small square\n                                if (0x25aa <= code && code <= 0x25ab) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x25c0) {\n                                // E0.6   [1] (\u25B6\uFE0F)       play button\n                                if (0x25b6 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x25fb) {\n                                    // E0.6   [1] (\u25C0\uFE0F)       reverse button\n                                    if (0x25c0 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [4] (\u25FB\uFE0F..\u25FE)    white medium square..black medium-small square\n                                    if (0x25fb <= code && code <= 0x25fe) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x2733) {\n                    if (code < 0x2714) {\n                        if (code < 0x2614) {\n                            if (code < 0x2607) {\n                                // E0.6   [2] (\u2600\uFE0F..\u2601\uFE0F)    sun..cloud\n                                // E0.7   [2] (\u2602\uFE0F..\u2603\uFE0F)    umbrella..snowman\n                                // E1.0   [1] (\u2604\uFE0F)       comet\n                                // E0.0   [1] (\u2605)       BLACK STAR\n                                if (0x2600 <= code && code <= 0x2605) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [7] (\u2607..\u260D)    LIGHTNING..OPPOSITION\n                                // E0.6   [1] (\u260E\uFE0F)       telephone\n                                // E0.0   [2] (\u260F..\u2610)    WHITE TELEPHONE..BALLOT BOX\n                                // E0.6   [1] (\u2611\uFE0F)       check box with check\n                                // E0.0   [1] (\u2612)       BALLOT BOX WITH X\n                                if (0x2607 <= code && code <= 0x2612) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2690) {\n                                // E0.6   [2] (\u2614..\u2615)    umbrella with rain drops..hot beverage\n                                // E0.0   [2] (\u2616..\u2617)    WHITE SHOGI PIECE..BLACK SHOGI PIECE\n                                // E1.0   [1] (\u2618\uFE0F)       shamrock\n                                // E0.0   [4] (\u2619..\u261C)    REVERSED ROTATED FLORAL HEART BULLET..WHITE LEFT POINTING INDEX\n                                // E0.6   [1] (\u261D\uFE0F)       index pointing up\n                                // E0.0   [2] (\u261E..\u261F)    WHITE RIGHT POINTING INDEX..WHITE DOWN POINTING INDEX\n                                // E1.0   [1] (\u2620\uFE0F)       skull and crossbones\n                                // E0.0   [1] (\u2621)       CAUTION SIGN\n                                // E1.0   [2] (\u2622\uFE0F..\u2623\uFE0F)    radioactive..biohazard\n                                // E0.0   [2] (\u2624..\u2625)    CADUCEUS..ANKH\n                                // E1.0   [1] (\u2626\uFE0F)       orthodox cross\n                                // E0.0   [3] (\u2627..\u2629)    CHI RHO..CROSS OF JERUSALEM\n                                // E0.7   [1] (\u262A\uFE0F)       star and crescent\n                                // E0.0   [3] (\u262B..\u262D)    FARSI SYMBOL..HAMMER AND SICKLE\n                                // E1.0   [1] (\u262E\uFE0F)       peace symbol\n                                // E0.7   [1] (\u262F\uFE0F)       yin yang\n                                // E0.0   [8] (\u2630..\u2637)    TRIGRAM FOR HEAVEN..TRIGRAM FOR EARTH\n                                // E0.7   [2] (\u2638\uFE0F..\u2639\uFE0F)    wheel of dharma..frowning face\n                                // E0.6   [1] (\u263A\uFE0F)       smiling face\n                                // E0.0   [5] (\u263B..\u263F)    BLACK SMILING FACE..MERCURY\n                                // E4.0   [1] (\u2640\uFE0F)       female sign\n                                // E0.0   [1] (\u2641)       EARTH\n                                // E4.0   [1] (\u2642\uFE0F)       male sign\n                                // E0.0   [5] (\u2643..\u2647)    JUPITER..PLUTO\n                                // E0.6  [12] (\u2648..\u2653)    Aries..Pisces\n                                // E0.0  [11] (\u2654..\u265E)    WHITE CHESS KING..BLACK CHESS KNIGHT\n                                // E11.0  [1] (\u265F\uFE0F)       chess pawn\n                                // E0.6   [1] (\u2660\uFE0F)       spade suit\n                                // E0.0   [2] (\u2661..\u2662)    WHITE HEART SUIT..WHITE DIAMOND SUIT\n                                // E0.6   [1] (\u2663\uFE0F)       club suit\n                                // E0.0   [1] (\u2664)       WHITE SPADE SUIT\n                                // E0.6   [2] (\u2665\uFE0F..\u2666\uFE0F)    heart suit..diamond suit\n                                // E0.0   [1] (\u2667)       WHITE CLUB SUIT\n                                // E0.6   [1] (\u2668\uFE0F)       hot springs\n                                // E0.0  [18] (\u2669..\u267A)    QUARTER NOTE..RECYCLING SYMBOL FOR GENERIC MATERIALS\n                                // E0.6   [1] (\u267B\uFE0F)       recycling symbol\n                                // E0.0   [2] (\u267C..\u267D)    RECYCLED PAPER SYMBOL..PARTIALLY-RECYCLED PAPER SYMBOL\n                                // E11.0  [1] (\u267E\uFE0F)       infinity\n                                // E0.6   [1] (\u267F)       wheelchair symbol\n                                // E0.0   [6] (\u2680..\u2685)    DIE FACE-1..DIE FACE-6\n                                if (0x2614 <= code && code <= 0x2685) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x2708) {\n                                    // E0.0   [2] (\u2690..\u2691)    WHITE FLAG..BLACK FLAG\n                                    // E1.0   [1] (\u2692\uFE0F)       hammer and pick\n                                    // E0.6   [1] (\u2693)       anchor\n                                    // E1.0   [1] (\u2694\uFE0F)       crossed swords\n                                    // E4.0   [1] (\u2695\uFE0F)       medical symbol\n                                    // E1.0   [2] (\u2696\uFE0F..\u2697\uFE0F)    balance scale..alembic\n                                    // E0.0   [1] (\u2698)       FLOWER\n                                    // E1.0   [1] (\u2699\uFE0F)       gear\n                                    // E0.0   [1] (\u269A)       STAFF OF HERMES\n                                    // E1.0   [2] (\u269B\uFE0F..\u269C\uFE0F)    atom symbol..fleur-de-lis\n                                    // E0.0   [3] (\u269D..\u269F)    OUTLINED WHITE STAR..THREE LINES CONVERGING LEFT\n                                    // E0.6   [2] (\u26A0\uFE0F..\u26A1)    warning..high voltage\n                                    // E0.0   [5] (\u26A2..\u26A6)    DOUBLED FEMALE SIGN..MALE WITH STROKE SIGN\n                                    // E13.0  [1] (\u26A7\uFE0F)       transgender symbol\n                                    // E0.0   [2] (\u26A8..\u26A9)    VERTICAL MALE WITH STROKE SIGN..HORIZONTAL MALE WITH STROKE SIGN\n                                    // E0.6   [2] (\u26AA..\u26AB)    white circle..black circle\n                                    // E0.0   [4] (\u26AC..\u26AF)    MEDIUM SMALL WHITE CIRCLE..UNMARRIED PARTNERSHIP SYMBOL\n                                    // E1.0   [2] (\u26B0\uFE0F..\u26B1\uFE0F)    coffin..funeral urn\n                                    // E0.0  [11] (\u26B2..\u26BC)    NEUTER..SESQUIQUADRATE\n                                    // E0.6   [2] (\u26BD..\u26BE)    soccer ball..baseball\n                                    // E0.0   [5] (\u26BF..\u26C3)    SQUARED KEY..BLACK DRAUGHTS KING\n                                    // E0.6   [2] (\u26C4..\u26C5)    snowman without snow..sun behind cloud\n                                    // E0.0   [2] (\u26C6..\u26C7)    RAIN..BLACK SNOWMAN\n                                    // E0.7   [1] (\u26C8\uFE0F)       cloud with lightning and rain\n                                    // E0.0   [5] (\u26C9..\u26CD)    TURNED WHITE SHOGI PIECE..DISABLED CAR\n                                    // E0.6   [1] (\u26CE)       Ophiuchus\n                                    // E0.7   [1] (\u26CF\uFE0F)       pick\n                                    // E0.0   [1] (\u26D0)       CAR SLIDING\n                                    // E0.7   [1] (\u26D1\uFE0F)       rescue worker\u2019s helmet\n                                    // E0.0   [1] (\u26D2)       CIRCLED CROSSING LANES\n                                    // E0.7   [1] (\u26D3\uFE0F)       chains\n                                    // E0.6   [1] (\u26D4)       no entry\n                                    // E0.0  [20] (\u26D5..\u26E8)    ALTERNATE ONE-WAY LEFT WAY TRAFFIC..BLACK CROSS ON SHIELD\n                                    // E0.7   [1] (\u26E9\uFE0F)       shinto shrine\n                                    // E0.6   [1] (\u26EA)       church\n                                    // E0.0   [5] (\u26EB..\u26EF)    CASTLE..MAP SYMBOL FOR LIGHTHOUSE\n                                    // E0.7   [2] (\u26F0\uFE0F..\u26F1\uFE0F)    mountain..umbrella on ground\n                                    // E0.6   [2] (\u26F2..\u26F3)    fountain..flag in hole\n                                    // E0.7   [1] (\u26F4\uFE0F)       ferry\n                                    // E0.6   [1] (\u26F5)       sailboat\n                                    // E0.0   [1] (\u26F6)       SQUARE FOUR CORNERS\n                                    // E0.7   [3] (\u26F7\uFE0F..\u26F9\uFE0F)    skier..person bouncing ball\n                                    // E0.6   [1] (\u26FA)       tent\n                                    // E0.0   [2] (\u26FB..\u26FC)    JAPANESE BANK SYMBOL..HEADSTONE GRAVEYARD SYMBOL\n                                    // E0.6   [1] (\u26FD)       fuel pump\n                                    // E0.0   [4] (\u26FE..\u2701)    CUP ON BLACK SQUARE..UPPER BLADE SCISSORS\n                                    // E0.6   [1] (\u2702\uFE0F)       scissors\n                                    // E0.0   [2] (\u2703..\u2704)    LOWER BLADE SCISSORS..WHITE SCISSORS\n                                    // E0.6   [1] (\u2705)       check mark button\n                                    if (0x2690 <= code && code <= 0x2705) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [5] (\u2708\uFE0F..\u270C\uFE0F)    airplane..victory hand\n                                    // E0.7   [1] (\u270D\uFE0F)       writing hand\n                                    // E0.0   [1] (\u270E)       LOWER RIGHT PENCIL\n                                    // E0.6   [1] (\u270F\uFE0F)       pencil\n                                    // E0.0   [2] (\u2710..\u2711)    UPPER RIGHT PENCIL..WHITE NIB\n                                    // E0.6   [1] (\u2712\uFE0F)       black nib\n                                    if (0x2708 <= code && code <= 0x2712) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x271d) {\n                            // E0.6   [1] (\u2714\uFE0F)       check mark\n                            if (0x2714 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2716\uFE0F)       multiply\n                            if (0x2716 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2721) {\n                                // E0.7   [1] (\u271D\uFE0F)       latin cross\n                                if (0x271d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.7   [1] (\u2721\uFE0F)       star of David\n                                if (0x2721 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u2728)       sparkles\n                                if (0x2728 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x2753) {\n                        if (code < 0x2747) {\n                            if (code < 0x2744) {\n                                // E0.6   [2] (\u2733\uFE0F..\u2734\uFE0F)    eight-spoked asterisk..eight-pointed star\n                                if (0x2733 <= code && code <= 0x2734) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2744\uFE0F)       snowflake\n                                if (0x2744 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x274c) {\n                                // E0.6   [1] (\u2747\uFE0F)       sparkle\n                                if (0x2747 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u274C)       cross mark\n                                if (0x274c === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u274E)       cross mark button\n                                if (0x274e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2763) {\n                            if (code < 0x2757) {\n                                // E0.6   [3] (\u2753..\u2755)    red question mark..white exclamation mark\n                                if (0x2753 <= code && code <= 0x2755) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2757)       red exclamation mark\n                                if (0x2757 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2795) {\n                                // E1.0   [1] (\u2763\uFE0F)       heart exclamation\n                                // E0.6   [1] (\u2764\uFE0F)       red heart\n                                // E0.0   [3] (\u2765..\u2767)    ROTATED HEAVY BLACK HEART BULLET..ROTATED FLORAL HEART BULLET\n                                if (0x2763 <= code && code <= 0x2767) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x27a1) {\n                                    // E0.6   [3] (\u2795..\u2797)    plus..divide\n                                    if (0x2795 <= code && code <= 0x2797) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [1] (\u27A1\uFE0F)       right arrow\n                                    if (0x27a1 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0x1f201) {\n                if (code < 0x3297) {\n                    if (code < 0x2b1b) {\n                        if (code < 0x2934) {\n                            // E0.6   [1] (\u27B0)       curly loop\n                            if (0x27b0 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E1.0   [1] (\u27BF)       double curly loop\n                            if (0x27bf === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2b05) {\n                                // E0.6   [2] (\u2934\uFE0F..\u2935\uFE0F)    right arrow curving up..right arrow curving down\n                                if (0x2934 <= code && code <= 0x2935) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [3] (\u2B05\uFE0F..\u2B07\uFE0F)    left arrow..down arrow\n                                if (0x2b05 <= code && code <= 0x2b07) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2b55) {\n                            if (code < 0x2b50) {\n                                // E0.6   [2] (\u2B1B..\u2B1C)    black large square..white large square\n                                if (0x2b1b <= code && code <= 0x2b1c) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2B50)       star\n                                if (0x2b50 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x3030) {\n                                // E0.6   [1] (\u2B55)       hollow red circle\n                                if (0x2b55 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u3030\uFE0F)       wavy dash\n                                if (0x3030 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u303D\uFE0F)       part alternation mark\n                                if (0x303d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f16c) {\n                        if (code < 0x1f000) {\n                            // E0.6   [1] (\u3297\uFE0F)       Japanese \u201Ccongratulations\u201D button\n                            if (0x3297 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u3299\uFE0F)       Japanese \u201Csecret\u201D button\n                            if (0x3299 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x1f10d) {\n                                // E0.0   [4] (\uD83C\uDC00..\uD83C\uDC03)    MAHJONG TILE EAST WIND..MAHJONG TILE NORTH WIND\n                                // E0.6   [1] (\uD83C\uDC04)       mahjong red dragon\n                                // E0.0 [202] (\uD83C\uDC05..\uD83C\uDCCE)    MAHJONG TILE GREEN DRAGON..PLAYING CARD KING OF DIAMONDS\n                                // E0.6   [1] (\uD83C\uDCCF)       joker\n                                // E0.0  [48] (\uD83C\uDCD0..\uD83C\uDCFF)    <reserved-1F0D0>..<reserved-1F0FF>\n                                if (0x1f000 <= code && code <= 0x1f0ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f12f) {\n                                    // E0.0   [3] (\uD83C\uDD0D..\uD83C\uDD0F)    CIRCLED ZERO WITH SLASH..CIRCLED DOLLAR SIGN WITH OVERLAID BACKSLASH\n                                    if (0x1f10d <= code && code <= 0x1f10f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [1] (\uD83C\uDD2F)       COPYLEFT SYMBOL\n                                    if (0x1f12f === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f18e) {\n                            if (code < 0x1f17e) {\n                                // E0.0   [4] (\uD83C\uDD6C..\uD83C\uDD6F)    RAISED MR SIGN..CIRCLED HUMAN FIGURE\n                                // E0.6   [2] (\uD83C\uDD70\uFE0F..\uD83C\uDD71\uFE0F)    A button (blood type)..B button (blood type)\n                                if (0x1f16c <= code && code <= 0x1f171) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\uD83C\uDD7E\uFE0F..\uD83C\uDD7F\uFE0F)    O button (blood type)..P button\n                                if (0x1f17e <= code && code <= 0x1f17f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f191) {\n                                // E0.6   [1] (\uD83C\uDD8E)       AB button (blood type)\n                                if (0x1f18e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f1ad) {\n                                    // E0.6  [10] (\uD83C\uDD91..\uD83C\uDD9A)    CL button..VS button\n                                    if (0x1f191 <= code && code <= 0x1f19a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [57] (\uD83C\uDDAD..\uD83C\uDDE5)    MASK WORK SYMBOL..<reserved-1F1E5>\n                                    if (0x1f1ad <= code && code <= 0x1f1e5) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1f7d5) {\n                    if (code < 0x1f249) {\n                        if (code < 0x1f22f) {\n                            if (code < 0x1f21a) {\n                                // E0.6   [2] (\uD83C\uDE01..\uD83C\uDE02\uFE0F)    Japanese \u201Chere\u201D button..Japanese \u201Cservice charge\u201D button\n                                // E0.0  [13] (\uD83C\uDE03..\uD83C\uDE0F)    <reserved-1F203>..<reserved-1F20F>\n                                if (0x1f201 <= code && code <= 0x1f20f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\uD83C\uDE1A)       Japanese \u201Cfree of charge\u201D button\n                                if (0x1f21a === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f232) {\n                                // E0.6   [1] (\uD83C\uDE2F)       Japanese \u201Creserved\u201D button\n                                if (0x1f22f === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f23c) {\n                                    // E0.6   [9] (\uD83C\uDE32..\uD83C\uDE3A)    Japanese \u201Cprohibited\u201D button..Japanese \u201Copen for business\u201D button\n                                    if (0x1f232 <= code && code <= 0x1f23a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [4] (\uD83C\uDE3C..\uD83C\uDE3F)    <reserved-1F23C>..<reserved-1F23F>\n                                    if (0x1f23c <= code && code <= 0x1f23f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f546) {\n                            if (code < 0x1f400) {\n                                // E0.0   [7] (\uD83C\uDE49..\uD83C\uDE4F)    <reserved-1F249>..<reserved-1F24F>\n                                // E0.6   [2] (\uD83C\uDE50..\uD83C\uDE51)    Japanese \u201Cbargain\u201D button..Japanese \u201Cacceptable\u201D button\n                                // E0.0 [174] (\uD83C\uDE52..\uD83C\uDEFF)    <reserved-1F252>..<reserved-1F2FF>\n                                // E0.6  [13] (\uD83C\uDF00..\uD83C\uDF0C)    cyclone..milky way\n                                // E0.7   [2] (\uD83C\uDF0D..\uD83C\uDF0E)    globe showing Europe-Africa..globe showing Americas\n                                // E0.6   [1] (\uD83C\uDF0F)       globe showing Asia-Australia\n                                // E1.0   [1] (\uD83C\uDF10)       globe with meridians\n                                // E0.6   [1] (\uD83C\uDF11)       new moon\n                                // E1.0   [1] (\uD83C\uDF12)       waxing crescent moon\n                                // E0.6   [3] (\uD83C\uDF13..\uD83C\uDF15)    first quarter moon..full moon\n                                // E1.0   [3] (\uD83C\uDF16..\uD83C\uDF18)    waning gibbous moon..waning crescent moon\n                                // E0.6   [1] (\uD83C\uDF19)       crescent moon\n                                // E1.0   [1] (\uD83C\uDF1A)       new moon face\n                                // E0.6   [1] (\uD83C\uDF1B)       first quarter moon face\n                                // E0.7   [1] (\uD83C\uDF1C)       last quarter moon face\n                                // E1.0   [2] (\uD83C\uDF1D..\uD83C\uDF1E)    full moon face..sun with face\n                                // E0.6   [2] (\uD83C\uDF1F..\uD83C\uDF20)    glowing star..shooting star\n                                // E0.7   [1] (\uD83C\uDF21\uFE0F)       thermometer\n                                // E0.0   [2] (\uD83C\uDF22..\uD83C\uDF23)    BLACK DROPLET..WHITE SUN\n                                // E0.7   [9] (\uD83C\uDF24\uFE0F..\uD83C\uDF2C\uFE0F)    sun behind small cloud..wind face\n                                // E1.0   [3] (\uD83C\uDF2D..\uD83C\uDF2F)    hot dog..burrito\n                                // E0.6   [2] (\uD83C\uDF30..\uD83C\uDF31)    chestnut..seedling\n                                // E1.0   [2] (\uD83C\uDF32..\uD83C\uDF33)    evergreen tree..deciduous tree\n                                // E0.6   [2] (\uD83C\uDF34..\uD83C\uDF35)    palm tree..cactus\n                                // E0.7   [1] (\uD83C\uDF36\uFE0F)       hot pepper\n                                // E0.6  [20] (\uD83C\uDF37..\uD83C\uDF4A)    tulip..tangerine\n                                // E1.0   [1] (\uD83C\uDF4B)       lemon\n                                // E0.6   [4] (\uD83C\uDF4C..\uD83C\uDF4F)    banana..green apple\n                                // E1.0   [1] (\uD83C\uDF50)       pear\n                                // E0.6  [43] (\uD83C\uDF51..\uD83C\uDF7B)    peach..clinking beer mugs\n                                // E1.0   [1] (\uD83C\uDF7C)       baby bottle\n                                // E0.7   [1] (\uD83C\uDF7D\uFE0F)       fork and knife with plate\n                                // E1.0   [2] (\uD83C\uDF7E..\uD83C\uDF7F)    bottle with popping cork..popcorn\n                                // E0.6  [20] (\uD83C\uDF80..\uD83C\uDF93)    ribbon..graduation cap\n                                // E0.0   [2] (\uD83C\uDF94..\uD83C\uDF95)    HEART WITH TIP ON THE LEFT..BOUQUET OF FLOWERS\n                                // E0.7   [2] (\uD83C\uDF96\uFE0F..\uD83C\uDF97\uFE0F)    military medal..reminder ribbon\n                                // E0.0   [1] (\uD83C\uDF98)       MUSICAL KEYBOARD WITH JACKS\n                                // E0.7   [3] (\uD83C\uDF99\uFE0F..\uD83C\uDF9B\uFE0F)    studio microphone..control knobs\n                                // E0.0   [2] (\uD83C\uDF9C..\uD83C\uDF9D)    BEAMED ASCENDING MUSICAL NOTES..BEAMED DESCENDING MUSICAL NOTES\n                                // E0.7   [2] (\uD83C\uDF9E\uFE0F..\uD83C\uDF9F\uFE0F)    film frames..admission tickets\n                                // E0.6  [37] (\uD83C\uDFA0..\uD83C\uDFC4)    carousel horse..person surfing\n                                // E1.0   [1] (\uD83C\uDFC5)       sports medal\n                                // E0.6   [1] (\uD83C\uDFC6)       trophy\n                                // E1.0   [1] (\uD83C\uDFC7)       horse racing\n                                // E0.6   [1] (\uD83C\uDFC8)       american football\n                                // E1.0   [1] (\uD83C\uDFC9)       rugby football\n                                // E0.6   [1] (\uD83C\uDFCA)       person swimming\n                                // E0.7   [4] (\uD83C\uDFCB\uFE0F..\uD83C\uDFCE\uFE0F)    person lifting weights..racing car\n                                // E1.0   [5] (\uD83C\uDFCF..\uD83C\uDFD3)    cricket game..ping pong\n                                // E0.7  [12] (\uD83C\uDFD4\uFE0F..\uD83C\uDFDF\uFE0F)    snow-capped mountain..stadium\n                                // E0.6   [4] (\uD83C\uDFE0..\uD83C\uDFE3)    house..Japanese post office\n                                // E1.0   [1] (\uD83C\uDFE4)       post office\n                                // E0.6  [12] (\uD83C\uDFE5..\uD83C\uDFF0)    hospital..castle\n                                // E0.0   [2] (\uD83C\uDFF1..\uD83C\uDFF2)    WHITE PENNANT..BLACK PENNANT\n                                // E0.7   [1] (\uD83C\uDFF3\uFE0F)       white flag\n                                // E1.0   [1] (\uD83C\uDFF4)       black flag\n                                // E0.7   [1] (\uD83C\uDFF5\uFE0F)       rosette\n                                // E0.0   [1] (\uD83C\uDFF6)       BLACK ROSETTE\n                                // E0.7   [1] (\uD83C\uDFF7\uFE0F)       label\n                                // E1.0   [3] (\uD83C\uDFF8..\uD83C\uDFFA)    badminton..amphora\n                                if (0x1f249 <= code && code <= 0x1f3fa) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E1.0   [8] (\uD83D\uDC00..\uD83D\uDC07)    rat..rabbit\n                                // E0.7   [1] (\uD83D\uDC08)       cat\n                                // E1.0   [3] (\uD83D\uDC09..\uD83D\uDC0B)    dragon..whale\n                                // E0.6   [3] (\uD83D\uDC0C..\uD83D\uDC0E)    snail..horse\n                                // E1.0   [2] (\uD83D\uDC0F..\uD83D\uDC10)    ram..goat\n                                // E0.6   [2] (\uD83D\uDC11..\uD83D\uDC12)    ewe..monkey\n                                // E1.0   [1] (\uD83D\uDC13)       rooster\n                                // E0.6   [1] (\uD83D\uDC14)       chicken\n                                // E0.7   [1] (\uD83D\uDC15)       dog\n                                // E1.0   [1] (\uD83D\uDC16)       pig\n                                // E0.6  [19] (\uD83D\uDC17..\uD83D\uDC29)    boar..poodle\n                                // E1.0   [1] (\uD83D\uDC2A)       camel\n                                // E0.6  [20] (\uD83D\uDC2B..\uD83D\uDC3E)    two-hump camel..paw prints\n                                // E0.7   [1] (\uD83D\uDC3F\uFE0F)       chipmunk\n                                // E0.6   [1] (\uD83D\uDC40)       eyes\n                                // E0.7   [1] (\uD83D\uDC41\uFE0F)       eye\n                                // E0.6  [35] (\uD83D\uDC42..\uD83D\uDC64)    ear..bust in silhouette\n                                // E1.0   [1] (\uD83D\uDC65)       busts in silhouette\n                                // E0.6   [6] (\uD83D\uDC66..\uD83D\uDC6B)    boy..woman and man holding hands\n                                // E1.0   [2] (\uD83D\uDC6C..\uD83D\uDC6D)    men holding hands..women holding hands\n                                // E0.6  [63] (\uD83D\uDC6E..\uD83D\uDCAC)    police officer..speech balloon\n                                // E1.0   [1] (\uD83D\uDCAD)       thought balloon\n                                // E0.6   [8] (\uD83D\uDCAE..\uD83D\uDCB5)    white flower..dollar banknote\n                                // E1.0   [2] (\uD83D\uDCB6..\uD83D\uDCB7)    euro banknote..pound banknote\n                                // E0.6  [52] (\uD83D\uDCB8..\uD83D\uDCEB)    money with wings..closed mailbox with raised flag\n                                // E0.7   [2] (\uD83D\uDCEC..\uD83D\uDCED)    open mailbox with raised flag..open mailbox with lowered flag\n                                // E0.6   [1] (\uD83D\uDCEE)       postbox\n                                // E1.0   [1] (\uD83D\uDCEF)       postal horn\n                                // E0.6   [5] (\uD83D\uDCF0..\uD83D\uDCF4)    newspaper..mobile phone off\n                                // E1.0   [1] (\uD83D\uDCF5)       no mobile phones\n                                // E0.6   [2] (\uD83D\uDCF6..\uD83D\uDCF7)    antenna bars..camera\n                                // E1.0   [1] (\uD83D\uDCF8)       camera with flash\n                                // E0.6   [4] (\uD83D\uDCF9..\uD83D\uDCFC)    video camera..videocassette\n                                // E0.7   [1] (\uD83D\uDCFD\uFE0F)       film projector\n                                // E0.0   [1] (\uD83D\uDCFE)       PORTABLE STEREO\n                                // E1.0   [4] (\uD83D\uDCFF..\uD83D\uDD02)    prayer beads..repeat single button\n                                // E0.6   [1] (\uD83D\uDD03)       clockwise vertical arrows\n                                // E1.0   [4] (\uD83D\uDD04..\uD83D\uDD07)    counterclockwise arrows button..muted speaker\n                                // E0.7   [1] (\uD83D\uDD08)       speaker low volume\n                                // E1.0   [1] (\uD83D\uDD09)       speaker medium volume\n                                // E0.6  [11] (\uD83D\uDD0A..\uD83D\uDD14)    speaker high volume..bell\n                                // E1.0   [1] (\uD83D\uDD15)       bell with slash\n                                // E0.6  [22] (\uD83D\uDD16..\uD83D\uDD2B)    bookmark..water pistol\n                                // E1.0   [2] (\uD83D\uDD2C..\uD83D\uDD2D)    microscope..telescope\n                                // E0.6  [16] (\uD83D\uDD2E..\uD83D\uDD3D)    crystal ball..downwards button\n                                if (0x1f400 <= code && code <= 0x1f53d) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f680) {\n                                // E0.0   [3] (\uD83D\uDD46..\uD83D\uDD48)    WHITE LATIN CROSS..CELTIC CROSS\n                                // E0.7   [2] (\uD83D\uDD49\uFE0F..\uD83D\uDD4A\uFE0F)    om..dove\n                                // E1.0   [4] (\uD83D\uDD4B..\uD83D\uDD4E)    kaaba..menorah\n                                // E0.0   [1] (\uD83D\uDD4F)       BOWL OF HYGIEIA\n                                // E0.6  [12] (\uD83D\uDD50..\uD83D\uDD5B)    one o\u2019clock..twelve o\u2019clock\n                                // E0.7  [12] (\uD83D\uDD5C..\uD83D\uDD67)    one-thirty..twelve-thirty\n                                // E0.0   [7] (\uD83D\uDD68..\uD83D\uDD6E)    RIGHT SPEAKER..BOOK\n                                // E0.7   [2] (\uD83D\uDD6F\uFE0F..\uD83D\uDD70\uFE0F)    candle..mantelpiece clock\n                                // E0.0   [2] (\uD83D\uDD71..\uD83D\uDD72)    BLACK SKULL AND CROSSBONES..NO PIRACY\n                                // E0.7   [7] (\uD83D\uDD73\uFE0F..\uD83D\uDD79\uFE0F)    hole..joystick\n                                // E3.0   [1] (\uD83D\uDD7A)       man dancing\n                                // E0.0  [12] (\uD83D\uDD7B..\uD83D\uDD86)    LEFT HAND TELEPHONE RECEIVER..PEN OVER STAMPED ENVELOPE\n                                // E0.7   [1] (\uD83D\uDD87\uFE0F)       linked paperclips\n                                // E0.0   [2] (\uD83D\uDD88..\uD83D\uDD89)    BLACK PUSHPIN..LOWER LEFT PENCIL\n                                // E0.7   [4] (\uD83D\uDD8A\uFE0F..\uD83D\uDD8D\uFE0F)    pen..crayon\n                                // E0.0   [2] (\uD83D\uDD8E..\uD83D\uDD8F)    LEFT WRITING HAND..TURNED OK HAND SIGN\n                                // E0.7   [1] (\uD83D\uDD90\uFE0F)       hand with fingers splayed\n                                // E0.0   [4] (\uD83D\uDD91..\uD83D\uDD94)    REVERSED RAISED HAND WITH FINGERS SPLAYED..REVERSED VICTORY HAND\n                                // E1.0   [2] (\uD83D\uDD95..\uD83D\uDD96)    middle finger..vulcan salute\n                                // E0.0  [13] (\uD83D\uDD97..\uD83D\uDDA3)    WHITE DOWN POINTING LEFT HAND INDEX..BLACK DOWN POINTING BACKHAND INDEX\n                                // E3.0   [1] (\uD83D\uDDA4)       black heart\n                                // E0.7   [1] (\uD83D\uDDA5\uFE0F)       desktop computer\n                                // E0.0   [2] (\uD83D\uDDA6..\uD83D\uDDA7)    KEYBOARD AND MOUSE..THREE NETWORKED COMPUTERS\n                                // E0.7   [1] (\uD83D\uDDA8\uFE0F)       printer\n                                // E0.0   [8] (\uD83D\uDDA9..\uD83D\uDDB0)    POCKET CALCULATOR..TWO BUTTON MOUSE\n                                // E0.7   [2] (\uD83D\uDDB1\uFE0F..\uD83D\uDDB2\uFE0F)    computer mouse..trackball\n                                // E0.0   [9] (\uD83D\uDDB3..\uD83D\uDDBB)    OLD PERSONAL COMPUTER..DOCUMENT WITH PICTURE\n                                // E0.7   [1] (\uD83D\uDDBC\uFE0F)       framed picture\n                                // E0.0   [5] (\uD83D\uDDBD..\uD83D\uDDC1)    FRAME WITH TILES..OPEN FOLDER\n                                // E0.7   [3] (\uD83D\uDDC2\uFE0F..\uD83D\uDDC4\uFE0F)    card index dividers..file cabinet\n                                // E0.0  [12] (\uD83D\uDDC5..\uD83D\uDDD0)    EMPTY NOTE..PAGES\n                                // E0.7   [3] (\uD83D\uDDD1\uFE0F..\uD83D\uDDD3\uFE0F)    wastebasket..spiral calendar\n                                // E0.0   [8] (\uD83D\uDDD4..\uD83D\uDDDB)    DESKTOP WINDOW..DECREASE FONT SIZE SYMBOL\n                                // E0.7   [3] (\uD83D\uDDDC\uFE0F..\uD83D\uDDDE\uFE0F)    clamp..rolled-up newspaper\n                                // E0.0   [2] (\uD83D\uDDDF..\uD83D\uDDE0)    PAGE WITH CIRCLED TEXT..STOCK CHART\n                                // E0.7   [1] (\uD83D\uDDE1\uFE0F)       dagger\n                                // E0.0   [1] (\uD83D\uDDE2)       LIPS\n                                // E0.7   [1] (\uD83D\uDDE3\uFE0F)       speaking head\n                                // E0.0   [4] (\uD83D\uDDE4..\uD83D\uDDE7)    THREE RAYS ABOVE..THREE RAYS RIGHT\n                                // E2.0   [1] (\uD83D\uDDE8\uFE0F)       left speech bubble\n                                // E0.0   [6] (\uD83D\uDDE9..\uD83D\uDDEE)    RIGHT SPEECH BUBBLE..LEFT ANGER BUBBLE\n                                // E0.7   [1] (\uD83D\uDDEF\uFE0F)       right anger bubble\n                                // E0.0   [3] (\uD83D\uDDF0..\uD83D\uDDF2)    MOOD BUBBLE..LIGHTNING MOOD\n                                // E0.7   [1] (\uD83D\uDDF3\uFE0F)       ballot box with ballot\n                                // E0.0   [6] (\uD83D\uDDF4..\uD83D\uDDF9)    BALLOT SCRIPT X..BALLOT BOX WITH BOLD CHECK\n                                // E0.7   [1] (\uD83D\uDDFA\uFE0F)       world map\n                                // E0.6   [5] (\uD83D\uDDFB..\uD83D\uDDFF)    mount fuji..moai\n                                // E1.0   [1] (\uD83D\uDE00)       grinning face\n                                // E0.6   [6] (\uD83D\uDE01..\uD83D\uDE06)    beaming face with smiling eyes..grinning squinting face\n                                // E1.0   [2] (\uD83D\uDE07..\uD83D\uDE08)    smiling face with halo..smiling face with horns\n                                // E0.6   [5] (\uD83D\uDE09..\uD83D\uDE0D)    winking face..smiling face with heart-eyes\n                                // E1.0   [1] (\uD83D\uDE0E)       smiling face with sunglasses\n                                // E0.6   [1] (\uD83D\uDE0F)       smirking face\n                                // E0.7   [1] (\uD83D\uDE10)       neutral face\n                                // E1.0   [1] (\uD83D\uDE11)       expressionless face\n                                // E0.6   [3] (\uD83D\uDE12..\uD83D\uDE14)    unamused face..pensive face\n                                // E1.0   [1] (\uD83D\uDE15)       confused face\n                                // E0.6   [1] (\uD83D\uDE16)       confounded face\n                                // E1.0   [1] (\uD83D\uDE17)       kissing face\n                                // E0.6   [1] (\uD83D\uDE18)       face blowing a kiss\n                                // E1.0   [1] (\uD83D\uDE19)       kissing face with smiling eyes\n                                // E0.6   [1] (\uD83D\uDE1A)       kissing face with closed eyes\n                                // E1.0   [1] (\uD83D\uDE1B)       face with tongue\n                                // E0.6   [3] (\uD83D\uDE1C..\uD83D\uDE1E)    winking face with tongue..disappointed face\n                                // E1.0   [1] (\uD83D\uDE1F)       worried face\n                                // E0.6   [6] (\uD83D\uDE20..\uD83D\uDE25)    angry face..sad but relieved face\n                                // E1.0   [2] (\uD83D\uDE26..\uD83D\uDE27)    frowning face with open mouth..anguished face\n                                // E0.6   [4] (\uD83D\uDE28..\uD83D\uDE2B)    fearful face..tired face\n                                // E1.0   [1] (\uD83D\uDE2C)       grimacing face\n                                // E0.6   [1] (\uD83D\uDE2D)       loudly crying face\n                                // E1.0   [2] (\uD83D\uDE2E..\uD83D\uDE2F)    face with open mouth..hushed face\n                                // E0.6   [4] (\uD83D\uDE30..\uD83D\uDE33)    anxious face with sweat..flushed face\n                                // E1.0   [1] (\uD83D\uDE34)       sleeping face\n                                // E0.6   [1] (\uD83D\uDE35)       face with crossed-out eyes\n                                // E1.0   [1] (\uD83D\uDE36)       face without mouth\n                                // E0.6  [10] (\uD83D\uDE37..\uD83D\uDE40)    face with medical mask..weary cat\n                                // E1.0   [4] (\uD83D\uDE41..\uD83D\uDE44)    slightly frowning face..face with rolling eyes\n                                // E0.6  [11] (\uD83D\uDE45..\uD83D\uDE4F)    person gesturing NO..folded hands\n                                if (0x1f546 <= code && code <= 0x1f64f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f774) {\n                                    // E0.6   [1] (\uD83D\uDE80)       rocket\n                                    // E1.0   [2] (\uD83D\uDE81..\uD83D\uDE82)    helicopter..locomotive\n                                    // E0.6   [3] (\uD83D\uDE83..\uD83D\uDE85)    railway car..bullet train\n                                    // E1.0   [1] (\uD83D\uDE86)       train\n                                    // E0.6   [1] (\uD83D\uDE87)       metro\n                                    // E1.0   [1] (\uD83D\uDE88)       light rail\n                                    // E0.6   [1] (\uD83D\uDE89)       station\n                                    // E1.0   [2] (\uD83D\uDE8A..\uD83D\uDE8B)    tram..tram car\n                                    // E0.6   [1] (\uD83D\uDE8C)       bus\n                                    // E0.7   [1] (\uD83D\uDE8D)       oncoming bus\n                                    // E1.0   [1] (\uD83D\uDE8E)       trolleybus\n                                    // E0.6   [1] (\uD83D\uDE8F)       bus stop\n                                    // E1.0   [1] (\uD83D\uDE90)       minibus\n                                    // E0.6   [3] (\uD83D\uDE91..\uD83D\uDE93)    ambulance..police car\n                                    // E0.7   [1] (\uD83D\uDE94)       oncoming police car\n                                    // E0.6   [1] (\uD83D\uDE95)       taxi\n                                    // E1.0   [1] (\uD83D\uDE96)       oncoming taxi\n                                    // E0.6   [1] (\uD83D\uDE97)       automobile\n                                    // E0.7   [1] (\uD83D\uDE98)       oncoming automobile\n                                    // E0.6   [2] (\uD83D\uDE99..\uD83D\uDE9A)    sport utility vehicle..delivery truck\n                                    // E1.0   [7] (\uD83D\uDE9B..\uD83D\uDEA1)    articulated lorry..aerial tramway\n                                    // E0.6   [1] (\uD83D\uDEA2)       ship\n                                    // E1.0   [1] (\uD83D\uDEA3)       person rowing boat\n                                    // E0.6   [2] (\uD83D\uDEA4..\uD83D\uDEA5)    speedboat..horizontal traffic light\n                                    // E1.0   [1] (\uD83D\uDEA6)       vertical traffic light\n                                    // E0.6   [7] (\uD83D\uDEA7..\uD83D\uDEAD)    construction..no smoking\n                                    // E1.0   [4] (\uD83D\uDEAE..\uD83D\uDEB1)    litter in bin sign..non-potable water\n                                    // E0.6   [1] (\uD83D\uDEB2)       bicycle\n                                    // E1.0   [3] (\uD83D\uDEB3..\uD83D\uDEB5)    no bicycles..person mountain biking\n                                    // E0.6   [1] (\uD83D\uDEB6)       person walking\n                                    // E1.0   [2] (\uD83D\uDEB7..\uD83D\uDEB8)    no pedestrians..children crossing\n                                    // E0.6   [6] (\uD83D\uDEB9..\uD83D\uDEBE)    men\u2019s room..water closet\n                                    // E1.0   [1] (\uD83D\uDEBF)       shower\n                                    // E0.6   [1] (\uD83D\uDEC0)       person taking bath\n                                    // E1.0   [5] (\uD83D\uDEC1..\uD83D\uDEC5)    bathtub..left luggage\n                                    // E0.0   [5] (\uD83D\uDEC6..\uD83D\uDECA)    TRIANGLE WITH ROUNDED CORNERS..GIRLS SYMBOL\n                                    // E0.7   [1] (\uD83D\uDECB\uFE0F)       couch and lamp\n                                    // E1.0   [1] (\uD83D\uDECC)       person in bed\n                                    // E0.7   [3] (\uD83D\uDECD\uFE0F..\uD83D\uDECF\uFE0F)    shopping bags..bed\n                                    // E1.0   [1] (\uD83D\uDED0)       place of worship\n                                    // E3.0   [2] (\uD83D\uDED1..\uD83D\uDED2)    stop sign..shopping cart\n                                    // E0.0   [2] (\uD83D\uDED3..\uD83D\uDED4)    STUPA..PAGODA\n                                    // E12.0  [1] (\uD83D\uDED5)       hindu temple\n                                    // E13.0  [2] (\uD83D\uDED6..\uD83D\uDED7)    hut..elevator\n                                    // E0.0   [4] (\uD83D\uDED8..\uD83D\uDEDB)    <reserved-1F6D8>..<reserved-1F6DB>\n                                    // E15.0  [1] (\uD83D\uDEDC)       wireless\n                                    // E14.0  [3] (\uD83D\uDEDD..\uD83D\uDEDF)    playground slide..ring buoy\n                                    // E0.7   [6] (\uD83D\uDEE0\uFE0F..\uD83D\uDEE5\uFE0F)    hammer and wrench..motor boat\n                                    // E0.0   [3] (\uD83D\uDEE6..\uD83D\uDEE8)    UP-POINTING MILITARY AIRPLANE..UP-POINTING SMALL AIRPLANE\n                                    // E0.7   [1] (\uD83D\uDEE9\uFE0F)       small airplane\n                                    // E0.0   [1] (\uD83D\uDEEA)       NORTHEAST-POINTING AIRPLANE\n                                    // E1.0   [2] (\uD83D\uDEEB..\uD83D\uDEEC)    airplane departure..airplane arrival\n                                    // E0.0   [3] (\uD83D\uDEED..\uD83D\uDEEF)    <reserved-1F6ED>..<reserved-1F6EF>\n                                    // E0.7   [1] (\uD83D\uDEF0\uFE0F)       satellite\n                                    // E0.0   [2] (\uD83D\uDEF1..\uD83D\uDEF2)    ONCOMING FIRE ENGINE..DIESEL LOCOMOTIVE\n                                    // E0.7   [1] (\uD83D\uDEF3\uFE0F)       passenger ship\n                                    // E3.0   [3] (\uD83D\uDEF4..\uD83D\uDEF6)    kick scooter..canoe\n                                    // E5.0   [2] (\uD83D\uDEF7..\uD83D\uDEF8)    sled..flying saucer\n                                    // E11.0  [1] (\uD83D\uDEF9)       skateboard\n                                    // E12.0  [1] (\uD83D\uDEFA)       auto rickshaw\n                                    // E13.0  [2] (\uD83D\uDEFB..\uD83D\uDEFC)    pickup truck..roller skate\n                                    // E0.0   [3] (\uD83D\uDEFD..\uD83D\uDEFF)    <reserved-1F6FD>..<reserved-1F6FF>\n                                    if (0x1f680 <= code && code <= 0x1f6ff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [12] (\uD83D\uDF74..\uD83D\uDF7F)    LOT OF FORTUNE..ORCUS\n                                    if (0x1f774 <= code && code <= 0x1f77f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f8ae) {\n                        if (code < 0x1f848) {\n                            if (code < 0x1f80c) {\n                                // E0.0  [11] (\uD83D\uDFD5..\uD83D\uDFDF)    CIRCLED TRIANGLE..<reserved-1F7DF>\n                                // E12.0 [12] (\uD83D\uDFE0..\uD83D\uDFEB)    orange circle..brown square\n                                // E0.0   [4] (\uD83D\uDFEC..\uD83D\uDFEF)    <reserved-1F7EC>..<reserved-1F7EF>\n                                // E14.0  [1] (\uD83D\uDFF0)       heavy equals sign\n                                // E0.0  [15] (\uD83D\uDFF1..\uD83D\uDFFF)    <reserved-1F7F1>..<reserved-1F7FF>\n                                if (0x1f7d5 <= code && code <= 0x1f7ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [4] (\uD83E\uDC0C..\uD83E\uDC0F)    <reserved-1F80C>..<reserved-1F80F>\n                                if (0x1f80c <= code && code <= 0x1f80f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f85a) {\n                                // E0.0   [8] (\uD83E\uDC48..\uD83E\uDC4F)    <reserved-1F848>..<reserved-1F84F>\n                                if (0x1f848 <= code && code <= 0x1f84f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f888) {\n                                    // E0.0   [6] (\uD83E\uDC5A..\uD83E\uDC5F)    <reserved-1F85A>..<reserved-1F85F>\n                                    if (0x1f85a <= code && code <= 0x1f85f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [8] (\uD83E\uDC88..\uD83E\uDC8F)    <reserved-1F888>..<reserved-1F88F>\n                                    if (0x1f888 <= code && code <= 0x1f88f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f93c) {\n                            if (code < 0x1f90c) {\n                                // E0.0  [82] (\uD83E\uDCAE..\uD83E\uDCFF)    <reserved-1F8AE>..<reserved-1F8FF>\n                                if (0x1f8ae <= code && code <= 0x1f8ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E13.0  [1] (\uD83E\uDD0C)       pinched fingers\n                                // E12.0  [3] (\uD83E\uDD0D..\uD83E\uDD0F)    white heart..pinching hand\n                                // E1.0   [9] (\uD83E\uDD10..\uD83E\uDD18)    zipper-mouth face..sign of the horns\n                                // E3.0   [6] (\uD83E\uDD19..\uD83E\uDD1E)    call me hand..crossed fingers\n                                // E5.0   [1] (\uD83E\uDD1F)       love-you gesture\n                                // E3.0   [8] (\uD83E\uDD20..\uD83E\uDD27)    cowboy hat face..sneezing face\n                                // E5.0   [8] (\uD83E\uDD28..\uD83E\uDD2F)    face with raised eyebrow..exploding head\n                                // E3.0   [1] (\uD83E\uDD30)       pregnant woman\n                                // E5.0   [2] (\uD83E\uDD31..\uD83E\uDD32)    breast-feeding..palms up together\n                                // E3.0   [8] (\uD83E\uDD33..\uD83E\uDD3A)    selfie..person fencing\n                                if (0x1f90c <= code && code <= 0x1f93a) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f947) {\n                                // E3.0   [3] (\uD83E\uDD3C..\uD83E\uDD3E)    people wrestling..person playing handball\n                                // E12.0  [1] (\uD83E\uDD3F)       diving mask\n                                // E3.0   [6] (\uD83E\uDD40..\uD83E\uDD45)    wilted flower..goal net\n                                if (0x1f93c <= code && code <= 0x1f945) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1fc00) {\n                                    // E3.0   [5] (\uD83E\uDD47..\uD83E\uDD4B)    1st place medal..martial arts uniform\n                                    // E5.0   [1] (\uD83E\uDD4C)       curling stone\n                                    // E11.0  [3] (\uD83E\uDD4D..\uD83E\uDD4F)    lacrosse..flying disc\n                                    // E3.0  [15] (\uD83E\uDD50..\uD83E\uDD5E)    croissant..pancakes\n                                    // E5.0  [13] (\uD83E\uDD5F..\uD83E\uDD6B)    dumpling..canned food\n                                    // E11.0  [5] (\uD83E\uDD6C..\uD83E\uDD70)    leafy green..smiling face with hearts\n                                    // E12.0  [1] (\uD83E\uDD71)       yawning face\n                                    // E13.0  [1] (\uD83E\uDD72)       smiling face with tear\n                                    // E11.0  [4] (\uD83E\uDD73..\uD83E\uDD76)    partying face..cold face\n                                    // E13.0  [2] (\uD83E\uDD77..\uD83E\uDD78)    ninja..disguised face\n                                    // E14.0  [1] (\uD83E\uDD79)       face holding back tears\n                                    // E11.0  [1] (\uD83E\uDD7A)       pleading face\n                                    // E12.0  [1] (\uD83E\uDD7B)       sari\n                                    // E11.0  [4] (\uD83E\uDD7C..\uD83E\uDD7F)    lab coat..flat shoe\n                                    // E1.0   [5] (\uD83E\uDD80..\uD83E\uDD84)    crab..unicorn\n                                    // E3.0  [13] (\uD83E\uDD85..\uD83E\uDD91)    eagle..squid\n                                    // E5.0   [6] (\uD83E\uDD92..\uD83E\uDD97)    giraffe..cricket\n                                    // E11.0 [11] (\uD83E\uDD98..\uD83E\uDDA2)    kangaroo..swan\n                                    // E13.0  [2] (\uD83E\uDDA3..\uD83E\uDDA4)    mammoth..dodo\n                                    // E12.0  [6] (\uD83E\uDDA5..\uD83E\uDDAA)    sloth..oyster\n                                    // E13.0  [3] (\uD83E\uDDAB..\uD83E\uDDAD)    beaver..seal\n                                    // E12.0  [2] (\uD83E\uDDAE..\uD83E\uDDAF)    guide dog..white cane\n                                    // E11.0 [10] (\uD83E\uDDB0..\uD83E\uDDB9)    red hair..supervillain\n                                    // E12.0  [6] (\uD83E\uDDBA..\uD83E\uDDBF)    safety vest..mechanical leg\n                                    // E1.0   [1] (\uD83E\uDDC0)       cheese wedge\n                                    // E11.0  [2] (\uD83E\uDDC1..\uD83E\uDDC2)    cupcake..salt\n                                    // E12.0  [8] (\uD83E\uDDC3..\uD83E\uDDCA)    beverage box..ice\n                                    // E13.0  [1] (\uD83E\uDDCB)       bubble tea\n                                    // E14.0  [1] (\uD83E\uDDCC)       troll\n                                    // E12.0  [3] (\uD83E\uDDCD..\uD83E\uDDCF)    person standing..deaf person\n                                    // E5.0  [23] (\uD83E\uDDD0..\uD83E\uDDE6)    face with monocle..socks\n                                    // E11.0 [25] (\uD83E\uDDE7..\uD83E\uDDFF)    red envelope..nazar amulet\n                                    // E0.0 [112] (\uD83E\uDE00..\uD83E\uDE6F)    NEUTRAL CHESS KING..<reserved-1FA6F>\n                                    // E12.0  [4] (\uD83E\uDE70..\uD83E\uDE73)    ballet shoes..shorts\n                                    // E13.0  [1] (\uD83E\uDE74)       thong sandal\n                                    // E15.0  [3] (\uD83E\uDE75..\uD83E\uDE77)    light blue heart..pink heart\n                                    // E12.0  [3] (\uD83E\uDE78..\uD83E\uDE7A)    drop of blood..stethoscope\n                                    // E14.0  [2] (\uD83E\uDE7B..\uD83E\uDE7C)    x-ray..crutch\n                                    // E0.0   [3] (\uD83E\uDE7D..\uD83E\uDE7F)    <reserved-1FA7D>..<reserved-1FA7F>\n                                    // E12.0  [3] (\uD83E\uDE80..\uD83E\uDE82)    yo-yo..parachute\n                                    // E13.0  [4] (\uD83E\uDE83..\uD83E\uDE86)    boomerang..nesting dolls\n                                    // E15.0  [2] (\uD83E\uDE87..\uD83E\uDE88)    maracas..flute\n                                    // E0.0   [7] (\uD83E\uDE89..\uD83E\uDE8F)    <reserved-1FA89>..<reserved-1FA8F>\n                                    // E12.0  [6] (\uD83E\uDE90..\uD83E\uDE95)    ringed planet..banjo\n                                    // E13.0 [19] (\uD83E\uDE96..\uD83E\uDEA8)    military helmet..rock\n                                    // E14.0  [4] (\uD83E\uDEA9..\uD83E\uDEAC)    mirror ball..hamsa\n                                    // E15.0  [3] (\uD83E\uDEAD..\uD83E\uDEAF)    folding hand fan..khanda\n                                    // E13.0  [7] (\uD83E\uDEB0..\uD83E\uDEB6)    fly..feather\n                                    // E14.0  [4] (\uD83E\uDEB7..\uD83E\uDEBA)    lotus..nest with eggs\n                                    // E15.0  [3] (\uD83E\uDEBB..\uD83E\uDEBD)    hyacinth..wing\n                                    // E0.0   [1] (\uD83E\uDEBE)       <reserved-1FABE>\n                                    // E15.0  [1] (\uD83E\uDEBF)       goose\n                                    // E13.0  [3] (\uD83E\uDEC0..\uD83E\uDEC2)    anatomical heart..people hugging\n                                    // E14.0  [3] (\uD83E\uDEC3..\uD83E\uDEC5)    pregnant man..person with crown\n                                    // E0.0   [8] (\uD83E\uDEC6..\uD83E\uDECD)    <reserved-1FAC6>..<reserved-1FACD>\n                                    // E15.0  [2] (\uD83E\uDECE..\uD83E\uDECF)    moose..donkey\n                                    // E13.0  [7] (\uD83E\uDED0..\uD83E\uDED6)    blueberries..teapot\n                                    // E14.0  [3] (\uD83E\uDED7..\uD83E\uDED9)    pouring liquid..jar\n                                    // E15.0  [2] (\uD83E\uDEDA..\uD83E\uDEDB)    ginger root..pea pod\n                                    // E0.0   [4] (\uD83E\uDEDC..\uD83E\uDEDF)    <reserved-1FADC>..<reserved-1FADF>\n                                    // E14.0  [8] (\uD83E\uDEE0..\uD83E\uDEE7)    melting face..bubbles\n                                    // E15.0  [1] (\uD83E\uDEE8)       shaking face\n                                    // E0.0   [7] (\uD83E\uDEE9..\uD83E\uDEEF)    <reserved-1FAE9>..<reserved-1FAEF>\n                                    // E14.0  [7] (\uD83E\uDEF0..\uD83E\uDEF6)    hand with index finger and thumb crossed..heart hands\n                                    // E15.0  [2] (\uD83E\uDEF7..\uD83E\uDEF8)    leftwards pushing hand..rightwards pushing hand\n                                    // E0.0   [7] (\uD83E\uDEF9..\uD83E\uDEFF)    <reserved-1FAF9>..<reserved-1FAFF>\n                                    if (0x1f947 <= code && code <= 0x1faff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0[1022] (\uD83F\uDC00..\uD83F\uDFFD)    <reserved-1FC00>..<reserved-1FFFD>\n                                    if (0x1fc00 <= code && code <= 0x1fffd) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n}\nexports.default = Graphemer;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graphemer_1 = __importDefault(require(\"./Graphemer\"));\nexports.default = Graphemer_1.default;\n", "(()=>{\"use strict\";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};function r(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^(?!0{4}\"+t+\"0{2}\"+t+\"0{2})((?=[0-9]{4}\"+t+\"(((0[^2])|1[0-2])|02(?=\"+t+\"(([0-1][0-9])|2[0-8])))\"+t+\"[0-9]{2})|(?=((([13579][26])|([2468][048])|(0[48]))0{2})|([0-9]{2}((((0|[2468])[48])|[2468][048])|([13579][26])))\"+t+\"02\"+t+\"29))([0-9]{4})\"+t+\"(?!((0[469])|11)\"+t+\"31)((0[1,3-9]|1[0-2])|(02(?!\"+t+\"3)))\"+t+\"(0[1-9]|[1-2][0-9]|3[0-1])$\").test(e)}function n(e){var t=/\\D/.exec(e);return t?t[0]:\"\"}function i(e,t,r){void 0===t&&(t=\":\"),void 0===r&&(r=!1);var i=new RegExp(\"^([0-1]|2(?=([0-3])|4\"+t+\"00))[0-9]\"+t+\"[0-5][0-9](\"+t+\"([0-5]|6(?=0))[0-9])?(.[0-9]{1,9})?$\");if(!r||!/[Z+\\-]/.test(e))return i.test(e);if(/Z$/.test(e))return i.test(e.replace(\"Z\",\"\"));var o=e.includes(\"+\"),a=e.split(/[+-]/),u=a[0],d=a[1];return i.test(u)&&function(e,t,r){return void 0===r&&(r=\":\"),new RegExp(t?\"^(0(?!(2\"+r+\"4)|0\"+r+\"3)|1(?=([0-1]|2(?=\"+r+\"[04])|[34](?=\"+r+\"0))))([03469](?=\"+r+\"[03])|[17](?=\"+r+\"0)|2(?=\"+r+\"[04])|5(?=\"+r+\"[034])|8(?=\"+r+\"[04]))\"+r+\"([03](?=0)|4(?=5))[05]$\":\"^(0(?=[^0])|1(?=[0-2]))([39](?=\"+r+\"[03])|[0-24-8](?=\"+r+\"00))\"+r+\"[03]0$\").test(e)}(d,o,n(d))}function o(e){var t=e.split(\"T\"),o=t[0],a=t[1],u=r(o,n(o));if(!a)return!1;var d,s=(d=a.match(/([^Z+\\-\\d])(?=\\d+\\1)/),Array.isArray(d)?d[0]:\"\");return u&&i(a,s,!0)}function a(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^[0-9]{4}\"+t+\"(0(?=[^0])|1(?=[0-2]))[0-9]$\").test(e)}e.r(t),e.d(t,{isValidDate:()=>r,isValidISODateString:()=>o,isValidTime:()=>i,isValidYearMonth:()=>a});var u=exports;for(var d in t)u[d]=t[d];t.__esModule&&Object.defineProperty(u,\"__esModule\",{value:!0})})();", "export { AtUri } from '@atproto/syntax'\nexport {\n  BlobRef,\n  lexToJson,\n  stringifyLex,\n  jsonToLex,\n  jsonStringToLex,\n} from '@atproto/lexicon'\nexport { parseLanguage } from '@atproto/common-web'\nexport * from './types'\nexport * from './client'\nexport * from './agent'\nexport * from './rich-text/rich-text'\nexport * from './rich-text/sanitization'\nexport * from './rich-text/unicode'\nexport * from './moderation'\nexport * from './moderation/types'\nexport { LABELS } from './moderation/const/labels'\nexport { LABEL_GROUPS } from './moderation/const/label-groups'\nexport { BskyAgent } from './bsky-agent'\nexport { AtpAgent as default } from './agent'\n", "export const INVALID_HANDLE = 'handle.invalid'\n\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexport const DISALLOWED_TLDS = [\n  '.local',\n  '.arpa',\n  '.invalid',\n  '.localhost',\n  '.internal',\n  '.example',\n  '.alt',\n  // policy could concievably change on \".onion\" some day\n  '.onion',\n  // NOTE: .test is allowed in testing and devopment. In practical terms\n  // \"should\" \"never\" actually resolve and get registered in production\n]\n\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nexport const ensureValidHandle = (handle: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n    throw new InvalidHandleError(\n      'Disallowed characters in handle (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n  const labels = handle.split('.')\n  if (labels.length < 2) {\n    throw new InvalidHandleError('Handle domain needs at least two parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidHandleError('Handle parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidHandleError('Handle part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidHandleError(\n        'Handle parts can not start or end with hyphens',\n      )\n    }\n    if (i + 1 == labels.length && !/^[a-zA-Z]/.test(l)) {\n      throw new InvalidHandleError(\n        'Handle final component (TLD) must start with ASCII letter',\n      )\n    }\n  }\n}\n\n// simple regex translation of above constraints\nexport const ensureValidHandleRegex = (handle: string): void => {\n  if (\n    !/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(\n      handle,\n    )\n  ) {\n    throw new InvalidHandleError(\"Handle didn't validate via regex\")\n  }\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n}\n\nexport const normalizeHandle = (handle: string): string => {\n  return handle.toLowerCase()\n}\n\nexport const normalizeAndEnsureValidHandle = (handle: string): string => {\n  const normalized = normalizeHandle(handle)\n  ensureValidHandle(normalized)\n  return normalized\n}\n\nexport const isValidHandle = (handle: string): boolean => {\n  try {\n    ensureValidHandle(handle)\n  } catch (err) {\n    if (err instanceof InvalidHandleError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport const isValidTld = (handle: string): boolean => {\n  return !DISALLOWED_TLDS.some((domain) => handle.endsWith(domain))\n}\n\nexport class InvalidHandleError extends Error {}\nexport class ReservedHandleError extends Error {}\nexport class UnsupportedDomainError extends Error {}\nexport class DisallowedDomainError extends Error {}\n", "// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nexport const ensureValidDid = (did: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n    throw new InvalidDidError(\n      'Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)',\n    )\n  }\n\n  const parts = did.split(':')\n  if (parts.length < 3) {\n    throw new InvalidDidError(\n      'DID requires prefix, method, and method-specific content',\n    )\n  }\n\n  if (parts[0] != 'did') {\n    throw new InvalidDidError('DID requires \"did:\" prefix')\n  }\n\n  if (!/^[a-z]+$/.test(parts[1])) {\n    throw new InvalidDidError('DID method must be lower-case letters')\n  }\n\n  if (did.endsWith(':') || did.endsWith('%')) {\n    throw new InvalidDidError('DID can not end with \":\" or \"%\"')\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport const ensureValidDidRegex = (did: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n    throw new InvalidDidError(\"DID didn't validate via regex\")\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport class InvalidDidError extends Error {}\n", "/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\n\nexport class NSID {\n  segments: string[] = []\n\n  static parse(nsid: string): NSID {\n    return new NSID(nsid)\n  }\n\n  static create(authority: string, name: string): NSID {\n    const segments = [...authority.split('.').reverse(), name].join('.')\n    return new NSID(segments)\n  }\n\n  static isValid(nsid: string): boolean {\n    try {\n      NSID.parse(nsid)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  constructor(nsid: string) {\n    ensureValidNsid(nsid)\n    this.segments = nsid.split('.')\n  }\n\n  get authority() {\n    return this.segments\n      .slice(0, this.segments.length - 1)\n      .reverse()\n      .join('.')\n  }\n\n  get name() {\n    return this.segments.at(this.segments.length - 1)\n  }\n\n  toString() {\n    return this.segments.join('.')\n  }\n}\n\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nexport const ensureValidNsid = (nsid: string): void => {\n  const toCheck = nsid\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n    throw new InvalidNsidError(\n      'Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (toCheck.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n  const labels = toCheck.split('.')\n  if (labels.length < 3) {\n    throw new InvalidNsidError('NSID needs at least three parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidNsidError('NSID parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidNsidError('NSID part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidNsidError('NSID parts can not start or end with hyphen')\n    }\n    if (/^[0-9]/.test(l) && i == 0) {\n      throw new InvalidNsidError('NSID first part may not start with a digit')\n    }\n    if (!/^[a-zA-Z]+$/.test(l) && i + 1 == labels.length) {\n      throw new InvalidNsidError('NSID name part must be only letters')\n    }\n  }\n}\n\nexport const ensureValidNsidRegex = (nsid: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (\n    !/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z]{0,61}[a-zA-Z])?)$/.test(\n      nsid,\n    )\n  ) {\n    throw new InvalidNsidError(\"NSID didn't validate via regex\")\n  }\n  if (nsid.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n}\n\nexport class InvalidNsidError extends Error {}\n", "import { ensureValidHandle, ensureValidHandleRegex } from './handle'\nimport { ensureValidDid, ensureValidDidRegex } from './did'\nimport { ensureValidNsid, ensureValidNsidRegex } from './nsid'\n\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nexport const ensureValidAtUri = (uri: string) => {\n  // JSON pointer is pretty different from rest of URI, so split that out first\n  const uriParts = uri.split('#')\n  if (uriParts.length > 2) {\n    throw new Error('ATURI can have at most one \"#\", separating fragment out')\n  }\n  const fragmentPart = uriParts[1] || null\n  uri = uriParts[0]\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n    throw new Error('Disallowed characters in ATURI (ASCII)')\n  }\n\n  const parts = uri.split('/')\n  if (parts.length >= 3 && (parts[0] != 'at:' || parts[1].length != 0)) {\n    throw new Error('ATURI must start with \"at://\"')\n  }\n  if (parts.length < 3) {\n    throw new Error('ATURI requires at least method and authority sections')\n  }\n\n  try {\n    if (parts[2].startsWith('did:')) {\n      ensureValidDid(parts[2])\n    } else {\n      ensureValidHandle(parts[2])\n    }\n  } catch {\n    throw new Error('ATURI authority must be a valid handle or DID')\n  }\n\n  if (parts.length >= 4) {\n    if (parts[3].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after authority without a path segment',\n      )\n    }\n    try {\n      ensureValidNsid(parts[3])\n    } catch {\n      throw new Error(\n        'ATURI requires first path segment (if supplied) to be valid NSID',\n      )\n    }\n  }\n\n  if (parts.length >= 5) {\n    if (parts[4].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after collection, unless record key is provided',\n      )\n    }\n    // would validate rkey here, but there are basically no constraints!\n  }\n\n  if (parts.length >= 6) {\n    throw new Error(\n      'ATURI path can have at most two parts, and no trailing slash',\n    )\n  }\n\n  if (uriParts.length >= 2 && fragmentPart == null) {\n    throw new Error('ATURI fragment must be non-empty and start with slash')\n  }\n\n  if (fragmentPart != null) {\n    if (fragmentPart.length == 0 || fragmentPart[0] != '/') {\n      throw new Error('ATURI fragment must be non-empty and start with slash')\n    }\n    // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n    if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n      throw new Error('Disallowed characters in ATURI fragment (ASCII)')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n\nexport const ensureValidAtUriRegex = (uri: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints. whew!\n  const aturiRegex =\n    /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/\n  const rm = uri.match(aturiRegex)\n  if (!rm || !rm.groups) {\n    throw new Error(\"ATURI didn't validate via regex\")\n  }\n  const groups = rm.groups\n\n  try {\n    ensureValidHandleRegex(groups.authority)\n  } catch {\n    try {\n      ensureValidDidRegex(groups.authority)\n    } catch {\n      throw new Error('ATURI authority must be a valid handle or DID')\n    }\n  }\n\n  if (groups.collection) {\n    try {\n      ensureValidNsidRegex(groups.collection)\n    } catch {\n      throw new Error('ATURI collection path segment must be a valid NSID')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n", "export * from './aturi_validation'\n\nexport const ATP_URI_REGEX =\n  // proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n  /^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n\nexport class AtUri {\n  hash: string\n  host: string\n  pathname: string\n  searchParams: URLSearchParams\n\n  constructor(uri: string, base?: string) {\n    let parsed\n    if (base) {\n      parsed = parse(base)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${base}`)\n      }\n      const relativep = parseRelative(uri)\n      if (!relativep) {\n        throw new Error(`Invalid path: ${uri}`)\n      }\n      Object.assign(parsed, relativep)\n    } else {\n      parsed = parse(uri)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${uri}`)\n      }\n    }\n\n    this.hash = parsed.hash\n    this.host = parsed.host\n    this.pathname = parsed.pathname\n    this.searchParams = parsed.searchParams\n  }\n\n  static make(handleOrDid: string, collection?: string, rkey?: string) {\n    let str = handleOrDid\n    if (collection) str += '/' + collection\n    if (rkey) str += '/' + rkey\n    return new AtUri(str)\n  }\n\n  get protocol() {\n    return 'at:'\n  }\n\n  get origin() {\n    return `at://${this.host}`\n  }\n\n  get hostname() {\n    return this.host\n  }\n\n  set hostname(v: string) {\n    this.host = v\n  }\n\n  get search() {\n    return this.searchParams.toString()\n  }\n\n  set search(v: string) {\n    this.searchParams = new URLSearchParams(v)\n  }\n\n  get collection() {\n    return this.pathname.split('/').filter(Boolean)[0] || ''\n  }\n\n  set collection(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    parts[0] = v\n    this.pathname = parts.join('/')\n  }\n\n  get rkey() {\n    return this.pathname.split('/').filter(Boolean)[1] || ''\n  }\n\n  set rkey(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    if (!parts[0]) parts[0] = 'undefined'\n    parts[1] = v\n    this.pathname = parts.join('/')\n  }\n\n  get href() {\n    return this.toString()\n  }\n\n  toString() {\n    let path = this.pathname || '/'\n    if (!path.startsWith('/')) {\n      path = `/${path}`\n    }\n    let qs = this.searchParams.toString()\n    if (qs && !qs.startsWith('?')) {\n      qs = `?${qs}`\n    }\n    let hash = this.hash\n    if (hash && !hash.startsWith('#')) {\n      hash = `#${hash}`\n    }\n    return `at://${this.host}${path}${qs}${hash}`\n  }\n}\n\nfunction parse(str: string) {\n  const match = ATP_URI_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[5] || '',\n      host: match[2] || '',\n      pathname: match[3] || '',\n      searchParams: new URLSearchParams(match[4] || ''),\n    }\n  }\n  return undefined\n}\n\nfunction parseRelative(str: string) {\n  const match = RELATIVE_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[3] || '',\n      pathname: match[1] || '',\n      searchParams: new URLSearchParams(match[2] || ''),\n    }\n  }\n  return undefined\n}\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"emoji\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ulid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"ip\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nconst custom = (check, params = {}, \n/*\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar z = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    get objectUtil () { return objectUtil; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, z as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, z };\n", "import { ZodError } from 'zod'\n\nexport interface Checkable<T> {\n  parse: (obj: unknown) => T\n  safeParse: (\n    obj: unknown,\n  ) => { success: true; data: T } | { success: false; error: ZodError }\n}\n\nexport interface Def<T> {\n  name: string\n  schema: Checkable<T>\n}\n\nexport const is = <T>(obj: unknown, def: Checkable<T>): obj is T => {\n  return def.safeParse(obj).success\n}\n\nexport const assure = <T>(def: Checkable<T>, obj: unknown): T => {\n  return def.parse(obj)\n}\n\nexport const isObject = (obj: unknown): obj is Record<string, unknown> => {\n  return typeof obj === 'object' && obj !== null\n}\n", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}", "import { CID } from 'multiformats/cid'\nimport * as ui8 from 'uint8arrays'\n\nexport type JsonValue =\n  | boolean\n  | number\n  | string\n  | null\n  | undefined\n  | unknown\n  | Array<JsonValue>\n  | { [key: string]: JsonValue }\n\nexport type IpldValue =\n  | JsonValue\n  | CID\n  | Uint8Array\n  | Array<IpldValue>\n  | { [key: string]: IpldValue }\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const jsonToIpld = (val: JsonValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => jsonToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // check for dag json values\n    if (typeof val['$link'] === 'string' && Object.keys(val).length === 1) {\n      return CID.parse(val['$link'])\n    }\n    if (typeof val['$bytes'] === 'string' && Object.keys(val).length === 1) {\n      return ui8.fromString(val['$bytes'], 'base64')\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = jsonToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToJson = (val: IpldValue): JsonValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToJson(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert bytes\n    if (val instanceof Uint8Array) {\n      return {\n        $bytes: ui8.toString(val, 'base64'),\n      }\n    }\n    // convert cids\n    if (CID.asCID(val)) {\n      return {\n        $link: (val as CID).toString(),\n      }\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToJson(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val as JsonValue\n}\n\nexport const ipldEquals = (a: IpldValue, b: IpldValue): boolean => {\n  // walk arrays\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (!ipldEquals(a[i], b[i])) return false\n    }\n    return true\n  }\n  // objects\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    // check bytes\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n      return ui8.equals(a, b)\n    }\n    // check cids\n    if (CID.asCID(a) && CID.asCID(b)) {\n      return CID.asCID(a)?.equals(CID.asCID(b))\n    }\n    // walk plain objects\n    if (Object.keys(a).length !== Object.keys(b).length) return false\n    for (const key of Object.keys(a)) {\n      if (!ipldEquals(a[key], b[key])) return false\n    }\n    return true\n  }\n  return a === b\n}\n", "import { CID } from 'multiformats/cid'\nimport { z } from 'zod'\nimport { Def } from './check'\n\nconst cidSchema = z\n  .any()\n  .refine((obj: unknown) => CID.asCID(obj) !== null, {\n    message: 'Not a CID',\n  })\n  .transform((obj: unknown) => CID.asCID(obj) as CID)\n\nexport const schema = {\n  cid: cidSchema,\n  bytes: z.instanceof(Uint8Array),\n  string: z.string(),\n  array: z.array(z.unknown()),\n  map: z.record(z.string(), z.unknown()),\n  unknown: z.unknown(),\n}\n\nexport const def = {\n  cid: {\n    name: 'cid',\n    schema: schema.cid,\n  } as Def<CID>,\n  bytes: {\n    name: 'bytes',\n    schema: schema.bytes,\n  } as Def<Uint8Array>,\n  string: {\n    name: 'string',\n    schema: schema.string,\n  } as Def<string>,\n  map: {\n    name: 'map',\n    schema: schema.map,\n  } as Def<Record<string, unknown>>,\n  unknown: {\n    name: 'unknown',\n    schema: schema.unknown,\n  } as Def<unknown>,\n}\n\nexport type ArrayEl<A> = A extends readonly (infer T)[] ? T : never\n\nexport type NotEmptyArray<T> = [T, ...T[]]\n", "export const SECOND = 1000\nexport const MINUTE = SECOND * 60\nexport const HOUR = MINUTE * 60\nexport const DAY = HOUR * 24\n\nexport const lessThanAgoMs = (time: Date, range: number) => {\n  return Date.now() < time.getTime() + range\n}\n", "import Graphemer from 'graphemer'\nimport * as ui8 from 'uint8arrays'\n\n// counts the number of bytes in a utf8 string\nexport const utf8Len = (str: string): number => {\n  return new TextEncoder().encode(str).byteLength\n}\n\n// counts the number of graphemes (user-displayed characters) in a string\nexport const graphemeLen = (str: string): number => {\n  const splitter = new Graphemer()\n  return splitter.countGraphemes(str)\n}\n\nexport const utf8ToB64Url = (utf8: string): string => {\n  return ui8.toString(ui8.fromString(utf8, 'utf8'), 'base64url')\n}\n\nexport const b64UrlToUtf8 = (b64: string): string => {\n  return ui8.toString(ui8.fromString(b64, 'base64url'), 'utf8')\n}\n\nexport const parseLanguage = (langTag: string): LanguageTag | null => {\n  const parsed = langTag.match(bcp47Regexp)\n  if (!parsed?.groups) return null\n  const parts = parsed.groups\n  return {\n    grandfathered: parts.grandfathered,\n    language: parts.language,\n    extlang: parts.extlang,\n    script: parts.script,\n    region: parts.region,\n    variant: parts.variant,\n    extension: parts.extension,\n    privateUse: parts.privateUseA || parts.privateUseB,\n  }\n}\n\nexport const validateLanguage = (langTag: string): boolean => {\n  return bcp47Regexp.test(langTag)\n}\n\nexport type LanguageTag = {\n  grandfathered?: string\n  language?: string\n  extlang?: string\n  script?: string\n  region?: string\n  variant?: string\n  extension?: string\n  privateUse?: string\n}\n\n// Validates well-formed BCP 47 syntax: https://www.rfc-editor.org/rfc/rfc5646.html#section-2.1\nconst bcp47Regexp =\n  /^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/\n", "import { z } from 'zod'\n\n// Parsing atproto data\n// --------\n\nexport const isValidDidDoc = (doc: unknown): doc is DidDocument => {\n  return didDocument.safeParse(doc).success\n}\n\nexport const getDid = (doc: DidDocument): string => {\n  const id = doc.id\n  if (typeof id !== 'string') {\n    throw new Error('No `id` on document')\n  }\n  return id\n}\n\nexport const getHandle = (doc: DidDocument): string | undefined => {\n  const aka = doc.alsoKnownAs\n  if (!aka) return undefined\n  const found = aka.find((name) => name.startsWith('at://'))\n  if (!found) return undefined\n  // strip off at:// prefix\n  return found.slice(5)\n}\n\n// @NOTE we parse to type/publicKeyMultibase to avoid the dependency on @atproto/crypto\nexport const getSigningKey = (\n  doc: DidDocument,\n): { type: string; publicKeyMultibase: string } | undefined => {\n  const did = getDid(doc)\n  let keys = doc.verificationMethod\n  if (!keys) return undefined\n  if (typeof keys !== 'object') return undefined\n  if (!Array.isArray(keys)) {\n    keys = [keys]\n  }\n  const found = keys.find(\n    (key) => key.id === '#atproto' || key.id === `${did}#atproto`,\n  )\n  if (!found?.publicKeyMultibase) return undefined\n  return {\n    type: found.type,\n    publicKeyMultibase: found.publicKeyMultibase,\n  }\n}\n\nexport const getPdsEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#atproto_pds',\n    type: 'AtprotoPersonalDataServer',\n  })\n}\n\nexport const getFeedGenEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_fg',\n    type: 'BskyFeedGenerator',\n  })\n}\n\nexport const getNotifEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_notif',\n    type: 'BskyNotificationService',\n  })\n}\n\nexport const getServiceEndpoint = (\n  doc: DidDocument,\n  opts: { id: string; type: string },\n) => {\n  const did = getDid(doc)\n  let services = doc.service\n  if (!services) return undefined\n  if (typeof services !== 'object') return undefined\n  if (!Array.isArray(services)) {\n    services = [services]\n  }\n  const found = services.find(\n    (service) => service.id === opts.id || service.id === `${did}${opts.id}`,\n  )\n  if (!found) return undefined\n  if (found.type !== opts.type) {\n    return undefined\n  }\n  if (typeof found.serviceEndpoint !== 'string') {\n    return undefined\n  }\n  return validateUrl(found.serviceEndpoint)\n}\n\n// Check protocol and hostname to prevent potential SSRF\nconst validateUrl = (urlStr: string): string | undefined => {\n  let url\n  try {\n    url = new URL(urlStr)\n  } catch {\n    return undefined\n  }\n  if (!['http:', 'https:'].includes(url.protocol)) {\n    return undefined\n  } else if (!url.hostname) {\n    return undefined\n  } else {\n    return urlStr\n  }\n}\n\n// Types\n// --------\n\nconst verificationMethod = z.object({\n  id: z.string(),\n  type: z.string(),\n  controller: z.string(),\n  publicKeyMultibase: z.string().optional(),\n})\n\nconst service = z.object({\n  id: z.string(),\n  type: z.string(),\n  serviceEndpoint: z.union([z.string(), z.record(z.unknown())]),\n})\n\nexport const didDocument = z.object({\n  id: z.string(),\n  alsoKnownAs: z.array(z.string()).optional(),\n  verificationMethod: z.array(verificationMethod).optional(),\n  service: z.array(service).optional(),\n})\n\nexport type DidDocument = z.infer<typeof didDocument>\n", "import { isValidISODateString } from 'iso-datestring-validator'\nimport { CID } from 'multiformats/cid'\nimport { ValidationResult, ValidationError } from '../types'\nimport {\n  ensureValidDid,\n  ensureValidHandle,\n  ensureValidNsid,\n  ensureValidAtUri,\n} from '@atproto/syntax'\nimport { validateLanguage } from '@atproto/common-web'\n\nexport function datetime(path: string, value: string): ValidationResult {\n  try {\n    if (!isValidISODateString(value)) {\n      throw new Error()\n    }\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`,\n      ),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function uri(path: string, value: string): ValidationResult {\n  const isUri = value.match(/^\\w+:(?:\\/\\/)?[^\\s/][^\\s]*$/) !== null\n  if (!isUri) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atUri(path: string, value: string): ValidationResult {\n  try {\n    ensureValidAtUri(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid at-uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function did(path: string, value: string): ValidationResult {\n  try {\n    ensureValidDid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid did`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function handle(path: string, value: string): ValidationResult {\n  try {\n    ensureValidHandle(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid handle`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atIdentifier(path: string, value: string): ValidationResult {\n  const isDid = did(path, value)\n  if (!isDid.success) {\n    const isHandle = handle(path, value)\n    if (!isHandle.success) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be a valid did or a handle`),\n      }\n    }\n  }\n  return { success: true, value }\n}\n\nexport function nsid(path: string, value: string): ValidationResult {\n  try {\n    ensureValidNsid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid nsid`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function cid(path: string, value: string): ValidationResult {\n  try {\n    CID.parse(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a cid string`),\n    }\n  }\n  return { success: true, value }\n}\n\n// The language format validates well-formed BCP 47 language tags: https://www.rfc-editor.org/info/bcp47\nexport function language(path: string, value: string): ValidationResult {\n  if (validateLanguage(value)) {\n    return { success: true, value }\n  }\n  return {\n    success: false,\n    error: new ValidationError(\n      `${path} must be a well-formed BCP 47 language tag`,\n    ),\n  }\n}\n", "import { utf8Len, graphemeLen } from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { Lexicons } from '../lexicons'\nimport * as formats from './formats'\nimport {\n  LexUserType,\n  LexBoolean,\n  LexInteger,\n  LexString,\n  ValidationResult,\n  ValidationError,\n  LexBytes,\n} from '../types'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return boolean(lexicons, path, def, value)\n    case 'integer':\n      return integer(lexicons, path, def, value)\n    case 'string':\n      return string(lexicons, path, def, value)\n    case 'bytes':\n      return bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return unknown(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nexport function boolean(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBoolean\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'boolean') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  } else if (type !== 'boolean') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'boolean') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function integer(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexInteger\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'number') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  } else if (!Number.isInteger(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'number') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as number)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maximum\n  if (typeof def.maximum === 'number') {\n    if ((value as number) > def.maximum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be greater than ${def.maximum}`,\n        ),\n      }\n    }\n  }\n\n  // minimum\n  if (typeof def.minimum === 'number') {\n    if ((value as number) < def.minimum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be less than ${def.minimum}`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function string(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexString\n\n  // type\n  if (typeof value === 'undefined') {\n    if (typeof def.default === 'string') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  } else if (typeof value !== 'string') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'string') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as string)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (utf8Len(value) > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be longer than ${def.maxLength} characters`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (utf8Len(value) < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minLength} characters`,\n        ),\n      }\n    }\n  }\n\n  // maxGraphemes\n  if (typeof def.maxGraphemes === 'number') {\n    if (graphemeLen(value) > def.maxGraphemes) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be longer than ${def.maxGraphemes} graphemes`,\n        ),\n      }\n    }\n  }\n\n  // minGraphemes\n  if (typeof def.minGraphemes === 'number') {\n    if (graphemeLen(value) < def.minGraphemes) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minGraphemes} graphemes`,\n        ),\n      }\n    }\n  }\n\n  if (typeof def.format === 'string') {\n    switch (def.format) {\n      case 'datetime':\n        return formats.datetime(path, value)\n      case 'uri':\n        return formats.uri(path, value)\n      case 'at-uri':\n        return formats.atUri(path, value)\n      case 'did':\n        return formats.did(path, value)\n      case 'handle':\n        return formats.handle(path, value)\n      case 'at-identifier':\n        return formats.atIdentifier(path, value)\n      case 'nsid':\n        return formats.nsid(path, value)\n      case 'cid':\n        return formats.cid(path, value)\n      case 'language':\n        return formats.language(path, value)\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function bytes(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBytes\n\n  if (!value || !(value instanceof Uint8Array)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a byte array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (value.byteLength > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be larger than ${def.maxLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (value.byteLength < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be smaller than ${def.minLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function cidLink(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  if (CID.asCID(value) === null) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a CID`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function unknown(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  return { success: true, value }\n}\n", "import { check, ipldToJson, schema } from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { z } from 'zod'\n\nexport const typedJsonBlobRef = z\n  .object({\n    $type: z.literal('blob'),\n    ref: schema.cid,\n    mimeType: z.string(),\n    size: z.number(),\n  })\n  .strict()\nexport type TypedJsonBlobRef = z.infer<typeof typedJsonBlobRef>\n\nexport const untypedJsonBlobRef = z\n  .object({\n    cid: z.string(),\n    mimeType: z.string(),\n  })\n  .strict()\nexport type UntypedJsonBlobRef = z.infer<typeof untypedJsonBlobRef>\n\nexport const jsonBlobRef = z.union([typedJsonBlobRef, untypedJsonBlobRef])\nexport type JsonBlobRef = z.infer<typeof jsonBlobRef>\n\nexport class BlobRef {\n  public original: JsonBlobRef\n\n  constructor(\n    public ref: CID,\n    public mimeType: string,\n    public size: number,\n    original?: JsonBlobRef,\n  ) {\n    this.original = original ?? {\n      $type: 'blob',\n      ref,\n      mimeType,\n      size,\n    }\n  }\n\n  static asBlobRef(obj: unknown): BlobRef | null {\n    if (check.is(obj, jsonBlobRef)) {\n      return BlobRef.fromJsonRef(obj)\n    }\n    return null\n  }\n\n  static fromJsonRef(json: JsonBlobRef): BlobRef {\n    if (check.is(json, typedJsonBlobRef)) {\n      return new BlobRef(json.ref, json.mimeType, json.size)\n    } else {\n      return new BlobRef(CID.parse(json.cid), json.mimeType, -1, json)\n    }\n  }\n\n  ipld(): TypedJsonBlobRef {\n    return {\n      $type: 'blob',\n      ref: this.ref,\n      mimeType: this.mimeType,\n      size: this.size,\n    }\n  }\n\n  toJSON() {\n    return ipldToJson(this.ipld())\n  }\n}\n", "import { BlobRef } from '../blob-refs'\nimport { Lexicons } from '../lexicons'\nimport { LexUserType, ValidationResult, ValidationError } from '../types'\n\nexport function blob(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // check\n  if (!value || !(value instanceof BlobRef)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} should be a blob ref`),\n    }\n  }\n  return { success: true, value }\n}\n", "import { Lexicons } from '../lexicons'\nimport {\n  LexArray,\n  LexObject,\n  LexUserType,\n  ValidationResult,\n  ValidationError,\n} from '../types'\nimport { validateOneOf } from '../util'\n\nimport * as Primitives from './primitives'\nimport * as Blob from './blob'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return Primitives.boolean(lexicons, path, def, value)\n    case 'integer':\n      return Primitives.integer(lexicons, path, def, value)\n    case 'string':\n      return Primitives.string(lexicons, path, def, value)\n    case 'bytes':\n      return Primitives.bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return Primitives.cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return Primitives.unknown(lexicons, path, def, value)\n    case 'object':\n      return object(lexicons, path, def, value)\n    case 'array':\n      return array(lexicons, path, def, value)\n    case 'blob':\n      return Blob.blob(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nexport function array(\n  lexicons: Lexicons,\n  path: string,\n  def: LexArray,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!Array.isArray(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if ((value as Array<unknown>).length > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have more than ${def.maxLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if ((value as Array<unknown>).length < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have fewer than ${def.minLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // items\n  const itemsDef = def.items\n  for (let i = 0; i < (value as Array<unknown>).length; i++) {\n    const itemValue = value[i]\n    const itemPath = `${path}/${i}`\n    const res = validateOneOf(lexicons, itemPath, itemsDef, itemValue)\n    if (!res.success) {\n      return res\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function object(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexObject\n\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  const requiredProps = new Set(def.required)\n  const nullableProps = new Set(def.nullable)\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      if (value[key] === null && nullableProps.has(key)) {\n        continue\n      }\n      const propDef = def.properties[key]\n      const propPath = `${path}/${key}`\n      const validated = validateOneOf(lexicons, propPath, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport * as ComplexValidators from './validators/complex'\nimport {\n  LexUserType,\n  LexRefVariant,\n  ValidationError,\n  ValidationResult,\n  isDiscriminatedObject,\n} from './types'\nimport { z } from 'zod'\n\nexport function toLexUri(str: string, baseUri?: string): string {\n  if (str.split('#').length > 2) {\n    throw new Error('Uri can only have one hash segment')\n  }\n\n  if (str.startsWith('lex:')) {\n    return str\n  }\n  if (str.startsWith('#')) {\n    if (!baseUri) {\n      throw new Error(`Unable to resolve uri without anchor: ${str}`)\n    }\n    return `${baseUri}${str}`\n  }\n  return `lex:${str}`\n}\n\nexport function validateOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false, // this is the only type constraint we need currently (used by xrpc body schema validators)\n): ValidationResult {\n  let error\n\n  let concreteDefs\n  if (def.type === 'union') {\n    if (!isDiscriminatedObject(value)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be an object which includes the \"$type\" property`,\n        ),\n      }\n    }\n    if (!refsContainType(def.refs, value.$type)) {\n      if (def.closed) {\n        return {\n          success: false,\n          error: new ValidationError(\n            `${path} $type must be one of ${def.refs.join(', ')}`,\n          ),\n        }\n      }\n      return { success: true, value }\n    } else {\n      concreteDefs = toConcreteTypes(lexicons, {\n        type: 'ref',\n        ref: value.$type,\n      })\n    }\n  } else {\n    concreteDefs = toConcreteTypes(lexicons, def)\n  }\n\n  for (const concreteDef of concreteDefs) {\n    const result = mustBeObj\n      ? ComplexValidators.object(lexicons, path, concreteDef, value)\n      : ComplexValidators.validate(lexicons, path, concreteDef, value)\n    if (result.success) {\n      return result\n    }\n    error ??= result.error\n  }\n  if (concreteDefs.length > 1) {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} did not match any of the expected definitions`,\n      ),\n    }\n  }\n  return { success: false, error }\n}\n\nexport function assertValidOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false,\n) {\n  const res = validateOneOf(lexicons, path, def, value, mustBeObj)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function toConcreteTypes(\n  lexicons: Lexicons,\n  def: LexRefVariant | LexUserType,\n): LexUserType[] {\n  if (def.type === 'ref') {\n    return [lexicons.getDefOrThrow(def.ref)]\n  } else if (def.type === 'union') {\n    return def.refs.map((ref) => lexicons.getDefOrThrow(ref)).flat()\n  } else {\n    return [def]\n  }\n}\n\nexport function requiredPropertiesRefinement<\n  ObjectType extends {\n    required?: string[]\n    properties?: Record<string, unknown>\n  },\n>(object: ObjectType, ctx: z.RefinementCtx) {\n  // Required fields check\n  if (object.required === undefined) {\n    return\n  }\n\n  if (!Array.isArray(object.required)) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.invalid_type,\n      received: typeof object.required,\n      expected: 'array',\n    })\n    return\n  }\n\n  if (object.properties === undefined) {\n    if (object.required.length > 0) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required fields defined but no properties defined`,\n      })\n    }\n    return\n  }\n\n  for (const field of object.required) {\n    if (object.properties[field] === undefined) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required field \"${field}\" not defined`,\n      })\n    }\n  }\n}\n\n// to avoid bugs like #0189 this needs to handle both\n// explicit and implicit #main\nconst refsContainType = (refs: string[], type: string) => {\n  const lexUri = toLexUri(type)\n  if (refs.includes(lexUri)) {\n    return true\n  }\n\n  if (lexUri.endsWith('#main')) {\n    return refs.includes(lexUri.replace('#main', ''))\n  } else {\n    return refs.includes(lexUri + '#main')\n  }\n}\n", "import { z } from 'zod'\nimport { NSID } from '@atproto/syntax'\nimport { requiredPropertiesRefinement } from './util'\n\n// primitives\n// =\n\nexport const lexBoolean = z\n  .object({\n    type: z.literal('boolean'),\n    description: z.string().optional(),\n    default: z.boolean().optional(),\n    const: z.boolean().optional(),\n  })\n  .strict()\nexport type LexBoolean = z.infer<typeof lexBoolean>\n\nexport const lexInteger = z\n  .object({\n    type: z.literal('integer'),\n    description: z.string().optional(),\n    default: z.number().int().optional(),\n    minimum: z.number().int().optional(),\n    maximum: z.number().int().optional(),\n    enum: z.number().int().array().optional(),\n    const: z.number().int().optional(),\n  })\n  .strict()\nexport type LexInteger = z.infer<typeof lexInteger>\n\nexport const lexStringFormat = z.enum([\n  'datetime',\n  'uri',\n  'at-uri',\n  'did',\n  'handle',\n  'at-identifier',\n  'nsid',\n  'cid',\n  'language',\n])\nexport type LexStringFormat = z.infer<typeof lexStringFormat>\n\nexport const lexString = z\n  .object({\n    type: z.literal('string'),\n    format: lexStringFormat.optional(),\n    description: z.string().optional(),\n    default: z.string().optional(),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n    minGraphemes: z.number().int().optional(),\n    maxGraphemes: z.number().int().optional(),\n    enum: z.string().array().optional(),\n    const: z.string().optional(),\n    knownValues: z.string().array().optional(),\n  })\n  .strict()\nexport type LexString = z.infer<typeof lexString>\n\nexport const lexUnknown = z\n  .object({\n    type: z.literal('unknown'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexUnknown = z.infer<typeof lexUnknown>\n\nexport const lexPrimitive = z.discriminatedUnion('type', [\n  lexBoolean,\n  lexInteger,\n  lexString,\n  lexUnknown,\n])\nexport type LexPrimitive = z.infer<typeof lexPrimitive>\n\n// ipld types\n// =\n\nexport const lexBytes = z\n  .object({\n    type: z.literal('bytes'),\n    description: z.string().optional(),\n    maxLength: z.number().optional(),\n    minLength: z.number().optional(),\n  })\n  .strict()\nexport type LexBytes = z.infer<typeof lexBytes>\n\nexport const lexCidLink = z\n  .object({\n    type: z.literal('cid-link'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexCidLink = z.infer<typeof lexCidLink>\n\nexport const lexIpldType = z.discriminatedUnion('type', [lexBytes, lexCidLink])\nexport type LexIpldType = z.infer<typeof lexIpldType>\n\n// references\n// =\n\nexport const lexRef = z\n  .object({\n    type: z.literal('ref'),\n    description: z.string().optional(),\n    ref: z.string(),\n  })\n  .strict()\nexport type LexRef = z.infer<typeof lexRef>\n\nexport const lexRefUnion = z\n  .object({\n    type: z.literal('union'),\n    description: z.string().optional(),\n    refs: z.string().array(),\n    closed: z.boolean().optional(),\n  })\n  .strict()\nexport type LexRefUnion = z.infer<typeof lexRefUnion>\n\nexport const lexRefVariant = z.discriminatedUnion('type', [lexRef, lexRefUnion])\nexport type LexRefVariant = z.infer<typeof lexRefVariant>\n\n// blobs\n// =\n\nexport const lexBlob = z\n  .object({\n    type: z.literal('blob'),\n    description: z.string().optional(),\n    accept: z.string().array().optional(),\n    maxSize: z.number().optional(),\n  })\n  .strict()\nexport type LexBlob = z.infer<typeof lexBlob>\n\n// complex types\n// =\n\nexport const lexArray = z\n  .object({\n    type: z.literal('array'),\n    description: z.string().optional(),\n    items: z.union([lexPrimitive, lexIpldType, lexBlob, lexRefVariant]),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n  })\n  .strict()\nexport type LexArray = z.infer<typeof lexArray>\n\nexport const lexPrimitiveArray = lexArray.merge(\n  z\n    .object({\n      items: lexPrimitive,\n    })\n    .strict(),\n)\nexport type LexPrimitiveArray = z.infer<typeof lexPrimitiveArray>\n\nexport const lexToken = z\n  .object({\n    type: z.literal('token'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexToken = z.infer<typeof lexToken>\n\nexport const lexObject = z\n  .object({\n    type: z.literal('object'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    nullable: z.string().array().optional(),\n    properties: z.record(\n      z.union([lexRefVariant, lexIpldType, lexArray, lexBlob, lexPrimitive]),\n    ),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexObject = z.infer<typeof lexObject>\n\n// xrpc\n// =\n\nexport const lexXrpcParameters = z\n  .object({\n    type: z.literal('params'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    properties: z.record(z.union([lexPrimitive, lexPrimitiveArray])),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexXrpcParameters = z.infer<typeof lexXrpcParameters>\n\nexport const lexXrpcBody = z\n  .object({\n    description: z.string().optional(),\n    encoding: z.string(),\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcBody = z.infer<typeof lexXrpcBody>\n\nexport const lexXrpcSubscriptionMessage = z\n  .object({\n    description: z.string().optional(),\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcSubscriptionMessage = z.infer<\n  typeof lexXrpcSubscriptionMessage\n>\n\nexport const lexXrpcError = z\n  .object({\n    name: z.string(),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexXrpcError = z.infer<typeof lexXrpcError>\n\nexport const lexXrpcQuery = z\n  .object({\n    type: z.literal('query'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcQuery = z.infer<typeof lexXrpcQuery>\n\nexport const lexXrpcProcedure = z\n  .object({\n    type: z.literal('procedure'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    input: lexXrpcBody.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcProcedure = z.infer<typeof lexXrpcProcedure>\n\nexport const lexXrpcSubscription = z\n  .object({\n    type: z.literal('subscription'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    message: lexXrpcSubscriptionMessage.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcSubscription = z.infer<typeof lexXrpcSubscription>\n\n// database\n// =\n\nexport const lexRecord = z\n  .object({\n    type: z.literal('record'),\n    description: z.string().optional(),\n    key: z.string().optional(),\n    record: lexObject,\n  })\n  .strict()\nexport type LexRecord = z.infer<typeof lexRecord>\n\n// core\n// =\n\n// We need to use `z.custom` here because\n// lexXrpcProperty and lexObject are refined\n// `z.union` would work, but it's too slow\n// see #915 for details\nexport const lexUserType = z.custom<\n  | LexRecord\n  | LexXrpcQuery\n  | LexXrpcProcedure\n  | LexXrpcSubscription\n  | LexBlob\n  | LexArray\n  | LexToken\n  | LexObject\n  | LexBoolean\n  | LexInteger\n  | LexString\n  | LexBytes\n  | LexCidLink\n  | LexUnknown\n>(\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return\n    }\n\n    if (val['type'] === undefined) {\n      return\n    }\n\n    switch (val['type']) {\n      case 'record':\n        return lexRecord.parse(val)\n\n      case 'query':\n        return lexXrpcQuery.parse(val)\n      case 'procedure':\n        return lexXrpcProcedure.parse(val)\n      case 'subscription':\n        return lexXrpcSubscription.parse(val)\n\n      case 'blob':\n        return lexBlob.parse(val)\n\n      case 'array':\n        return lexArray.parse(val)\n      case 'token':\n        return lexToken.parse(val)\n      case 'object':\n        return lexObject.parse(val)\n\n      case 'boolean':\n        return lexBoolean.parse(val)\n      case 'integer':\n        return lexInteger.parse(val)\n      case 'string':\n        return lexString.parse(val)\n      case 'bytes':\n        return lexBytes.parse(val)\n      case 'cid-link':\n        return lexCidLink.parse(val)\n      case 'unknown':\n        return lexUnknown.parse(val)\n    }\n  },\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return {\n        message: 'Must be an object',\n        fatal: true,\n      }\n    }\n\n    if (val['type'] === undefined) {\n      return {\n        message: 'Must have a type',\n        fatal: true,\n      }\n    }\n\n    return {\n      message: `Invalid type: ${val['type']} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,\n      fatal: true,\n    }\n  },\n)\nexport type LexUserType = z.infer<typeof lexUserType>\n\nexport const lexiconDoc = z\n  .object({\n    lexicon: z.literal(1),\n    id: z.string().refine((v: string) => NSID.isValid(v), {\n      message: 'Must be a valid NSID',\n    }),\n    revision: z.number().optional(),\n    description: z.string().optional(),\n    defs: z.record(lexUserType),\n  })\n  .strict()\n  .superRefine((doc, ctx) => {\n    for (const defId in doc.defs) {\n      const def = doc.defs[defId]\n      if (\n        defId !== 'main' &&\n        (def.type === 'record' ||\n          def.type === 'procedure' ||\n          def.type === 'query' ||\n          def.type === 'subscription')\n      ) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Records, procedures, queries, and subscriptions must be the main definition.`,\n        })\n      }\n    }\n  })\nexport type LexiconDoc = z.infer<typeof lexiconDoc>\n\n// helpers\n// =\n\nexport function isValidLexiconDoc(v: unknown): v is LexiconDoc {\n  return lexiconDoc.safeParse(v).success\n}\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj !== null && typeof obj === 'object'\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n\nexport const discriminatedObject = z.object({ $type: z.string() })\nexport type DiscriminatedObject = z.infer<typeof discriminatedObject>\nexport function isDiscriminatedObject(\n  value: unknown,\n): value is DiscriminatedObject {\n  return discriminatedObject.safeParse(value).success\n}\n\nexport function parseLexiconDoc(v: unknown): LexiconDoc {\n  lexiconDoc.parse(v)\n  return v as LexiconDoc\n}\n\nexport type ValidationResult =\n  | {\n      success: true\n      value: unknown\n    }\n  | {\n      success: false\n      error: ValidationError\n    }\n\nexport class ValidationError extends Error {}\nexport class InvalidLexiconError extends Error {}\nexport class LexiconDefNotFoundError extends Error {}\n", "import { Lexicons } from '../lexicons'\nimport { LexXrpcParameters, ValidationResult, ValidationError } from '../types'\n\nimport * as PrimitiveValidators from './primitives'\nimport { array } from './complex'\n\nexport function params(\n  lexicons: Lexicons,\n  path: string,\n  def: LexXrpcParameters,\n  val: unknown,\n): ValidationResult {\n  // type\n  const value = val && typeof val === 'object' ? val : {}\n\n  const requiredProps = new Set(def.required ?? [])\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      const propDef = def.properties[key]\n      const validated =\n        propDef.type === 'array'\n          ? array(lexicons, key, propDef, value[key])\n          : PrimitiveValidators.validate(lexicons, key, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport {\n  LexRecord,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  LexXrpcSubscription,\n} from './types'\nimport { assertValidOneOf } from './util'\n\nimport * as ComplexValidators from './validators/complex'\nimport * as XrpcValidators from './validators/xrpc'\n\nexport function assertValidRecord(\n  lexicons: Lexicons,\n  def: LexRecord,\n  value: unknown,\n) {\n  const res = ComplexValidators.object(lexicons, 'Record', def.record, value)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function assertValidXrpcParams(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery | LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.parameters) {\n    const res = XrpcValidators.params(lexicons, 'Params', def.parameters, value)\n    if (!res.success) throw res.error\n    return res.value\n  }\n}\n\nexport function assertValidXrpcInput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure,\n  value: unknown,\n) {\n  if (def.input?.schema) {\n    // loop: all input schema definitions\n    return assertValidOneOf(lexicons, 'Input', def.input.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcOutput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery,\n  value: unknown,\n) {\n  if (def.output?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(lexicons, 'Output', def.output.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcMessage(\n  lexicons: Lexicons,\n  def: LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.message?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(\n      lexicons,\n      'Message',\n      def.message.schema,\n      value,\n      true,\n    )\n  }\n}\n", "import {\n  LexiconDoc,\n  LexRecord,\n  LexUserType,\n  LexiconDefNotFoundError,\n  InvalidLexiconError,\n  ValidationResult,\n  ValidationError,\n  isObj,\n  hasProp,\n} from './types'\nimport {\n  assertValidRecord,\n  assertValidXrpcParams,\n  assertValidXrpcInput,\n  assertValidXrpcOutput,\n  assertValidXrpcMessage,\n} from './validation'\nimport { toLexUri } from './util'\nimport * as ComplexValidators from './validators/complex'\n\n/**\n * A collection of compiled lexicons.\n */\nexport class Lexicons {\n  docs: Map<string, LexiconDoc> = new Map()\n  defs: Map<string, LexUserType> = new Map()\n\n  constructor(docs?: LexiconDoc[]) {\n    if (docs?.length) {\n      for (const doc of docs) {\n        this.add(doc)\n      }\n    }\n  }\n\n  /**\n   * Add a lexicon doc.\n   */\n  add(doc: LexiconDoc): void {\n    const uri = toLexUri(doc.id)\n    if (this.docs.has(uri)) {\n      throw new Error(`${uri} has already been registered`)\n    }\n\n    // WARNING\n    // mutates the object\n    // -prf\n    resolveRefUris(doc, uri)\n\n    this.docs.set(uri, doc)\n    for (const [defUri, def] of iterDefs(doc)) {\n      this.defs.set(defUri, def)\n    }\n  }\n\n  /**\n   * Remove a lexicon doc.\n   */\n  remove(uri: string) {\n    uri = toLexUri(uri)\n    const doc = this.docs.get(uri)\n    if (!doc) {\n      throw new Error(`Unable to remove \"${uri}\": does not exist`)\n    }\n    for (const [defUri, _def] of iterDefs(doc)) {\n      this.defs.delete(defUri)\n    }\n    this.docs.delete(uri)\n  }\n\n  /**\n   * Get a lexicon doc.\n   */\n  get(uri: string): LexiconDoc | undefined {\n    uri = toLexUri(uri)\n    return this.docs.get(uri)\n  }\n\n  /**\n   * Get a definition.\n   */\n  getDef(uri: string): LexUserType | undefined {\n    uri = toLexUri(uri)\n    return this.defs.get(uri)\n  }\n\n  /**\n   * Get a def, throw if not found. Throws on not found.\n   */\n  getDefOrThrow<T extends LexUserType['type'] = LexUserType['type']>(\n    uri: string,\n    types?: readonly T[],\n  ): Extract<LexUserType, { type: T }>\n  getDefOrThrow(\n    uri: string,\n    types?: readonly LexUserType['type'][],\n  ): LexUserType {\n    const def = this.getDef(uri)\n    if (!def) {\n      throw new LexiconDefNotFoundError(`Lexicon not found: ${uri}`)\n    }\n    if (types && !types.includes(def.type)) {\n      throw new InvalidLexiconError(\n        `Not a ${types.join(' or ')} lexicon: ${uri}`,\n      )\n    }\n    return def\n  }\n\n  /**\n   * Validate a record or object.\n   */\n  validate(lexUri: string, value: unknown): ValidationResult {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['record', 'object'])\n    if (!isObj(value)) {\n      throw new ValidationError(`Value must be an object`)\n    }\n    if (def.type === 'record') {\n      return ComplexValidators.object(this, 'Record', def.record, value)\n    } else if (def.type === 'object') {\n      return ComplexValidators.object(this, 'Object', def, value)\n    } else {\n      // shouldnt happen\n      throw new InvalidLexiconError('Definition must be a record or object')\n    }\n  }\n\n  /**\n   * Validate a record and throw on any error.\n   */\n  assertValidRecord(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['record'])\n    if (!isObj(value)) {\n      throw new ValidationError(`Record must be an object`)\n    }\n    if (!hasProp(value, '$type') || typeof value.$type !== 'string') {\n      throw new ValidationError(`Record/$type must be a string`)\n    }\n    const $type = (value as Record<string, string>).$type || ''\n    if (toLexUri($type) !== lexUri) {\n      throw new ValidationError(\n        `Invalid $type: must be ${lexUri}, got ${$type}`,\n      )\n    }\n    return assertValidRecord(this, def as LexRecord, value)\n  }\n\n  /**\n   * Validate xrpc query params and throw on any error.\n   */\n  assertValidXrpcParams(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, [\n      'query',\n      'procedure',\n      'subscription',\n    ])\n    return assertValidXrpcParams(this, def, value)\n  }\n\n  /**\n   * Validate xrpc input body and throw on any error.\n   */\n  assertValidXrpcInput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['procedure'])\n    return assertValidXrpcInput(this, def, value)\n  }\n\n  /**\n   * Validate xrpc output body and throw on any error.\n   */\n  assertValidXrpcOutput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['query', 'procedure'])\n    return assertValidXrpcOutput(this, def, value)\n  }\n\n  /**\n   * Validate xrpc subscription message and throw on any error.\n   */\n  assertValidXrpcMessage<T = unknown>(lexUri: string, value: unknown): T {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['subscription'])\n    return assertValidXrpcMessage(this, def, value) as T\n  }\n\n  /**\n   * Resolve a lex uri given a ref\n   */\n  resolveLexUri(lexUri: string, ref: string) {\n    lexUri = toLexUri(lexUri)\n    return toLexUri(ref, lexUri)\n  }\n}\n\nfunction* iterDefs(doc: LexiconDoc): Generator<[string, LexUserType]> {\n  for (const defId in doc.defs) {\n    yield [`lex:${doc.id}#${defId}`, doc.defs[defId]]\n    if (defId === 'main') {\n      yield [`lex:${doc.id}`, doc.defs[defId]]\n    }\n  }\n}\n\n// WARNING\n// this method mutates objects\n// -prf\nfunction resolveRefUris(obj: any, baseUri: string): any {\n  for (const k in obj) {\n    if (obj.type === 'ref') {\n      obj.ref = toLexUri(obj.ref, baseUri)\n    } else if (obj.type === 'union') {\n      obj.refs = obj.refs.map((ref) => toLexUri(ref, baseUri))\n    } else if (Array.isArray(obj[k])) {\n      obj[k] = obj[k].map((item: any) => {\n        if (typeof item === 'string') {\n          return item.startsWith('#') ? toLexUri(item, baseUri) : item\n        } else if (item && typeof item === 'object') {\n          return resolveRefUris(item, baseUri)\n        }\n        return item\n      })\n    } else if (obj[k] && typeof obj[k] === 'object') {\n      obj[k] = resolveRefUris(obj[k], baseUri)\n    }\n  }\n  return obj\n}\n", "import {\n  check,\n  IpldValue,\n  ipldToJson,\n  jsonToIpld,\n  JsonValue,\n} from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { BlobRef, jsonBlobRef } from './blob-refs'\n\nexport type LexValue =\n  | IpldValue\n  | BlobRef\n  | Array<LexValue>\n  | { [key: string]: LexValue }\n\nexport type RepoRecord = Record<string, LexValue>\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const lexToIpld = (val: LexValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => lexToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, leaving the original encoding so that we don't change CIDs on re-encode\n    if (val instanceof BlobRef) {\n      return val.original\n    }\n    // retain cids & bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = lexToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToLex = (val: IpldValue): LexValue => {\n  // map arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToLex(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, using hints to avoid expensive is() check\n    if (\n      (val['$type'] === 'blob' ||\n        (typeof val['cid'] === 'string' &&\n          typeof val['mimeType'] === 'string')) &&\n      check.is(val, jsonBlobRef)\n    ) {\n      return BlobRef.fromJsonRef(val)\n    }\n    // retain cids, bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // map plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToLex(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const lexToJson = (val: LexValue): JsonValue => {\n  return ipldToJson(lexToIpld(val))\n}\n\nexport const stringifyLex = (val: LexValue): string => {\n  return JSON.stringify(lexToJson(val))\n}\n\nexport const jsonToLex = (val: JsonValue): LexValue => {\n  return ipldToLex(jsonToIpld(val))\n}\n\nexport const jsonStringToLex = (val: string): LexValue => {\n  return jsonToLex(JSON.parse(val))\n}\n", "import { z } from 'zod'\nimport { ValidationError } from '@atproto/lexicon'\n\nexport type QueryParams = Record<string, any>\nexport type Headers = Record<string, string>\n\nexport interface CallOptions {\n  encoding?: string\n  headers?: Headers\n}\n\nexport interface FetchHandlerResponse {\n  status: number\n  headers: Headers\n  body: ArrayBuffer | undefined\n}\n\nexport type FetchHandler = (\n  httpUri: string,\n  httpMethod: string,\n  httpHeaders: Headers,\n  httpReqBody: any,\n) => Promise<FetchHandlerResponse>\n\nexport const errorResponseBody = z.object({\n  error: z.string().optional(),\n  message: z.string().optional(),\n})\nexport type ErrorResponseBody = z.infer<typeof errorResponseBody>\n\nexport enum ResponseType {\n  Unknown = 1,\n  InvalidResponse = 2,\n  Success = 200,\n  InvalidRequest = 400,\n  AuthRequired = 401,\n  Forbidden = 403,\n  XRPCNotSupported = 404,\n  PayloadTooLarge = 413,\n  RateLimitExceeded = 429,\n  InternalServerError = 500,\n  MethodNotImplemented = 501,\n  UpstreamFailure = 502,\n  NotEnoughResources = 503,\n  UpstreamTimeout = 504,\n}\n\nexport const ResponseTypeNames = {\n  [ResponseType.InvalidResponse]: 'InvalidResponse',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'InvalidRequest',\n  [ResponseType.AuthRequired]: 'AuthenticationRequired',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPCNotSupported',\n  [ResponseType.PayloadTooLarge]: 'PayloadTooLarge',\n  [ResponseType.RateLimitExceeded]: 'RateLimitExceeded',\n  [ResponseType.InternalServerError]: 'InternalServerError',\n  [ResponseType.MethodNotImplemented]: 'MethodNotImplemented',\n  [ResponseType.UpstreamFailure]: 'UpstreamFailure',\n  [ResponseType.NotEnoughResources]: 'NotEnoughResources',\n  [ResponseType.UpstreamTimeout]: 'UpstreamTimeout',\n}\n\nexport const ResponseTypeStrings = {\n  [ResponseType.InvalidResponse]: 'Invalid Response',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'Invalid Request',\n  [ResponseType.AuthRequired]: 'Authentication Required',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPC Not Supported',\n  [ResponseType.PayloadTooLarge]: 'Payload Too Large',\n  [ResponseType.RateLimitExceeded]: 'Rate Limit Exceeded',\n  [ResponseType.InternalServerError]: 'Internal Server Error',\n  [ResponseType.MethodNotImplemented]: 'Method Not Implemented',\n  [ResponseType.UpstreamFailure]: 'Upstream Failure',\n  [ResponseType.NotEnoughResources]: 'Not Enough Resources',\n  [ResponseType.UpstreamTimeout]: 'Upstream Timeout',\n}\n\nexport class XRPCResponse {\n  success = true\n\n  constructor(public data: any, public headers: Headers) {}\n}\n\nexport class XRPCError extends Error {\n  success = false\n  headers?: Headers\n\n  constructor(\n    public status: ResponseType,\n    public error?: string,\n    message?: string,\n    headers?: Headers,\n  ) {\n    super(message || error || ResponseTypeStrings[status])\n    if (!this.error) {\n      this.error = ResponseTypeNames[status]\n    }\n    this.headers = headers\n  }\n}\n\nexport class XRPCInvalidResponseError extends XRPCError {\n  constructor(\n    public lexiconNsid: string,\n    public validationError: ValidationError,\n    public responseBody: unknown,\n  ) {\n    super(\n      ResponseType.InvalidResponse,\n      ResponseTypeStrings[ResponseType.InvalidResponse],\n      `The server gave an invalid response and may be out of date.`,\n    )\n  }\n}\n", "import {\n  jsonStringToLex,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  stringifyLex,\n} from '@atproto/lexicon'\nimport {\n  CallOptions,\n  Headers,\n  QueryParams,\n  ResponseType,\n  XRPCError,\n} from './types'\n\nexport function getMethodSchemaHTTPMethod(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n) {\n  if (schema.type === 'procedure') {\n    return 'post'\n  }\n  return 'get'\n}\n\nexport function constructMethodCallUri(\n  nsid: string,\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  serviceUri: URL,\n  params?: QueryParams,\n): string {\n  const uri = new URL(serviceUri)\n  uri.pathname = `/xrpc/${nsid}`\n\n  // given parameters\n  if (params) {\n    for (const [key, value] of Object.entries(params)) {\n      const paramSchema = schema.parameters?.properties?.[key]\n      if (!paramSchema) {\n        throw new Error(`Invalid query parameter: ${key}`)\n      }\n      if (value !== undefined) {\n        if (paramSchema.type === 'array') {\n          const vals: typeof value[] = []\n          vals.concat(value).forEach((val) => {\n            uri.searchParams.append(\n              key,\n              encodeQueryParam(paramSchema.items.type, val),\n            )\n          })\n        } else {\n          uri.searchParams.set(key, encodeQueryParam(paramSchema.type, value))\n        }\n      }\n    }\n  }\n\n  return uri.toString()\n}\n\nexport function encodeQueryParam(\n  type:\n    | 'string'\n    | 'float'\n    | 'integer'\n    | 'boolean'\n    | 'datetime'\n    | 'array'\n    | 'unknown',\n  value: any,\n): string {\n  if (type === 'string' || type === 'unknown') {\n    return String(value)\n  }\n  if (type === 'float') {\n    return String(Number(value))\n  } else if (type === 'integer') {\n    return String(Number(value) | 0)\n  } else if (type === 'boolean') {\n    return value ? 'true' : 'false'\n  } else if (type === 'datetime') {\n    if (value instanceof Date) {\n      return value.toISOString()\n    }\n    return String(value)\n  }\n  throw new Error(`Unsupported query param type: ${type}`)\n}\n\nexport function normalizeHeaders(headers: Headers): Headers {\n  const normalized: Headers = {}\n  for (const [header, value] of Object.entries(headers)) {\n    normalized[header.toLowerCase()] = value\n  }\n\n  return normalized\n}\n\nexport function constructMethodCallHeaders(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  data?: any,\n  opts?: CallOptions,\n): Headers {\n  const headers: Headers = opts?.headers || {}\n  if (schema.type === 'procedure') {\n    if (opts?.encoding) {\n      headers['Content-Type'] = opts.encoding\n    }\n    if (data && typeof data === 'object') {\n      if (!headers['Content-Type']) {\n        headers['Content-Type'] = 'application/json'\n      }\n    }\n  }\n  return headers\n}\n\nexport function encodeMethodCallBody(\n  headers: Headers,\n  data?: any,\n): ArrayBuffer | undefined {\n  if (!headers['content-type'] || typeof data === 'undefined') {\n    return undefined\n  }\n  if (data instanceof ArrayBuffer) {\n    return data\n  }\n  if (headers['content-type'].startsWith('text/')) {\n    return new TextEncoder().encode(data.toString())\n  }\n  if (headers['content-type'].startsWith('application/json')) {\n    return new TextEncoder().encode(stringifyLex(data))\n  }\n  return data\n}\n\nexport function httpResponseCodeToEnum(status: number): ResponseType {\n  let resCode: ResponseType\n  if (status in ResponseType) {\n    resCode = status\n  } else if (status >= 100 && status < 200) {\n    resCode = ResponseType.XRPCNotSupported\n  } else if (status >= 200 && status < 300) {\n    resCode = ResponseType.Success\n  } else if (status >= 300 && status < 400) {\n    resCode = ResponseType.XRPCNotSupported\n  } else if (status >= 400 && status < 500) {\n    resCode = ResponseType.InvalidRequest\n  } else {\n    resCode = ResponseType.InternalServerError\n  }\n  return resCode\n}\n\nexport function httpResponseBodyParse(\n  mimeType: string | null,\n  data: ArrayBuffer | undefined,\n): any {\n  if (mimeType) {\n    if (mimeType.includes('application/json') && data?.byteLength) {\n      try {\n        const str = new TextDecoder().decode(data)\n        return jsonStringToLex(str)\n      } catch (e) {\n        throw new XRPCError(\n          ResponseType.InvalidResponse,\n          `Failed to parse response body: ${String(e)}`,\n        )\n      }\n    }\n    if (mimeType.startsWith('text/') && data?.byteLength) {\n      try {\n        return new TextDecoder().decode(data)\n      } catch (e) {\n        throw new XRPCError(\n          ResponseType.InvalidResponse,\n          `Failed to parse response body: ${String(e)}`,\n        )\n      }\n    }\n  }\n  if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  }\n  return data\n}\n", "import { LexiconDoc, Lexicons, ValidationError } from '@atproto/lexicon'\nimport {\n  getMethodSchemaHTTPMethod,\n  constructMethodCallUri,\n  constructMethodCallHeaders,\n  encodeMethodCallBody,\n  httpResponseCodeToEnum,\n  httpResponseBodyParse,\n  normalizeHeaders,\n} from './util'\nimport {\n  FetchHandler,\n  FetchHandlerResponse,\n  Headers,\n  CallOptions,\n  QueryParams,\n  ResponseType,\n  errorResponseBody,\n  ErrorResponseBody,\n  XRPCResponse,\n  XRPCError,\n  XRPCInvalidResponseError,\n} from './types'\n\nexport class Client {\n  fetch: FetchHandler = defaultFetchHandler\n  lex = new Lexicons()\n\n  // method calls\n  //\n\n  async call(\n    serviceUri: string | URL,\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ) {\n    return this.service(serviceUri).call(methodNsid, params, data, opts)\n  }\n\n  service(serviceUri: string | URL) {\n    return new ServiceClient(this, serviceUri)\n  }\n\n  // schemas\n  // =\n\n  addLexicon(doc: LexiconDoc) {\n    this.lex.add(doc)\n  }\n\n  addLexicons(docs: LexiconDoc[]) {\n    for (const doc of docs) {\n      this.addLexicon(doc)\n    }\n  }\n\n  removeLexicon(uri: string) {\n    this.lex.remove(uri)\n  }\n}\n\nexport class ServiceClient {\n  baseClient: Client\n  uri: URL\n  headers: Record<string, string> = {}\n\n  constructor(baseClient: Client, serviceUri: string | URL) {\n    this.baseClient = baseClient\n    this.uri = typeof serviceUri === 'string' ? new URL(serviceUri) : serviceUri\n  }\n\n  setHeader(key: string, value: string): void {\n    this.headers[key] = value\n  }\n\n  unsetHeader(key: string): void {\n    delete this.headers[key]\n  }\n\n  async call(\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ) {\n    const def = this.baseClient.lex.getDefOrThrow(methodNsid)\n    if (!def || (def.type !== 'query' && def.type !== 'procedure')) {\n      throw new Error(\n        `Invalid lexicon: ${methodNsid}. Must be a query or procedure.`,\n      )\n    }\n\n    const httpMethod = getMethodSchemaHTTPMethod(def)\n    const httpUri = constructMethodCallUri(methodNsid, def, this.uri, params)\n    const httpHeaders = constructMethodCallHeaders(def, data, {\n      headers: {\n        ...this.headers,\n        ...opts?.headers,\n      },\n      encoding: opts?.encoding,\n    })\n\n    const res = await this.baseClient.fetch(\n      httpUri,\n      httpMethod,\n      httpHeaders,\n      data,\n    )\n\n    const resCode = httpResponseCodeToEnum(res.status)\n    if (resCode === ResponseType.Success) {\n      try {\n        this.baseClient.lex.assertValidXrpcOutput(methodNsid, res.body)\n      } catch (e: any) {\n        if (e instanceof ValidationError) {\n          throw new XRPCInvalidResponseError(methodNsid, e, res.body)\n        } else {\n          throw e\n        }\n      }\n      return new XRPCResponse(res.body, res.headers)\n    } else {\n      if (res.body && isErrorResponseBody(res.body)) {\n        throw new XRPCError(\n          resCode,\n          res.body.error,\n          res.body.message,\n          res.headers,\n        )\n      } else {\n        throw new XRPCError(resCode)\n      }\n    }\n  }\n}\n\nexport async function defaultFetchHandler(\n  httpUri: string,\n  httpMethod: string,\n  httpHeaders: Headers,\n  httpReqBody: unknown,\n): Promise<FetchHandlerResponse> {\n  try {\n    // The duplex field is now required for streaming bodies, but not yet reflected\n    // anywhere in docs or types. See whatwg/fetch#1438, nodejs/node#46221.\n    const headers = normalizeHeaders(httpHeaders)\n    const reqInit: RequestInit & { duplex: string } = {\n      method: httpMethod,\n      headers,\n      body: encodeMethodCallBody(headers, httpReqBody),\n      duplex: 'half',\n    }\n    const res = await fetch(httpUri, reqInit)\n    const resBody = await res.arrayBuffer()\n    return {\n      status: res.status,\n      headers: Object.fromEntries(res.headers.entries()),\n      body: httpResponseBodyParse(res.headers.get('content-type'), resBody),\n    }\n  } catch (e) {\n    throw new XRPCError(ResponseType.Unknown, String(e))\n  }\n}\n\nfunction isErrorResponseBody(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n", "export * from './types'\nexport * from './client'\n\nimport { Client } from './client'\nconst defaultInst = new Client()\nexport default defaultInst\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { LexiconDoc, Lexicons } from '@atproto/lexicon'\n\nexport const schemaDict = {\n  ComAtprotoAdminDefs: {\n    lexicon: 1,\n    id: 'com.atproto.admin.defs',\n    defs: {\n      statusAttr: {\n        type: 'object',\n        required: ['applied'],\n        properties: {\n          applied: {\n            type: 'boolean',\n          },\n          ref: {\n            type: 'string',\n          },\n        },\n      },\n      modEventView: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobCids',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#modEventTakedown',\n              'lex:com.atproto.admin.defs#modEventReverseTakedown',\n              'lex:com.atproto.admin.defs#modEventComment',\n              'lex:com.atproto.admin.defs#modEventReport',\n              'lex:com.atproto.admin.defs#modEventLabel',\n              'lex:com.atproto.admin.defs#modEventAcknowledge',\n              'lex:com.atproto.admin.defs#modEventEscalate',\n              'lex:com.atproto.admin.defs#modEventMute',\n              'lex:com.atproto.admin.defs#modEventEmail',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          creatorHandle: {\n            type: 'string',\n          },\n          subjectHandle: {\n            type: 'string',\n          },\n        },\n      },\n      modEventViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobs',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#modEventTakedown',\n              'lex:com.atproto.admin.defs#modEventReverseTakedown',\n              'lex:com.atproto.admin.defs#modEventComment',\n              'lex:com.atproto.admin.defs#modEventReport',\n              'lex:com.atproto.admin.defs#modEventLabel',\n              'lex:com.atproto.admin.defs#modEventAcknowledge',\n              'lex:com.atproto.admin.defs#modEventEscalate',\n              'lex:com.atproto.admin.defs#modEventMute',\n              'lex:com.atproto.admin.defs#modEventResolveAppeal',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoView',\n              'lex:com.atproto.admin.defs#repoViewNotFound',\n              'lex:com.atproto.admin.defs#recordView',\n              'lex:com.atproto.admin.defs#recordViewNotFound',\n            ],\n          },\n          subjectBlobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#blobView',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reportView: {\n        type: 'object',\n        required: [\n          'id',\n          'reasonType',\n          'subject',\n          'reportedBy',\n          'createdAt',\n          'resolvedByActionIds',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          reasonType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n          comment: {\n            type: 'string',\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          reportedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          resolvedByActionIds: {\n            type: 'array',\n            items: {\n              type: 'integer',\n            },\n          },\n        },\n      },\n      subjectStatusView: {\n        type: 'object',\n        required: ['id', 'subject', 'createdAt', 'updatedAt', 'reviewState'],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the last update was made to the moderation status of the subject',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing the first moderation status impacting event was emitted on the subject',\n          },\n          reviewState: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectReviewState',\n          },\n          comment: {\n            type: 'string',\n            description: 'Sticky comment on the subject.',\n          },\n          muteUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReviewedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastReviewedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReportedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastAppealedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the author of the subject appealed a moderation action',\n          },\n          takendown: {\n            type: 'boolean',\n          },\n          appealed: {\n            type: 'boolean',\n            description:\n              'True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators.',\n          },\n          suspendUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      reportViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'reasonType',\n          'subject',\n          'reportedBy',\n          'createdAt',\n          'resolvedByActions',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          reasonType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n          comment: {\n            type: 'string',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoView',\n              'lex:com.atproto.admin.defs#repoViewNotFound',\n              'lex:com.atproto.admin.defs#recordView',\n              'lex:com.atproto.admin.defs#recordViewNotFound',\n            ],\n          },\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n          },\n          reportedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          resolvedByActions: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#modEventView',\n            },\n          },\n        },\n      },\n      repoView: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderation',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n        },\n      },\n      repoViewDetail: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderationDetail',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      accountView: {\n        type: 'object',\n        required: ['did', 'handle', 'indexedAt'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n        },\n      },\n      repoViewNotFound: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoRef: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoBlobRef: {\n        type: 'object',\n        required: ['did', 'cid'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      recordView: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobCids',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderation',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#repoView',\n          },\n        },\n      },\n      recordViewDetail: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobs',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.admin.defs#blobView',\n            },\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderationDetail',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#repoView',\n          },\n        },\n      },\n      recordViewNotFound: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      moderation: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n          },\n        },\n      },\n      moderationDetail: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n          },\n        },\n      },\n      blobView: {\n        type: 'object',\n        required: ['cid', 'mimeType', 'size', 'createdAt'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          mimeType: {\n            type: 'string',\n          },\n          size: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          details: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#imageDetails',\n              'lex:com.atproto.admin.defs#videoDetails',\n            ],\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#moderation',\n          },\n        },\n      },\n      imageDetails: {\n        type: 'object',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n        },\n      },\n      videoDetails: {\n        type: 'object',\n        required: ['width', 'height', 'length'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n          length: {\n            type: 'integer',\n          },\n        },\n      },\n      subjectReviewState: {\n        type: 'string',\n        knownValues: [\n          'lex:com.atproto.admin.defs#reviewOpen',\n          'lex:com.atproto.admin.defs#reviewEscalated',\n          'lex:com.atproto.admin.defs#reviewClosed',\n        ],\n      },\n      reviewOpen: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator',\n      },\n      reviewEscalated: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator',\n      },\n      reviewClosed: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator',\n      },\n      modEventTakedown: {\n        type: 'object',\n        description: 'Take down a subject permanently or temporarily',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the takedown should be in effect before automatically expiring.',\n          },\n        },\n      },\n      modEventReverseTakedown: {\n        type: 'object',\n        description: 'Revert take down action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventResolveAppeal: {\n        type: 'object',\n        description: 'Resolve appeal on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe resolution.',\n          },\n        },\n      },\n      modEventComment: {\n        type: 'object',\n        description: 'Add a comment to a subject',\n        required: ['comment'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          sticky: {\n            type: 'boolean',\n            description: 'Make the comment persistent on the subject',\n          },\n        },\n      },\n      modEventReport: {\n        type: 'object',\n        description: 'Report a subject',\n        required: ['reportType'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          reportType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n        },\n      },\n      modEventLabel: {\n        type: 'object',\n        description: 'Apply/Negate labels on a subject',\n        required: ['createLabelVals', 'negateLabelVals'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          createLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          negateLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      modEventAcknowledge: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventEscalate: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventMute: {\n        type: 'object',\n        description: 'Mute incoming reports on a subject',\n        required: ['durationInHours'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description: 'Indicates how long the subject should remain muted.',\n          },\n        },\n      },\n      modEventUnmute: {\n        type: 'object',\n        description: 'Unmute action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventEmail: {\n        type: 'object',\n        description: 'Keep a log of outgoing email to a user',\n        required: ['subjectLine'],\n        properties: {\n          subjectLine: {\n            type: 'string',\n            description: 'The subject line of the email sent to the user.',\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about the outgoing comm.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.admin.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable an account from receiving new invite codes, but does not invalidate existing codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for disabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable some set of codes and/or all codes associated with a set of users.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminEmitModerationEvent: {\n    lexicon: 1,\n    id: 'com.atproto.admin.emitModerationEvent',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Take a moderation action on an actor.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['event', 'subject', 'createdBy'],\n            properties: {\n              event: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#modEventTakedown',\n                  'lex:com.atproto.admin.defs#modEventAcknowledge',\n                  'lex:com.atproto.admin.defs#modEventEscalate',\n                  'lex:com.atproto.admin.defs#modEventComment',\n                  'lex:com.atproto.admin.defs#modEventLabel',\n                  'lex:com.atproto.admin.defs#modEventReport',\n                  'lex:com.atproto.admin.defs#modEventMute',\n                  'lex:com.atproto.admin.defs#modEventReverseTakedown',\n                  'lex:com.atproto.admin.defs#modEventUnmute',\n                  'lex:com.atproto.admin.defs#modEventEmail',\n                ],\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              subjectBlobCids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#modEventView',\n          },\n        },\n        errors: [\n          {\n            name: 'SubjectHasAction',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoAdminEnableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.enableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Re-enable an account's ability to receive invite codes.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for enabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about an account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get an admin view of invite codes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            sort: {\n              type: 'string',\n              knownValues: ['recent', 'usage'],\n              default: 'recent',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 500,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetModerationEvent: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getModerationEvent',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a moderation event.',\n        parameters: {\n          type: 'params',\n          required: ['id'],\n          properties: {\n            id: {\n              type: 'integer',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#modEventViewDetail',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a record.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#recordViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoAdminGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a repository.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#repoViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoAdminGetSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getSubjectStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the service-specific admin status of a subject (account, record, or blob).',\n        parameters: {\n          type: 'params',\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            blob: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminQueryModerationEvents: {\n    lexicon: 1,\n    id: 'com.atproto.admin.queryModerationEvents',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List moderation events related to a subject.',\n        parameters: {\n          type: 'params',\n          properties: {\n            types: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'The types of events (fully qualified string in the format of com.atproto.admin#modEvent<name>) to filter by. If not specified, all events are returned.',\n            },\n            createdBy: {\n              type: 'string',\n              format: 'did',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n              description:\n                'Sort direction for the events. Defaults to descending order of created at timestamp.',\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              default: false,\n              description:\n                'If true, events on all record types (posts, lists, profile etc.) owned by the did are returned',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['events'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              events: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#modEventView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminQueryModerationStatuses: {\n    lexicon: 1,\n    id: 'com.atproto.admin.queryModerationStatuses',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'View moderation statuses of subjects (record or repo).',\n        parameters: {\n          type: 'params',\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            comment: {\n              type: 'string',\n              description: 'Search subjects by keyword from comments',\n            },\n            reportedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported after a given timestamp',\n            },\n            reportedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported before a given timestamp',\n            },\n            reviewedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed after a given timestamp',\n            },\n            reviewedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed before a given timestamp',\n            },\n            includeMuted: {\n              type: 'boolean',\n              description:\n                \"By default, we don't include muted subjects in the results. Set this to true to include them.\",\n            },\n            reviewState: {\n              type: 'string',\n              description: 'Specify when fetching subjects in a certain state',\n            },\n            ignoreSubjects: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'uri',\n              },\n            },\n            lastReviewedBy: {\n              type: 'string',\n              format: 'did',\n              description:\n                'Get all subject statuses that were reviewed by a specific moderator',\n            },\n            sortField: {\n              type: 'string',\n              default: 'lastReportedAt',\n              enum: ['lastReviewedAt', 'lastReportedAt'],\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n            },\n            takendown: {\n              type: 'boolean',\n              description: 'Get subjects that were taken down',\n            },\n            appealed: {\n              type: 'boolean',\n              description: 'Get subjects in unresolved appealed status',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subjectStatuses'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              subjectStatuses: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#subjectStatusView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSearchRepos: {\n    lexicon: 1,\n    id: 'com.atproto.admin.searchRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find repositories based on a search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead\",\n            },\n            q: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#repoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSendEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.sendEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Send email to a user's account email address.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['recipientDid', 'content', 'senderDid'],\n            properties: {\n              recipientDid: {\n                type: 'string',\n                format: 'did',\n              },\n              content: {\n                type: 'string',\n              },\n              subject: {\n                type: 'string',\n              },\n              senderDid: {\n                type: 'string',\n                format: 'did',\n              },\n              comment: {\n                type: 'string',\n                description:\n                  \"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers\",\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sent'],\n            properties: {\n              sent: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account', 'email'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountHandle: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's handle.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'handle'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateSubjectStatus',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the service-specific admin status of a subject (account, record, or blob).',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityResolveHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.resolveHandle',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Provides the DID of a repo.',\n        parameters: {\n          type: 'params',\n          required: ['handle'],\n          properties: {\n            handle: {\n              type: 'string',\n              format: 'handle',\n              description: 'The handle to resolve.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityUpdateHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.updateHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Updates the handle of the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelDefs: {\n    lexicon: 1,\n    id: 'com.atproto.label.defs',\n    defs: {\n      label: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto resource (eg, repo or record).',\n        required: ['src', 'uri', 'val', 'cts'],\n        properties: {\n          src: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the actor who created this label.',\n          },\n          uri: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'AT URI of the record, repository (account), or other resource that this label applies to.',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n            description:\n              \"Optionally, CID specifying the specific version of 'uri' resource this label applies to.\",\n          },\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n          neg: {\n            type: 'boolean',\n            description:\n              'If true, this is a negation label, overwriting a previous label.',\n          },\n          cts: {\n            type: 'string',\n            format: 'datetime',\n            description: 'Timestamp when this label was created.',\n          },\n        },\n      },\n      selfLabels: {\n        type: 'object',\n        description:\n          'Metadata tags on an atproto record, published by the author within the record.',\n        required: ['values'],\n        properties: {\n          values: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#selfLabel',\n            },\n            maxLength: 10,\n          },\n        },\n      },\n      selfLabel: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.',\n        required: ['val'],\n        properties: {\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelQueryLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.queryLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find labels relevant to the provided URI patterns.',\n        parameters: {\n          type: 'params',\n          required: ['uriPatterns'],\n          properties: {\n            uriPatterns: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                \"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI.\",\n            },\n            sources: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n              description:\n                'Optional list of label sources (DIDs) to filter on.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelSubscribeLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.subscribeLabels',\n    defs: {\n      main: {\n        type: 'subscription',\n        description: 'Subscribe to label updates.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.label.subscribeLabels#labels',\n              'lex:com.atproto.label.subscribeLabels#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n        ],\n      },\n      labels: {\n        type: 'object',\n        required: ['seq', 'labels'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationCreateReport: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.createReport',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Report a repo or a record.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['reasonType', 'subject'],\n            properties: {\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'id',\n              'reasonType',\n              'subject',\n              'reportedBy',\n              'createdAt',\n            ],\n            properties: {\n              id: {\n                type: 'integer',\n              },\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              reportedBy: {\n                type: 'string',\n                format: 'did',\n              },\n              createdAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationDefs: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.defs',\n    defs: {\n      reasonType: {\n        type: 'string',\n        knownValues: [\n          'com.atproto.moderation.defs#reasonSpam',\n          'com.atproto.moderation.defs#reasonViolation',\n          'com.atproto.moderation.defs#reasonMisleading',\n          'com.atproto.moderation.defs#reasonSexual',\n          'com.atproto.moderation.defs#reasonRude',\n          'com.atproto.moderation.defs#reasonOther',\n          'com.atproto.moderation.defs#reasonAppeal',\n        ],\n      },\n      reasonSpam: {\n        type: 'token',\n        description: 'Spam: frequent unwanted promotion, replies, mentions',\n      },\n      reasonViolation: {\n        type: 'token',\n        description: 'Direct violation of server rules, laws, terms of service',\n      },\n      reasonMisleading: {\n        type: 'token',\n        description: 'Misleading identity, affiliation, or content',\n      },\n      reasonSexual: {\n        type: 'token',\n        description: 'Unwanted or mislabeled sexual content',\n      },\n      reasonRude: {\n        type: 'token',\n        description:\n          'Rude, harassing, explicit, or otherwise unwelcoming behavior',\n      },\n      reasonOther: {\n        type: 'token',\n        description: 'Other: reports not falling under another report category',\n      },\n      reasonAppeal: {\n        type: 'token',\n        description: 'Appeal: appeal a previously taken moderation action',\n      },\n    },\n  },\n  ComAtprotoRepoApplyWrites: {\n    lexicon: 1,\n    id: 'com.atproto.repo.applyWrites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Apply a batch transaction of creates, updates, and deletes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'writes'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description: 'Flag for validating the records.',\n              },\n              writes: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#create',\n                    'lex:com.atproto.repo.applyWrites#update',\n                    'lex:com.atproto.repo.applyWrites#delete',\n                  ],\n                  closed: true,\n                },\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n      create: {\n        type: 'object',\n        description: 'Create a new record.',\n        required: ['collection', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            maxLength: 15,\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      update: {\n        type: 'object',\n        description: 'Update an existing record.',\n        required: ['collection', 'rkey', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      delete: {\n        type: 'object',\n        description: 'Delete an existing record.',\n        required: ['collection', 'rkey'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoCreateRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.createRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create a new record.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'record'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The key of the record.',\n                maxLength: 15,\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description: 'Flag for validating the record.',\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to create.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDeleteRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.deleteRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Delete a record, or ensure it doesn't exist.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The key of the record.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDescribeRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.describeRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about the repo, including the list of collections.',\n        parameters: {\n          type: 'params',\n          required: ['repo'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'handle',\n              'did',\n              'didDoc',\n              'collections',\n              'handleIsCorrect',\n            ],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              collections: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              handleIsCorrect: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a record.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection', 'rkey'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record collection.',\n            },\n            rkey: {\n              type: 'string',\n              description: 'The key of the record.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'The CID of the version of the record. If not specified, then return the most recent version.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'value'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              value: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListRecords: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List a range of records in a collection.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record type.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n              description: 'The number of records to return.',\n            },\n            cursor: {\n              type: 'string',\n            },\n            rkeyStart: {\n              type: 'string',\n              description:\n                'DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)',\n            },\n            rkeyEnd: {\n              type: 'string',\n              description:\n                'DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)',\n            },\n            reverse: {\n              type: 'boolean',\n              description: 'Flag to reverse the order of the returned records.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              records: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listRecords#record',\n                },\n              },\n            },\n          },\n        },\n      },\n      record: {\n        type: 'object',\n        required: ['uri', 'cid', 'value'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoPutRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.putRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Write a record, creating or updating it as needed.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey', 'record'],\n            nullable: ['swapRecord'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The key of the record.',\n                maxLength: 15,\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description: 'Flag for validating the record.',\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to write.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoStrongRef: {\n    lexicon: 1,\n    id: 'com.atproto.repo.strongRef',\n    description: 'A URI with a content-hash fingerprint.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoUploadBlob: {\n    lexicon: 1,\n    id: 'com.atproto.repo.uploadBlob',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Upload a new blob to be added to repo in a later request.',\n        input: {\n          encoding: '*/*',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blob'],\n            properties: {\n              blob: {\n                type: 'blob',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerConfirmEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.confirmEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Confirm an email using a token from com.atproto.server.requestEmailConfirmation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email', 'token'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountNotFound',\n          },\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'InvalidEmail',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              inviteCode: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n              recoveryKey: {\n                type: 'string',\n              },\n              plcOp: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidHandle',\n          },\n          {\n            name: 'InvalidPassword',\n          },\n          {\n            name: 'InvalidInviteCode',\n          },\n          {\n            name: 'HandleNotAvailable',\n          },\n          {\n            name: 'UnsupportedDomain',\n          },\n          {\n            name: 'UnresolvableDid',\n          },\n          {\n            name: 'IncompatibleDidDoc',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an App Password.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.createAppPassword#appPassword',\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'password', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          password: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCode: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCode',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an invite code.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['useCount'],\n            properties: {\n              useCount: {\n                type: 'integer',\n              },\n              forAccount: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['code'],\n            properties: {\n              code: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create invite codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codeCount', 'useCount'],\n            properties: {\n              codeCount: {\n                type: 'integer',\n                default: 1,\n              },\n              useCount: {\n                type: 'integer',\n              },\n              forAccounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'did',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.createInviteCodes#accountCodes',\n                },\n              },\n            },\n          },\n        },\n      },\n      accountCodes: {\n        type: 'object',\n        required: ['account', 'codes'],\n        properties: {\n          account: {\n            type: 'string',\n          },\n          codes: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.createSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an authentication session.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['identifier', 'password'],\n            properties: {\n              identifier: {\n                type: 'string',\n                description:\n                  'Handle or other identifier supported by the server for the authenticating user.',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDefs: {\n    lexicon: 1,\n    id: 'com.atproto.server.defs',\n    defs: {\n      inviteCode: {\n        type: 'object',\n        required: [\n          'code',\n          'available',\n          'disabled',\n          'forAccount',\n          'createdBy',\n          'createdAt',\n          'uses',\n        ],\n        properties: {\n          code: {\n            type: 'string',\n          },\n          available: {\n            type: 'integer',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          forAccount: {\n            type: 'string',\n          },\n          createdBy: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          uses: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCodeUse',\n            },\n          },\n        },\n      },\n      inviteCodeUse: {\n        type: 'object',\n        required: ['usedBy', 'usedAt'],\n        properties: {\n          usedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          usedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Delete an actor's account with a token and password.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password', 'token'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeleteSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete the current session.',\n      },\n    },\n  },\n  ComAtprotoServerDescribeServer: {\n    lexicon: 1,\n    id: 'com.atproto.server.describeServer',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a document describing the service's accounts configuration.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['availableUserDomains'],\n            properties: {\n              inviteCodeRequired: {\n                type: 'boolean',\n              },\n              availableUserDomains: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:com.atproto.server.describeServer#links',\n              },\n            },\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerGetAccountInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.getAccountInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get all invite codes for a given account.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeUsed: {\n              type: 'boolean',\n              default: true,\n            },\n            createAvailable: {\n              type: 'boolean',\n              default: true,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateCreate',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.getSession',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about the current session.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle', 'did'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerListAppPasswords: {\n    lexicon: 1,\n    id: 'com.atproto.server.listAppPasswords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all App Passwords.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['passwords'],\n            properties: {\n              passwords: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.listAppPasswords#appPassword',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRefreshSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.refreshSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Refresh an authentication session.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRequestAccountDelete: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestAccountDelete',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account deletion via email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailConfirmation: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailConfirmation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to confirm ownership of email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a token in order to update email.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['tokenRequired'],\n            properties: {\n              tokenRequired: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRequestPasswordReset: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestPasswordReset',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account password reset via email.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerReserveSigningKey: {\n    lexicon: 1,\n    id: 'com.atproto.server.reserveSigningKey',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reserve a repo signing key for account creation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              did: {\n                type: 'string',\n                description: 'The did to reserve a new did:key for',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['signingKey'],\n            properties: {\n              signingKey: {\n                type: 'string',\n                description: 'Public signing key in the form of a did:key.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerResetPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.resetPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reset a user account password using a token.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token', 'password'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRevokeAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.revokeAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Revoke an App Password by name.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerUpdateEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.updateEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n                description:\n                  \"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.\",\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'TokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlob: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlob',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a blob associated with a given repo.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cid'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description: 'The CID of the blob to fetch',\n            },\n          },\n        },\n        output: {\n          encoding: '*/*',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetBlocks: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get blocks from a given repo.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cids'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetCheckout: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getCheckout',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'DEPRECATED - please use com.atproto.sync.getRepo instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetHead: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getHead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED - please use com.atproto.sync.getLatestCommit instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'HeadNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetLatestCommit: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getLatestCommit',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get the current commit CID & revision of the repo.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cid', 'rev'],\n            properties: {\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              rev: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get blocks needed for existence or non-existence of record.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'collection', 'rkey'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n            },\n            rkey: {\n              type: 'string',\n            },\n            commit: {\n              type: 'string',\n              format: 'cid',\n              description: 'An optional past commit CID.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets the DID's repo, optionally catching up from a specific revision.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description: 'The revision of the repo to catch up from.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List blob CIDs since some revision.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description: 'Optional revision of the repo to list blobs since.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cids'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              cids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List DIDs and root CIDs of hosted repos.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.sync.listRepos#repo',\n                },\n              },\n            },\n          },\n        },\n      },\n      repo: {\n        type: 'object',\n        required: ['did', 'head', 'rev'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          head: {\n            type: 'string',\n            format: 'cid',\n          },\n          rev: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncNotifyOfUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.sync.notifyOfUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify a crawling service of a recent update; often when a long break between updates causes the connection with the crawling service to break.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the service that is notifying of update.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncRequestCrawl: {\n    lexicon: 1,\n    id: 'com.atproto.sync.requestCrawl',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a service to persistently crawl hosted repos.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the service that is requesting to be crawled.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncSubscribeRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.subscribeRepos',\n    defs: {\n      main: {\n        type: 'subscription',\n        description: 'Subscribe to repo updates.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.sync.subscribeRepos#commit',\n              'lex:com.atproto.sync.subscribeRepos#handle',\n              'lex:com.atproto.sync.subscribeRepos#migrate',\n              'lex:com.atproto.sync.subscribeRepos#tombstone',\n              'lex:com.atproto.sync.subscribeRepos#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n          {\n            name: 'ConsumerTooSlow',\n          },\n        ],\n      },\n      commit: {\n        type: 'object',\n        required: [\n          'seq',\n          'rebase',\n          'tooBig',\n          'repo',\n          'commit',\n          'rev',\n          'since',\n          'blocks',\n          'ops',\n          'blobs',\n          'time',\n        ],\n        nullable: ['prev', 'since'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          rebase: {\n            type: 'boolean',\n          },\n          tooBig: {\n            type: 'boolean',\n          },\n          repo: {\n            type: 'string',\n            format: 'did',\n          },\n          commit: {\n            type: 'cid-link',\n          },\n          prev: {\n            type: 'cid-link',\n          },\n          rev: {\n            type: 'string',\n            description: 'The rev of the emitted commit.',\n          },\n          since: {\n            type: 'string',\n            description: 'The rev of the last emitted commit from this repo.',\n          },\n          blocks: {\n            type: 'bytes',\n            description: 'CAR file containing relevant blocks.',\n            maxLength: 1000000,\n          },\n          ops: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.sync.subscribeRepos#repoOp',\n            },\n            maxLength: 200,\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'cid-link',\n            },\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      handle: {\n        type: 'object',\n        required: ['seq', 'did', 'handle', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      migrate: {\n        type: 'object',\n        required: ['seq', 'did', 'migrateTo', 'time'],\n        nullable: ['migrateTo'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          migrateTo: {\n            type: 'string',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      tombstone: {\n        type: 'object',\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n      repoOp: {\n        type: 'object',\n        description:\n          \"A repo operation, ie a write of a single record. For creates and updates, CID is the record's CID as of this operation. For deletes, it's null.\",\n        required: ['action', 'path', 'cid'],\n        nullable: ['cid'],\n        properties: {\n          action: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          path: {\n            type: 'string',\n          },\n          cid: {\n            type: 'cid-link',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempFetchLabels: {\n    lexicon: 1,\n    id: 'com.atproto.temp.fetchLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Fetch all labels from a labeler created after a certain date.',\n        parameters: {\n          type: 'params',\n          properties: {\n            since: {\n              type: 'integer',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempImportRepo: {\n    lexicon: 1,\n    id: 'com.atproto.temp.importRepo',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Gets the did's repo, optionally catching up from a specific revision.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        input: {\n          encoding: 'application/vnd.ipld.car',\n        },\n        output: {\n          encoding: 'text/plain',\n        },\n      },\n    },\n  },\n  ComAtprotoTempPushBlob: {\n    lexicon: 1,\n    id: 'com.atproto.temp.pushBlob',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Gets the did's repo, optionally catching up from a specific revision.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        input: {\n          encoding: '*/*',\n        },\n      },\n    },\n  },\n  ComAtprotoTempTransferAccount: {\n    lexicon: 1,\n    id: 'com.atproto.temp.transferAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Transfer an account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle', 'did', 'plcOp'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              plcOp: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidHandle',\n          },\n          {\n            name: 'InvalidPassword',\n          },\n          {\n            name: 'InvalidInviteCode',\n          },\n          {\n            name: 'HandleNotAvailable',\n          },\n          {\n            name: 'UnsupportedDomain',\n          },\n          {\n            name: 'UnresolvableDid',\n          },\n          {\n            name: 'IncompatibleDidDoc',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyActorDefs: {\n    lexicon: 1,\n    id: 'app.bsky.actor.defs',\n    description: 'A reference to an actor in the network.',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileView: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileViewDetailed: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n          },\n          banner: {\n            type: 'string',\n          },\n          followersCount: {\n            type: 'integer',\n          },\n          followsCount: {\n            type: 'integer',\n          },\n          postsCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          mutedByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          blockedBy: {\n            type: 'boolean',\n          },\n          blocking: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blockingByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      preferences: {\n        type: 'array',\n        items: {\n          type: 'union',\n          refs: [\n            'lex:app.bsky.actor.defs#adultContentPref',\n            'lex:app.bsky.actor.defs#contentLabelPref',\n            'lex:app.bsky.actor.defs#savedFeedsPref',\n            'lex:app.bsky.actor.defs#personalDetailsPref',\n            'lex:app.bsky.actor.defs#feedViewPref',\n            'lex:app.bsky.actor.defs#threadViewPref',\n          ],\n        },\n      },\n      adultContentPref: {\n        type: 'object',\n        required: ['enabled'],\n        properties: {\n          enabled: {\n            type: 'boolean',\n            default: false,\n          },\n        },\n      },\n      contentLabelPref: {\n        type: 'object',\n        required: ['label', 'visibility'],\n        properties: {\n          label: {\n            type: 'string',\n          },\n          visibility: {\n            type: 'string',\n            knownValues: ['show', 'warn', 'hide'],\n          },\n        },\n      },\n      savedFeedsPref: {\n        type: 'object',\n        required: ['pinned', 'saved'],\n        properties: {\n          pinned: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          saved: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n        },\n      },\n      personalDetailsPref: {\n        type: 'object',\n        properties: {\n          birthDate: {\n            type: 'string',\n            format: 'datetime',\n            description: 'The birth date of account owner.',\n          },\n        },\n      },\n      feedViewPref: {\n        type: 'object',\n        required: ['feed'],\n        properties: {\n          feed: {\n            type: 'string',\n            description:\n              'The URI of the feed, or an identifier which describes the feed.',\n          },\n          hideReplies: {\n            type: 'boolean',\n            description: 'Hide replies in the feed.',\n          },\n          hideRepliesByUnfollowed: {\n            type: 'boolean',\n            description:\n              'Hide replies in the feed if they are not by followed users.',\n          },\n          hideRepliesByLikeCount: {\n            type: 'integer',\n            description:\n              'Hide replies in the feed if they do not have this number of likes.',\n          },\n          hideReposts: {\n            type: 'boolean',\n            description: 'Hide reposts in the feed.',\n          },\n          hideQuotePosts: {\n            type: 'boolean',\n            description: 'Hide quote posts in the feed.',\n          },\n        },\n      },\n      threadViewPref: {\n        type: 'object',\n        properties: {\n          sort: {\n            type: 'string',\n            description: 'Sorting mode for threads.',\n            knownValues: ['oldest', 'newest', 'most-likes', 'random'],\n          },\n          prioritizeFollowedUsers: {\n            type: 'boolean',\n            description: 'Show followed users at the top of all replies.',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getPreferences',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get private preferences attached to the account.',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfile',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile view of an actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfiles: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfiles',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile views of multiple actors.',\n        parameters: {\n          type: 'params',\n          required: ['actors'],\n          properties: {\n            actors: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['profiles'],\n            properties: {\n              profiles: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of suggested actors, used for discovery.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.profile',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a profile.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          properties: {\n            displayName: {\n              type: 'string',\n              maxGraphemes: 64,\n              maxLength: 640,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 256,\n              maxLength: 2560,\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            banner: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Set the private preferences attached to the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActors: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActors',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find actors (profiles) matching search criteria.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActorsTypeahead: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActorsTypeahead',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find actor suggestions for a prefix search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description: 'Search query prefix; not a full query string.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedExternal: {\n    lexicon: 1,\n    id: 'app.bsky.embed.external',\n    description:\n      'A representation of some externally linked content, embedded in another form of content.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#external',\n          },\n        },\n      },\n      external: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#viewExternal',\n          },\n        },\n      },\n      viewExternal: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedImages: {\n    lexicon: 1,\n    id: 'app.bsky.embed.images',\n    description: 'A set of images embedded in some other form of content.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#image',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      image: {\n        type: 'object',\n        required: ['image', 'alt'],\n        properties: {\n          image: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n          alt: {\n            type: 'string',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.images#aspectRatio',\n          },\n        },\n      },\n      aspectRatio: {\n        type: 'object',\n        description:\n          'width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n            minimum: 1,\n          },\n          height: {\n            type: 'integer',\n            minimum: 1,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#viewImage',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      viewImage: {\n        type: 'object',\n        required: ['thumb', 'fullsize', 'alt'],\n        properties: {\n          thumb: {\n            type: 'string',\n          },\n          fullsize: {\n            type: 'string',\n          },\n          alt: {\n            type: 'string',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.images#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecord: {\n    lexicon: 1,\n    id: 'app.bsky.embed.record',\n    description:\n      'A representation of a record embedded in another form of content.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.record#viewRecord',\n              'lex:app.bsky.embed.record#viewNotFound',\n              'lex:app.bsky.embed.record#viewBlocked',\n              'lex:app.bsky.feed.defs#generatorView',\n              'lex:app.bsky.graph.defs#listView',\n            ],\n          },\n        },\n      },\n      viewRecord: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'value', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          value: {\n            type: 'unknown',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          embeds: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images#view',\n                'lex:app.bsky.embed.external#view',\n                'lex:app.bsky.embed.record#view',\n                'lex:app.bsky.embed.recordWithMedia#view',\n              ],\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      viewNotFound: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      viewBlocked: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecordWithMedia: {\n    lexicon: 1,\n    id: 'app.bsky.embed.recordWithMedia',\n    description:\n      'A representation of a record embedded in another form of content, alongside other compatible embeds.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record',\n          },\n          media: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.images', 'lex:app.bsky.embed.external'],\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record#view',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.external#view',\n            ],\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.feed.defs',\n    defs: {\n      postView: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'record', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          record: {\n            type: 'unknown',\n          },\n          embed: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.external#view',\n              'lex:app.bsky.embed.record#view',\n              'lex:app.bsky.embed.recordWithMedia#view',\n            ],\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          threadgate: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#threadgateView',\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          replyDisabled: {\n            type: 'boolean',\n          },\n        },\n      },\n      feedViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          reply: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#replyRef',\n          },\n          reason: {\n            type: 'union',\n            refs: ['lex:app.bsky.feed.defs#reasonRepost'],\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n        },\n      },\n      reasonRepost: {\n        type: 'object',\n        required: ['by', 'indexedAt'],\n        properties: {\n          by: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      threadViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#threadViewPost',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          replies: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.feed.defs#threadViewPost',\n                'lex:app.bsky.feed.defs#notFoundPost',\n                'lex:app.bsky.feed.defs#blockedPost',\n              ],\n            },\n          },\n        },\n      },\n      notFoundPost: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      blockedPost: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      blockedAuthor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n        },\n      },\n      generatorView: {\n        type: 'object',\n        required: ['uri', 'cid', 'did', 'creator', 'displayName', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#generatorViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      generatorViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonFeedPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          reason: {\n            type: 'union',\n            refs: ['lex:app.bsky.feed.defs#skeletonReasonRepost'],\n          },\n        },\n      },\n      skeletonReasonRepost: {\n        type: 'object',\n        required: ['repost'],\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      threadgateView: {\n        type: 'object',\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          lists: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listViewBasic',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDescribeFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.describeFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator, including policies and offered feed URIs.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'feeds'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.describeFeedGenerator#feed',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.describeFeedGenerator#links',\n              },\n            },\n          },\n        },\n      },\n      feed: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.generator',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of the existence of a feed generator.',\n        key: 'any',\n        record: {\n          type: 'object',\n          required: ['did', 'displayName', 'createdAt'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            displayName: {\n              type: 'string',\n              maxGraphemes: 24,\n              maxLength: 240,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of feeds created by the actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of posts liked by an actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetAuthorFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getAuthorFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a view of an actor's feed.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            filter: {\n              type: 'string',\n              knownValues: [\n                'posts_with_replies',\n                'posts_no_replies',\n                'posts_with_media',\n                'posts_and_author_threads',\n              ],\n              default: 'posts_with_replies',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a hydrated feed from an actor's selected feed generator.\",\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a feed generator.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['view', 'isOnline', 'isValid'],\n            properties: {\n              view: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#generatorView',\n              },\n              isOnline: {\n                type: 'boolean',\n              },\n              isValid: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of feed generators.',\n        parameters: {\n          type: 'params',\n          required: ['feeds'],\n          properties: {\n            feeds: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a skeleton of a feed provided by a feed generator.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get the list of likes.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'likes'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              likes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.getLikes#like',\n                },\n              },\n            },\n          },\n        },\n      },\n      like: {\n        type: 'object',\n        required: ['indexedAt', 'createdAt', 'actor'],\n        properties: {\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          actor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetListFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getListFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a view of a recent posts from actors in a list.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownList',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPostThread: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPostThread',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get posts in a thread.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            depth: {\n              type: 'integer',\n              default: 6,\n              minimum: 0,\n              maximum: 1000,\n            },\n            parentHeight: {\n              type: 'integer',\n              default: 80,\n              minimum: 0,\n              maximum: 1000,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['thread'],\n            properties: {\n              thread: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.defs#threadViewPost',\n                  'lex:app.bsky.feed.defs#notFoundPost',\n                  'lex:app.bsky.feed.defs#blockedPost',\n                ],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'NotFound',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a view of an actor's feed.\",\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetRepostedBy: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getRepostedBy',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of reposts.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'repostedBy'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              repostedBy: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetSuggestedFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getSuggestedFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of suggested feeds for the viewer.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetTimeline: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getTimeline',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a view of the actor's home timeline.\",\n        parameters: {\n          type: 'params',\n          properties: {\n            algorithm: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedLike: {\n    lexicon: 1,\n    id: 'app.bsky.feed.like',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a like.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.post',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a post.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['text', 'createdAt'],\n          properties: {\n            text: {\n              type: 'string',\n              maxLength: 3000,\n              maxGraphemes: 300,\n            },\n            entities: {\n              type: 'array',\n              description: 'Deprecated: replaced by app.bsky.richtext.facet.',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.post#entity',\n              },\n            },\n            facets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            reply: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.post#replyRef',\n            },\n            embed: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images',\n                'lex:app.bsky.embed.external',\n                'lex:app.bsky.embed.record',\n                'lex:app.bsky.embed.recordWithMedia',\n              ],\n            },\n            langs: {\n              type: 'array',\n              maxLength: 3,\n              items: {\n                type: 'string',\n                format: 'language',\n              },\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            tags: {\n              type: 'array',\n              maxLength: 8,\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n              description: 'Additional non-inline tags describing this post.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n          parent: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      entity: {\n        type: 'object',\n        description: 'Deprecated: use facets instead.',\n        required: ['index', 'type', 'value'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.post#textSlice',\n          },\n          type: {\n            type: 'string',\n            description: \"Expected values are 'mention' and 'link'.\",\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n      textSlice: {\n        type: 'object',\n        description:\n          'Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.',\n        required: ['start', 'end'],\n        properties: {\n          start: {\n            type: 'integer',\n            minimum: 0,\n          },\n          end: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedRepost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.repost',\n    defs: {\n      main: {\n        description: 'A declaration of a repost.',\n        type: 'record',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedSearchPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.searchPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find posts matching search criteria.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedThreadgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.threadgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          \"Defines interaction gating rules for a thread. The rkey of the threadgate record should match the rkey of the thread's root post.\",\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            post: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            allow: {\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.threadgate#mentionRule',\n                  'lex:app.bsky.feed.threadgate#followingRule',\n                  'lex:app.bsky.feed.threadgate#listRule',\n                ],\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      mentionRule: {\n        type: 'object',\n        description: 'Allow replies from actors mentioned in your post.',\n        properties: {},\n      },\n      followingRule: {\n        type: 'object',\n        description: 'Allow replies from actors you follow.',\n        properties: {},\n      },\n      listRule: {\n        type: 'object',\n        description: 'Allow replies from actors on a list.',\n        required: ['list'],\n        properties: {\n          list: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphBlock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.block',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a block.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphDefs: {\n    lexicon: 1,\n    id: 'app.bsky.graph.defs',\n    defs: {\n      listViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'name', 'purpose'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          avatar: {\n            type: 'string',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'name', 'purpose', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listItemView: {\n        type: 'object',\n        required: ['uri', 'subject'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          subject: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n      listPurpose: {\n        type: 'string',\n        knownValues: [\n          'app.bsky.graph.defs#modlist',\n          'app.bsky.graph.defs#curatelist',\n        ],\n      },\n      modlist: {\n        type: 'token',\n        description:\n          'A list of actors to apply an aggregate moderation action (mute/block) on.',\n      },\n      curatelist: {\n        type: 'token',\n        description:\n          'A list of actors used for curation purposes such as list feeds or interaction gating.',\n      },\n      listViewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          blocked: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphFollow: {\n    lexicon: 1,\n    id: 'app.bsky.graph.follow',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a social follow.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of who the actor is blocking.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blocks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blocks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description: \"Get a list of an actor's followers.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollows: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollows',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of who the actor follows.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'follows'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              follows: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getList',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of actors.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list', 'items'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              list: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#listView',\n              },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listItemView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get lists that the actor is blocking.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get lists that the actor is muting.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetLists: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getLists',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of lists that belong to an actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of who the actor mutes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['mutes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              mutes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetSuggestedFollowsByActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getSuggestedFollowsByActor',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get suggested follows related to a given actor.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.list',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a list of actors.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'purpose', 'createdAt'],\n          properties: {\n            purpose: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listPurpose',\n            },\n            name: {\n              type: 'string',\n              maxLength: 64,\n              minLength: 1,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListblock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listblock',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A block of an entire list of actors.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListitem: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listitem',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'An item under a declared list of actors.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'list', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Mute an actor by DID or handle.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Mute a list of actors.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmute an actor by DID or handle.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmute a list of actors.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationGetUnreadCount: {\n    lexicon: 1,\n    id: 'app.bsky.notification.getUnreadCount',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get the count of unread notifications.',\n        parameters: {\n          type: 'params',\n          properties: {\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['count'],\n            properties: {\n              count: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationListNotifications: {\n    lexicon: 1,\n    id: 'app.bsky.notification.listNotifications',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of notifications.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['notifications'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              notifications: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.notification.listNotifications#notification',\n                },\n              },\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n      notification: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'author',\n          'reason',\n          'record',\n          'isRead',\n          'indexedAt',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          reason: {\n            type: 'string',\n            description:\n              \"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.\",\n            knownValues: [\n              'like',\n              'repost',\n              'follow',\n              'mention',\n              'reply',\n              'quote',\n            ],\n          },\n          reasonSubject: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          record: {\n            type: 'unknown',\n          },\n          isRead: {\n            type: 'boolean',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationRegisterPush: {\n    lexicon: 1,\n    id: 'app.bsky.notification.registerPush',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Register for push notifications with a service.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['serviceDid', 'token', 'platform', 'appId'],\n            properties: {\n              serviceDid: {\n                type: 'string',\n                format: 'did',\n              },\n              token: {\n                type: 'string',\n              },\n              platform: {\n                type: 'string',\n                knownValues: ['ios', 'android', 'web'],\n              },\n              appId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationUpdateSeen: {\n    lexicon: 1,\n    id: 'app.bsky.notification.updateSeen',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Notify server that the user has seen notifications.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['seenAt'],\n            properties: {\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyRichtextFacet: {\n    lexicon: 1,\n    id: 'app.bsky.richtext.facet',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['index', 'features'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.richtext.facet#byteSlice',\n          },\n          features: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.richtext.facet#mention',\n                'lex:app.bsky.richtext.facet#link',\n                'lex:app.bsky.richtext.facet#tag',\n              ],\n            },\n          },\n        },\n      },\n      mention: {\n        type: 'object',\n        description: 'A facet feature for actor mentions.',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      link: {\n        type: 'object',\n        description: 'A facet feature for links.',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      tag: {\n        type: 'object',\n        description: 'A hashtag.',\n        required: ['tag'],\n        properties: {\n          tag: {\n            type: 'string',\n            maxLength: 640,\n            maxGraphemes: 64,\n          },\n        },\n      },\n      byteSlice: {\n        type: 'object',\n        description:\n          'A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings.',\n        required: ['byteStart', 'byteEnd'],\n        properties: {\n          byteStart: {\n            type: 'integer',\n            minimum: 0,\n          },\n          byteEnd: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.defs',\n    defs: {\n      skeletonSearchPost: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonSearchActor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopular: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopular',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: will be removed soon. Use a feed generator alternative.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeNsfw: {\n              type: 'boolean',\n              default: false,\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopularFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopularFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'An unspecced view of globally popular feed generators.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            query: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTimelineSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTimelineSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: a skeleton of a timeline. Unspecced and will be unavailable soon.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchActorsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchActorsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Actors (profile) search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.',\n            },\n            typeahead: {\n              type: 'boolean',\n              description: \"If true, acts as fast/simple 'typeahead' query.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchPostsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchPostsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Posts search, returns only skeleton',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n}\nexport const schemas: LexiconDoc[] = Object.values(schemaDict) as LexiconDoc[]\nexport const lexicons: Lexicons = new Lexicons(schemas)\nexport const ids = {\n  ComAtprotoAdminDefs: 'com.atproto.admin.defs',\n  ComAtprotoAdminDeleteAccount: 'com.atproto.admin.deleteAccount',\n  ComAtprotoAdminDisableAccountInvites:\n    'com.atproto.admin.disableAccountInvites',\n  ComAtprotoAdminDisableInviteCodes: 'com.atproto.admin.disableInviteCodes',\n  ComAtprotoAdminEmitModerationEvent: 'com.atproto.admin.emitModerationEvent',\n  ComAtprotoAdminEnableAccountInvites: 'com.atproto.admin.enableAccountInvites',\n  ComAtprotoAdminGetAccountInfo: 'com.atproto.admin.getAccountInfo',\n  ComAtprotoAdminGetInviteCodes: 'com.atproto.admin.getInviteCodes',\n  ComAtprotoAdminGetModerationEvent: 'com.atproto.admin.getModerationEvent',\n  ComAtprotoAdminGetRecord: 'com.atproto.admin.getRecord',\n  ComAtprotoAdminGetRepo: 'com.atproto.admin.getRepo',\n  ComAtprotoAdminGetSubjectStatus: 'com.atproto.admin.getSubjectStatus',\n  ComAtprotoAdminQueryModerationEvents:\n    'com.atproto.admin.queryModerationEvents',\n  ComAtprotoAdminQueryModerationStatuses:\n    'com.atproto.admin.queryModerationStatuses',\n  ComAtprotoAdminSearchRepos: 'com.atproto.admin.searchRepos',\n  ComAtprotoAdminSendEmail: 'com.atproto.admin.sendEmail',\n  ComAtprotoAdminUpdateAccountEmail: 'com.atproto.admin.updateAccountEmail',\n  ComAtprotoAdminUpdateAccountHandle: 'com.atproto.admin.updateAccountHandle',\n  ComAtprotoAdminUpdateSubjectStatus: 'com.atproto.admin.updateSubjectStatus',\n  ComAtprotoIdentityResolveHandle: 'com.atproto.identity.resolveHandle',\n  ComAtprotoIdentityUpdateHandle: 'com.atproto.identity.updateHandle',\n  ComAtprotoLabelDefs: 'com.atproto.label.defs',\n  ComAtprotoLabelQueryLabels: 'com.atproto.label.queryLabels',\n  ComAtprotoLabelSubscribeLabels: 'com.atproto.label.subscribeLabels',\n  ComAtprotoModerationCreateReport: 'com.atproto.moderation.createReport',\n  ComAtprotoModerationDefs: 'com.atproto.moderation.defs',\n  ComAtprotoRepoApplyWrites: 'com.atproto.repo.applyWrites',\n  ComAtprotoRepoCreateRecord: 'com.atproto.repo.createRecord',\n  ComAtprotoRepoDeleteRecord: 'com.atproto.repo.deleteRecord',\n  ComAtprotoRepoDescribeRepo: 'com.atproto.repo.describeRepo',\n  ComAtprotoRepoGetRecord: 'com.atproto.repo.getRecord',\n  ComAtprotoRepoListRecords: 'com.atproto.repo.listRecords',\n  ComAtprotoRepoPutRecord: 'com.atproto.repo.putRecord',\n  ComAtprotoRepoStrongRef: 'com.atproto.repo.strongRef',\n  ComAtprotoRepoUploadBlob: 'com.atproto.repo.uploadBlob',\n  ComAtprotoServerConfirmEmail: 'com.atproto.server.confirmEmail',\n  ComAtprotoServerCreateAccount: 'com.atproto.server.createAccount',\n  ComAtprotoServerCreateAppPassword: 'com.atproto.server.createAppPassword',\n  ComAtprotoServerCreateInviteCode: 'com.atproto.server.createInviteCode',\n  ComAtprotoServerCreateInviteCodes: 'com.atproto.server.createInviteCodes',\n  ComAtprotoServerCreateSession: 'com.atproto.server.createSession',\n  ComAtprotoServerDefs: 'com.atproto.server.defs',\n  ComAtprotoServerDeleteAccount: 'com.atproto.server.deleteAccount',\n  ComAtprotoServerDeleteSession: 'com.atproto.server.deleteSession',\n  ComAtprotoServerDescribeServer: 'com.atproto.server.describeServer',\n  ComAtprotoServerGetAccountInviteCodes:\n    'com.atproto.server.getAccountInviteCodes',\n  ComAtprotoServerGetSession: 'com.atproto.server.getSession',\n  ComAtprotoServerListAppPasswords: 'com.atproto.server.listAppPasswords',\n  ComAtprotoServerRefreshSession: 'com.atproto.server.refreshSession',\n  ComAtprotoServerRequestAccountDelete:\n    'com.atproto.server.requestAccountDelete',\n  ComAtprotoServerRequestEmailConfirmation:\n    'com.atproto.server.requestEmailConfirmation',\n  ComAtprotoServerRequestEmailUpdate: 'com.atproto.server.requestEmailUpdate',\n  ComAtprotoServerRequestPasswordReset:\n    'com.atproto.server.requestPasswordReset',\n  ComAtprotoServerReserveSigningKey: 'com.atproto.server.reserveSigningKey',\n  ComAtprotoServerResetPassword: 'com.atproto.server.resetPassword',\n  ComAtprotoServerRevokeAppPassword: 'com.atproto.server.revokeAppPassword',\n  ComAtprotoServerUpdateEmail: 'com.atproto.server.updateEmail',\n  ComAtprotoSyncGetBlob: 'com.atproto.sync.getBlob',\n  ComAtprotoSyncGetBlocks: 'com.atproto.sync.getBlocks',\n  ComAtprotoSyncGetCheckout: 'com.atproto.sync.getCheckout',\n  ComAtprotoSyncGetHead: 'com.atproto.sync.getHead',\n  ComAtprotoSyncGetLatestCommit: 'com.atproto.sync.getLatestCommit',\n  ComAtprotoSyncGetRecord: 'com.atproto.sync.getRecord',\n  ComAtprotoSyncGetRepo: 'com.atproto.sync.getRepo',\n  ComAtprotoSyncListBlobs: 'com.atproto.sync.listBlobs',\n  ComAtprotoSyncListRepos: 'com.atproto.sync.listRepos',\n  ComAtprotoSyncNotifyOfUpdate: 'com.atproto.sync.notifyOfUpdate',\n  ComAtprotoSyncRequestCrawl: 'com.atproto.sync.requestCrawl',\n  ComAtprotoSyncSubscribeRepos: 'com.atproto.sync.subscribeRepos',\n  ComAtprotoTempFetchLabels: 'com.atproto.temp.fetchLabels',\n  ComAtprotoTempImportRepo: 'com.atproto.temp.importRepo',\n  ComAtprotoTempPushBlob: 'com.atproto.temp.pushBlob',\n  ComAtprotoTempTransferAccount: 'com.atproto.temp.transferAccount',\n  AppBskyActorDefs: 'app.bsky.actor.defs',\n  AppBskyActorGetPreferences: 'app.bsky.actor.getPreferences',\n  AppBskyActorGetProfile: 'app.bsky.actor.getProfile',\n  AppBskyActorGetProfiles: 'app.bsky.actor.getProfiles',\n  AppBskyActorGetSuggestions: 'app.bsky.actor.getSuggestions',\n  AppBskyActorProfile: 'app.bsky.actor.profile',\n  AppBskyActorPutPreferences: 'app.bsky.actor.putPreferences',\n  AppBskyActorSearchActors: 'app.bsky.actor.searchActors',\n  AppBskyActorSearchActorsTypeahead: 'app.bsky.actor.searchActorsTypeahead',\n  AppBskyEmbedExternal: 'app.bsky.embed.external',\n  AppBskyEmbedImages: 'app.bsky.embed.images',\n  AppBskyEmbedRecord: 'app.bsky.embed.record',\n  AppBskyEmbedRecordWithMedia: 'app.bsky.embed.recordWithMedia',\n  AppBskyFeedDefs: 'app.bsky.feed.defs',\n  AppBskyFeedDescribeFeedGenerator: 'app.bsky.feed.describeFeedGenerator',\n  AppBskyFeedGenerator: 'app.bsky.feed.generator',\n  AppBskyFeedGetActorFeeds: 'app.bsky.feed.getActorFeeds',\n  AppBskyFeedGetActorLikes: 'app.bsky.feed.getActorLikes',\n  AppBskyFeedGetAuthorFeed: 'app.bsky.feed.getAuthorFeed',\n  AppBskyFeedGetFeed: 'app.bsky.feed.getFeed',\n  AppBskyFeedGetFeedGenerator: 'app.bsky.feed.getFeedGenerator',\n  AppBskyFeedGetFeedGenerators: 'app.bsky.feed.getFeedGenerators',\n  AppBskyFeedGetFeedSkeleton: 'app.bsky.feed.getFeedSkeleton',\n  AppBskyFeedGetLikes: 'app.bsky.feed.getLikes',\n  AppBskyFeedGetListFeed: 'app.bsky.feed.getListFeed',\n  AppBskyFeedGetPostThread: 'app.bsky.feed.getPostThread',\n  AppBskyFeedGetPosts: 'app.bsky.feed.getPosts',\n  AppBskyFeedGetRepostedBy: 'app.bsky.feed.getRepostedBy',\n  AppBskyFeedGetSuggestedFeeds: 'app.bsky.feed.getSuggestedFeeds',\n  AppBskyFeedGetTimeline: 'app.bsky.feed.getTimeline',\n  AppBskyFeedLike: 'app.bsky.feed.like',\n  AppBskyFeedPost: 'app.bsky.feed.post',\n  AppBskyFeedRepost: 'app.bsky.feed.repost',\n  AppBskyFeedSearchPosts: 'app.bsky.feed.searchPosts',\n  AppBskyFeedThreadgate: 'app.bsky.feed.threadgate',\n  AppBskyGraphBlock: 'app.bsky.graph.block',\n  AppBskyGraphDefs: 'app.bsky.graph.defs',\n  AppBskyGraphFollow: 'app.bsky.graph.follow',\n  AppBskyGraphGetBlocks: 'app.bsky.graph.getBlocks',\n  AppBskyGraphGetFollowers: 'app.bsky.graph.getFollowers',\n  AppBskyGraphGetFollows: 'app.bsky.graph.getFollows',\n  AppBskyGraphGetList: 'app.bsky.graph.getList',\n  AppBskyGraphGetListBlocks: 'app.bsky.graph.getListBlocks',\n  AppBskyGraphGetListMutes: 'app.bsky.graph.getListMutes',\n  AppBskyGraphGetLists: 'app.bsky.graph.getLists',\n  AppBskyGraphGetMutes: 'app.bsky.graph.getMutes',\n  AppBskyGraphGetSuggestedFollowsByActor:\n    'app.bsky.graph.getSuggestedFollowsByActor',\n  AppBskyGraphList: 'app.bsky.graph.list',\n  AppBskyGraphListblock: 'app.bsky.graph.listblock',\n  AppBskyGraphListitem: 'app.bsky.graph.listitem',\n  AppBskyGraphMuteActor: 'app.bsky.graph.muteActor',\n  AppBskyGraphMuteActorList: 'app.bsky.graph.muteActorList',\n  AppBskyGraphUnmuteActor: 'app.bsky.graph.unmuteActor',\n  AppBskyGraphUnmuteActorList: 'app.bsky.graph.unmuteActorList',\n  AppBskyNotificationGetUnreadCount: 'app.bsky.notification.getUnreadCount',\n  AppBskyNotificationListNotifications:\n    'app.bsky.notification.listNotifications',\n  AppBskyNotificationRegisterPush: 'app.bsky.notification.registerPush',\n  AppBskyNotificationUpdateSeen: 'app.bsky.notification.updateSeen',\n  AppBskyRichtextFacet: 'app.bsky.richtext.facet',\n  AppBskyUnspeccedDefs: 'app.bsky.unspecced.defs',\n  AppBskyUnspeccedGetPopular: 'app.bsky.unspecced.getPopular',\n  AppBskyUnspeccedGetPopularFeedGenerators:\n    'app.bsky.unspecced.getPopularFeedGenerators',\n  AppBskyUnspeccedGetTimelineSkeleton: 'app.bsky.unspecced.getTimelineSkeleton',\n  AppBskyUnspeccedSearchActorsSkeleton:\n    'app.bsky.unspecced.searchActorsSkeleton',\n  AppBskyUnspeccedSearchPostsSkeleton: 'app.bsky.unspecced.searchPostsSkeleton',\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for disabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codes?: string[]\n  accounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  event:\n    | ComAtprotoAdminDefs.ModEventTakedown\n    | ComAtprotoAdminDefs.ModEventAcknowledge\n    | ComAtprotoAdminDefs.ModEventEscalate\n    | ComAtprotoAdminDefs.ModEventComment\n    | ComAtprotoAdminDefs.ModEventLabel\n    | ComAtprotoAdminDefs.ModEventReport\n    | ComAtprotoAdminDefs.ModEventMute\n    | ComAtprotoAdminDefs.ModEventReverseTakedown\n    | ComAtprotoAdminDefs.ModEventUnmute\n    | ComAtprotoAdminDefs.ModEventEmail\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  createdBy: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ComAtprotoAdminDefs.ModEventView\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class SubjectHasActionError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SubjectHasAction') return new SubjectHasActionError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for enabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.AccountView\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from '../server/defs'\n\nexport interface QueryParams {\n  sort?: 'recent' | 'usage' | (string & {})\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  id: number\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.ModEventViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.RecordViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.RepoViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {\n  did?: string\n  uri?: string\n  blob?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  /** The types of events (fully qualified string in the format of com.atproto.admin#modEvent<name>) to filter by. If not specified, all events are returned. */\n  types?: string[]\n  createdBy?: string\n  /** Sort direction for the events. Defaults to descending order of created at timestamp. */\n  sortDirection?: 'asc' | 'desc'\n  subject?: string\n  /** If true, events on all record types (posts, lists, profile etc.) owned by the did are returned */\n  includeAllUserRecords?: boolean\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  events: ComAtprotoAdminDefs.ModEventView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  subject?: string\n  /** Search subjects by keyword from comments */\n  comment?: string\n  /** Search subjects reported after a given timestamp */\n  reportedAfter?: string\n  /** Search subjects reported before a given timestamp */\n  reportedBefore?: string\n  /** Search subjects reviewed after a given timestamp */\n  reviewedAfter?: string\n  /** Search subjects reviewed before a given timestamp */\n  reviewedBefore?: string\n  /** By default, we don't include muted subjects in the results. Set this to true to include them. */\n  includeMuted?: boolean\n  /** Specify when fetching subjects in a certain state */\n  reviewState?: string\n  ignoreSubjects?: string[]\n  /** Get all subject statuses that were reviewed by a specific moderator */\n  lastReviewedBy?: string\n  sortField?: 'lastReviewedAt' | 'lastReportedAt'\n  sortDirection?: 'asc' | 'desc'\n  /** Get subjects that were taken down */\n  takendown?: boolean\n  /** Get subjects in unresolved appealed status */\n  appealed?: boolean\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  subjectStatuses: ComAtprotoAdminDefs.SubjectStatusView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead */\n  term?: string\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: ComAtprotoAdminDefs.RepoView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  recipientDid: string\n  content: string\n  subject?: string\n  senderDid: string\n  /** Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  sent: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  account: string\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle to resolve. */\n  handle: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface QueryParams {\n  /** List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI. */\n  uriPatterns: string[]\n  /** Optional list of label sources (DIDs) to filter on. */\n  sources?: string[]\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoModerationDefs from './defs'\nimport * as ComAtprotoAdminDefs from '../admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  reportedBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** Flag for validating the records. */\n  validate?: boolean\n  writes: (Create | Update | Delete)[]\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n\n/** Create a new record. */\nexport interface Create {\n  collection: string\n  rkey?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isCreate(v: unknown): v is Create {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#create'\n  )\n}\n\nexport function validateCreate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#create', v)\n}\n\n/** Update an existing record. */\nexport interface Update {\n  collection: string\n  rkey: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isUpdate(v: unknown): v is Update {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#update'\n  )\n}\n\nexport function validateUpdate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#update', v)\n}\n\n/** Delete an existing record. */\nexport interface Delete {\n  collection: string\n  rkey: string\n  [k: string]: unknown\n}\n\nexport function isDelete(v: unknown): v is Delete {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#delete'\n  )\n}\n\nexport function validateDelete(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#delete', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nexport function isObj(v: unknown): v is Record<string, unknown> {\n  return typeof v === 'object' && v !== null\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey?: string\n  /** Flag for validating the record. */\n  validate?: boolean\n  /** The record to create. */\n  record: {}\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey: string\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  didDoc: {}\n  collections: string[]\n  handleIsCorrect: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey: string\n  /** The CID of the version of the record. If not specified, then return the most recent version. */\n  cid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record type. */\n  collection: string\n  /** The number of records to return. */\n  limit?: number\n  cursor?: string\n  /** DEPRECATED: The lowest sort-ordered rkey to start from (exclusive) */\n  rkeyStart?: string\n  /** DEPRECATED: The highest sort-ordered rkey to stop at (exclusive) */\n  rkeyEnd?: string\n  /** Flag to reverse the order of the returned records. */\n  reverse?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  records: Record[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Record {\n  uri: string\n  cid: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.listRecords#record'\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.listRecords#record', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The key of the record. */\n  rkey: string\n  /** Flag for validating the record. */\n  validate?: boolean\n  /** The record to write. */\n  record: {}\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string | null\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array\n\nexport interface OutputSchema {\n  blob: BlobRef\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: string\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class AccountNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidEmailError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountNotFound') return new AccountNotFoundError(e)\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'InvalidEmail') return new InvalidEmailError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email?: string\n  handle: string\n  did?: string\n  inviteCode?: string\n  password?: string\n  recoveryKey?: string\n  plcOp?: {}\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidHandleError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidPasswordError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidInviteCodeError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class HandleNotAvailableError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnsupportedDomainError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnresolvableDidError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class IncompatibleDidDocError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidHandle') return new InvalidHandleError(e)\n    if (e.error === 'InvalidPassword') return new InvalidPasswordError(e)\n    if (e.error === 'InvalidInviteCode') return new InvalidInviteCodeError(e)\n    if (e.error === 'HandleNotAvailable') return new HandleNotAvailableError(e)\n    if (e.error === 'UnsupportedDomain') return new UnsupportedDomainError(e)\n    if (e.error === 'UnresolvableDid') return new UnresolvableDidError(e)\n    if (e.error === 'IncompatibleDidDoc') return new IncompatibleDidDocError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = AppPassword\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  password: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createAppPassword#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createAppPassword#appPassword',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  useCount: number\n  forAccount?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  code: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codeCount: number\n  useCount: number\n  forAccounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  codes: AccountCodes[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface AccountCodes {\n  account: string\n  codes: string[]\n  [k: string]: unknown\n}\n\nexport function isAccountCodes(v: unknown): v is AccountCodes {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createInviteCodes#accountCodes'\n  )\n}\n\nexport function validateAccountCodes(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createInviteCodes#accountCodes',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Handle or other identifier supported by the server for the authenticating user. */\n  identifier: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  email?: string\n  emailConfirmed?: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  inviteCodeRequired?: boolean\n  availableUserDomains: string[]\n  links?: Links\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.describeServer#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.describeServer#links', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from './defs'\n\nexport interface QueryParams {\n  includeUsed?: boolean\n  createAvailable?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class DuplicateCreateError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateCreate') return new DuplicateCreateError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  email?: string\n  emailConfirmed?: boolean\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  passwords: AppPassword[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.listAppPasswords#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.listAppPasswords#appPassword', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  tokenRequired: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The did to reserve a new did:key for */\n  did?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  /** Public signing key in the form of a did:key. */\n  signingKey: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  token: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  /** Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed. */\n  token?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class TokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'TokenRequired') return new TokenRequiredError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The CID of the blob to fetch */\n  cid: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  cids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  root: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class HeadNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'HeadNotFound') return new HeadNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cid: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  collection: string\n  rkey: string\n  /** An optional past commit CID. */\n  commit?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The revision of the repo to catch up from. */\n  since?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** Optional revision of the repo to list blobs since. */\n  since?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  cids: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Repo {\n  did: string\n  head: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport function isRepo(v: unknown): v is Repo {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.listRepos#repo'\n  )\n}\n\nexport function validateRepo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.listRepos#repo', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the service that is notifying of update. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the service that is requesting to be crawled. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../label/defs'\n\nexport interface QueryParams {\n  since?: number\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = string | Uint8Array\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/vnd.ipld.car'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = string | Uint8Array\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: string\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  handle: string\n  did: string\n  plcOp: {}\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidHandleError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidPasswordError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidInviteCodeError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class HandleNotAvailableError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnsupportedDomainError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnresolvableDidError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class IncompatibleDidDocError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidHandle') return new InvalidHandleError(e)\n    if (e.error === 'InvalidPassword') return new InvalidPasswordError(e)\n    if (e.error === 'InvalidInviteCode') return new InvalidInviteCodeError(e)\n    if (e.error === 'HandleNotAvailable') return new HandleNotAvailableError(e)\n    if (e.error === 'UnsupportedDomain') return new UnsupportedDomainError(e)\n    if (e.error === 'UnresolvableDid') return new UnresolvableDidError(e)\n    if (e.error === 'IncompatibleDidDoc') return new IncompatibleDidDocError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = AppBskyActorDefs.ProfileViewDetailed\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  actors: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  profiles: AppBskyActorDefs.ProfileViewDetailed[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query prefix; not a full query string. */\n  q?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actors: AppBskyActorDefs.ProfileViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  feeds: Feed[]\n  links?: Links\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Feed {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isFeed(v: unknown): v is Feed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#feed'\n  )\n}\n\nexport function validateFeed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#feed', v)\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#links', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n  filter?:\n    | 'posts_with_replies'\n    | 'posts_no_replies'\n    | 'posts_with_media'\n    | 'posts_and_author_threads'\n    | (string & {})\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  view: AppBskyFeedDefs.GeneratorView\n  isOnline: boolean\n  isValid: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feeds: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  likes: Like[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Like {\n  indexedAt: string\n  createdAt: string\n  actor: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isLike(v: unknown): v is Like {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.getLikes#like'\n  )\n}\n\nexport function validateLike(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.getLikes#like', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownListError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownList') return new UnknownListError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  uri: string\n  depth?: number\n  parentHeight?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  thread:\n    | AppBskyFeedDefs.ThreadViewPost\n    | AppBskyFeedDefs.NotFoundPost\n    | AppBskyFeedDefs.BlockedPost\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class NotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'NotFound') return new NotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  repostedBy: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  algorithm?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blocks: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  follows: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  list: AppBskyGraphDefs.ListView\n  items: AppBskyGraphDefs.ListItemView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  mutes: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  count: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  notifications: Notification[]\n  seenAt?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Notification {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileView\n  /** Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'. */\n  reason:\n    | 'like'\n    | 'repost'\n    | 'follow'\n    | 'mention'\n    | 'reply'\n    | 'quote'\n    | (string & {})\n  reasonSubject?: string\n  record: {}\n  isRead: boolean\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isNotification(v: unknown): v is Notification {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.notification.listNotifications#notification'\n  )\n}\n\nexport function validateNotification(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.notification.listNotifications#notification',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  serviceDid: string\n  token: string\n  platform: 'ios' | 'android' | 'web' | (string & {})\n  appId: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  seenAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  includeNsfw?: boolean\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  query?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax. */\n  q: string\n  /** If true, acts as fast/simple 'typeahead' query. */\n  typeahead?: boolean\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyUnspeccedDefs.SkeletonSearchPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\nimport * as ComAtprotoModerationDefs from '../moderation/defs'\nimport * as ComAtprotoServerDefs from '../server/defs'\nimport * as ComAtprotoLabelDefs from '../label/defs'\n\nexport interface StatusAttr {\n  applied: boolean\n  ref?: string\n  [k: string]: unknown\n}\n\nexport function isStatusAttr(v: unknown): v is StatusAttr {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#statusAttr'\n  )\n}\n\nexport function validateStatusAttr(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#statusAttr', v)\n}\n\nexport interface ModEventView {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventEmail\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids: string[]\n  createdBy: string\n  createdAt: string\n  creatorHandle?: string\n  subjectHandle?: string\n  [k: string]: unknown\n}\n\nexport function isModEventView(v: unknown): v is ModEventView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventView'\n  )\n}\n\nexport function validateModEventView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventView', v)\n}\n\nexport interface ModEventViewDetail {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventResolveAppeal\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | RepoView\n    | RepoViewNotFound\n    | RecordView\n    | RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  subjectBlobs: BlobView[]\n  createdBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isModEventViewDetail(v: unknown): v is ModEventViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventViewDetail'\n  )\n}\n\nexport function validateModEventViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventViewDetail', v)\n}\n\nexport interface ReportView {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  comment?: string\n  subjectRepoHandle?: string\n  subject:\n    | RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  reportedBy: string\n  createdAt: string\n  resolvedByActionIds: number[]\n  [k: string]: unknown\n}\n\nexport function isReportView(v: unknown): v is ReportView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#reportView'\n  )\n}\n\nexport function validateReportView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#reportView', v)\n}\n\nexport interface SubjectStatusView {\n  id: number\n  subject:\n    | RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  subjectRepoHandle?: string\n  /** Timestamp referencing when the last update was made to the moderation status of the subject */\n  updatedAt: string\n  /** Timestamp referencing the first moderation status impacting event was emitted on the subject */\n  createdAt: string\n  reviewState: SubjectReviewState\n  /** Sticky comment on the subject. */\n  comment?: string\n  muteUntil?: string\n  lastReviewedBy?: string\n  lastReviewedAt?: string\n  lastReportedAt?: string\n  /** Timestamp referencing when the author of the subject appealed a moderation action */\n  lastAppealedAt?: string\n  takendown?: boolean\n  /** True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators. */\n  appealed?: boolean\n  suspendUntil?: string\n  [k: string]: unknown\n}\n\nexport function isSubjectStatusView(v: unknown): v is SubjectStatusView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#subjectStatusView'\n  )\n}\n\nexport function validateSubjectStatusView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#subjectStatusView', v)\n}\n\nexport interface ReportViewDetail {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  comment?: string\n  subject:\n    | RepoView\n    | RepoViewNotFound\n    | RecordView\n    | RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  subjectStatus?: SubjectStatusView\n  reportedBy: string\n  createdAt: string\n  resolvedByActions: ModEventView[]\n  [k: string]: unknown\n}\n\nexport function isReportViewDetail(v: unknown): v is ReportViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#reportViewDetail'\n  )\n}\n\nexport function validateReportViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#reportViewDetail', v)\n}\n\nexport interface RepoView {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: Moderation\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invitesDisabled?: boolean\n  inviteNote?: string\n  [k: string]: unknown\n}\n\nexport function isRepoView(v: unknown): v is RepoView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoView'\n  )\n}\n\nexport function validateRepoView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoView', v)\n}\n\nexport interface RepoViewDetail {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: ModerationDetail\n  labels?: ComAtprotoLabelDefs.Label[]\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  inviteNote?: string\n  emailConfirmedAt?: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewDetail(v: unknown): v is RepoViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoViewDetail'\n  )\n}\n\nexport function validateRepoViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoViewDetail', v)\n}\n\nexport interface AccountView {\n  did: string\n  handle: string\n  email?: string\n  indexedAt: string\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  emailConfirmedAt?: string\n  inviteNote?: string\n  [k: string]: unknown\n}\n\nexport function isAccountView(v: unknown): v is AccountView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#accountView'\n  )\n}\n\nexport function validateAccountView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#accountView', v)\n}\n\nexport interface RepoViewNotFound {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewNotFound(v: unknown): v is RepoViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoViewNotFound'\n  )\n}\n\nexport function validateRepoViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoViewNotFound', v)\n}\n\nexport interface RepoRef {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoRef(v: unknown): v is RepoRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoRef'\n  )\n}\n\nexport function validateRepoRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoRef', v)\n}\n\nexport interface RepoBlobRef {\n  did: string\n  cid: string\n  recordUri?: string\n  [k: string]: unknown\n}\n\nexport function isRepoBlobRef(v: unknown): v is RepoBlobRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoBlobRef'\n  )\n}\n\nexport function validateRepoBlobRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoBlobRef', v)\n}\n\nexport interface RecordView {\n  uri: string\n  cid: string\n  value: {}\n  blobCids: string[]\n  indexedAt: string\n  moderation: Moderation\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordView(v: unknown): v is RecordView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#recordView'\n  )\n}\n\nexport function validateRecordView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#recordView', v)\n}\n\nexport interface RecordViewDetail {\n  uri: string\n  cid: string\n  value: {}\n  blobs: BlobView[]\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  moderation: ModerationDetail\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordViewDetail(v: unknown): v is RecordViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#recordViewDetail'\n  )\n}\n\nexport function validateRecordViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#recordViewDetail', v)\n}\n\nexport interface RecordViewNotFound {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isRecordViewNotFound(v: unknown): v is RecordViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#recordViewNotFound'\n  )\n}\n\nexport function validateRecordViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#recordViewNotFound', v)\n}\n\nexport interface Moderation {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModeration(v: unknown): v is Moderation {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#moderation'\n  )\n}\n\nexport function validateModeration(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#moderation', v)\n}\n\nexport interface ModerationDetail {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModerationDetail(v: unknown): v is ModerationDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#moderationDetail'\n  )\n}\n\nexport function validateModerationDetail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#moderationDetail', v)\n}\n\nexport interface BlobView {\n  cid: string\n  mimeType: string\n  size: number\n  createdAt: string\n  details?:\n    | ImageDetails\n    | VideoDetails\n    | { $type: string; [k: string]: unknown }\n  moderation?: Moderation\n  [k: string]: unknown\n}\n\nexport function isBlobView(v: unknown): v is BlobView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#blobView'\n  )\n}\n\nexport function validateBlobView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#blobView', v)\n}\n\nexport interface ImageDetails {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isImageDetails(v: unknown): v is ImageDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#imageDetails'\n  )\n}\n\nexport function validateImageDetails(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#imageDetails', v)\n}\n\nexport interface VideoDetails {\n  width: number\n  height: number\n  length: number\n  [k: string]: unknown\n}\n\nexport function isVideoDetails(v: unknown): v is VideoDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#videoDetails'\n  )\n}\n\nexport function validateVideoDetails(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#videoDetails', v)\n}\n\nexport type SubjectReviewState =\n  | 'lex:com.atproto.admin.defs#reviewOpen'\n  | 'lex:com.atproto.admin.defs#reviewEscalated'\n  | 'lex:com.atproto.admin.defs#reviewClosed'\n  | (string & {})\n\n/** Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator */\nexport const REVIEWOPEN = 'com.atproto.admin.defs#reviewOpen'\n/** Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator */\nexport const REVIEWESCALATED = 'com.atproto.admin.defs#reviewEscalated'\n/** Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator */\nexport const REVIEWCLOSED = 'com.atproto.admin.defs#reviewClosed'\n\n/** Take down a subject permanently or temporarily */\nexport interface ModEventTakedown {\n  comment?: string\n  /** Indicates how long the takedown should be in effect before automatically expiring. */\n  durationInHours?: number\n  [k: string]: unknown\n}\n\nexport function isModEventTakedown(v: unknown): v is ModEventTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventTakedown'\n  )\n}\n\nexport function validateModEventTakedown(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventTakedown', v)\n}\n\n/** Revert take down action on a subject */\nexport interface ModEventReverseTakedown {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventReverseTakedown(\n  v: unknown,\n): v is ModEventReverseTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventReverseTakedown'\n  )\n}\n\nexport function validateModEventReverseTakedown(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventReverseTakedown', v)\n}\n\n/** Resolve appeal on a subject */\nexport interface ModEventResolveAppeal {\n  /** Describe resolution. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventResolveAppeal(\n  v: unknown,\n): v is ModEventResolveAppeal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventResolveAppeal'\n  )\n}\n\nexport function validateModEventResolveAppeal(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventResolveAppeal', v)\n}\n\n/** Add a comment to a subject */\nexport interface ModEventComment {\n  comment: string\n  /** Make the comment persistent on the subject */\n  sticky?: boolean\n  [k: string]: unknown\n}\n\nexport function isModEventComment(v: unknown): v is ModEventComment {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventComment'\n  )\n}\n\nexport function validateModEventComment(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventComment', v)\n}\n\n/** Report a subject */\nexport interface ModEventReport {\n  comment?: string\n  reportType: ComAtprotoModerationDefs.ReasonType\n  [k: string]: unknown\n}\n\nexport function isModEventReport(v: unknown): v is ModEventReport {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventReport'\n  )\n}\n\nexport function validateModEventReport(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventReport', v)\n}\n\n/** Apply/Negate labels on a subject */\nexport interface ModEventLabel {\n  comment?: string\n  createLabelVals: string[]\n  negateLabelVals: string[]\n  [k: string]: unknown\n}\n\nexport function isModEventLabel(v: unknown): v is ModEventLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventLabel'\n  )\n}\n\nexport function validateModEventLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventLabel', v)\n}\n\nexport interface ModEventAcknowledge {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventAcknowledge(v: unknown): v is ModEventAcknowledge {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventAcknowledge'\n  )\n}\n\nexport function validateModEventAcknowledge(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventAcknowledge', v)\n}\n\nexport interface ModEventEscalate {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEscalate(v: unknown): v is ModEventEscalate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventEscalate'\n  )\n}\n\nexport function validateModEventEscalate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventEscalate', v)\n}\n\n/** Mute incoming reports on a subject */\nexport interface ModEventMute {\n  comment?: string\n  /** Indicates how long the subject should remain muted. */\n  durationInHours: number\n  [k: string]: unknown\n}\n\nexport function isModEventMute(v: unknown): v is ModEventMute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventMute'\n  )\n}\n\nexport function validateModEventMute(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventMute', v)\n}\n\n/** Unmute action on a subject */\nexport interface ModEventUnmute {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventUnmute(v: unknown): v is ModEventUnmute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventUnmute'\n  )\n}\n\nexport function validateModEventUnmute(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventUnmute', v)\n}\n\n/** Keep a log of outgoing email to a user */\nexport interface ModEventEmail {\n  /** The subject line of the email sent to the user. */\n  subjectLine: string\n  /** Additional comment about the outgoing comm. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEmail(v: unknown): v is ModEventEmail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#modEventEmail'\n  )\n}\n\nexport function validateModEventEmail(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#modEventEmail', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Metadata tag on an atproto resource (eg, repo or record). */\nexport interface Label {\n  /** DID of the actor who created this label. */\n  src: string\n  /** AT URI of the record, repository (account), or other resource that this label applies to. */\n  uri: string\n  /** Optionally, CID specifying the specific version of 'uri' resource this label applies to. */\n  cid?: string\n  /** The short string name of the value or type of this label. */\n  val: string\n  /** If true, this is a negation label, overwriting a previous label. */\n  neg?: boolean\n  /** Timestamp when this label was created. */\n  cts: string\n  [k: string]: unknown\n}\n\nexport function isLabel(v: unknown): v is Label {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#label'\n  )\n}\n\nexport function validateLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#label', v)\n}\n\n/** Metadata tags on an atproto record, published by the author within the record. */\nexport interface SelfLabels {\n  values: SelfLabel[]\n  [k: string]: unknown\n}\n\nexport function isSelfLabels(v: unknown): v is SelfLabels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabels'\n  )\n}\n\nexport function validateSelfLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabels', v)\n}\n\n/** Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel. */\nexport interface SelfLabel {\n  /** The short string name of the value or type of this label. */\n  val: string\n  [k: string]: unknown\n}\n\nexport function isSelfLabel(v: unknown): v is SelfLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabel'\n  )\n}\n\nexport function validateSelfLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabel', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface Labels {\n  seq: number\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabels(v: unknown): v is Labels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#labels'\n  )\n}\n\nexport function validateLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#labels', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#info', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport type ReasonType =\n  | 'com.atproto.moderation.defs#reasonSpam'\n  | 'com.atproto.moderation.defs#reasonViolation'\n  | 'com.atproto.moderation.defs#reasonMisleading'\n  | 'com.atproto.moderation.defs#reasonSexual'\n  | 'com.atproto.moderation.defs#reasonRude'\n  | 'com.atproto.moderation.defs#reasonOther'\n  | 'com.atproto.moderation.defs#reasonAppeal'\n  | (string & {})\n\n/** Spam: frequent unwanted promotion, replies, mentions */\nexport const REASONSPAM = 'com.atproto.moderation.defs#reasonSpam'\n/** Direct violation of server rules, laws, terms of service */\nexport const REASONVIOLATION = 'com.atproto.moderation.defs#reasonViolation'\n/** Misleading identity, affiliation, or content */\nexport const REASONMISLEADING = 'com.atproto.moderation.defs#reasonMisleading'\n/** Unwanted or mislabeled sexual content */\nexport const REASONSEXUAL = 'com.atproto.moderation.defs#reasonSexual'\n/** Rude, harassing, explicit, or otherwise unwelcoming behavior */\nexport const REASONRUDE = 'com.atproto.moderation.defs#reasonRude'\n/** Other: reports not falling under another report category */\nexport const REASONOTHER = 'com.atproto.moderation.defs#reasonOther'\n/** Appeal: appeal a previously taken moderation action */\nexport const REASONAPPEAL = 'com.atproto.moderation.defs#reasonAppeal'\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'com.atproto.repo.strongRef#main' ||\n      v.$type === 'com.atproto.repo.strongRef')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.strongRef#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface InviteCode {\n  code: string\n  available: number\n  disabled: boolean\n  forAccount: string\n  createdBy: string\n  createdAt: string\n  uses: InviteCodeUse[]\n  [k: string]: unknown\n}\n\nexport function isInviteCode(v: unknown): v is InviteCode {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCode'\n  )\n}\n\nexport function validateInviteCode(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCode', v)\n}\n\nexport interface InviteCodeUse {\n  usedBy: string\n  usedAt: string\n  [k: string]: unknown\n}\n\nexport function isInviteCodeUse(v: unknown): v is InviteCodeUse {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCodeUse'\n  )\n}\n\nexport function validateInviteCodeUse(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCodeUse', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Commit {\n  seq: number\n  rebase: boolean\n  tooBig: boolean\n  repo: string\n  commit: CID\n  prev?: CID | null\n  /** The rev of the emitted commit. */\n  rev: string\n  /** The rev of the last emitted commit from this repo. */\n  since: string | null\n  /** CAR file containing relevant blocks. */\n  blocks: Uint8Array\n  ops: RepoOp[]\n  blobs: CID[]\n  time: string\n  [k: string]: unknown\n}\n\nexport function isCommit(v: unknown): v is Commit {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#commit'\n  )\n}\n\nexport function validateCommit(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#commit', v)\n}\n\nexport interface Handle {\n  seq: number\n  did: string\n  handle: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isHandle(v: unknown): v is Handle {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#handle'\n  )\n}\n\nexport function validateHandle(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#handle', v)\n}\n\nexport interface Migrate {\n  seq: number\n  did: string\n  migrateTo: string | null\n  time: string\n  [k: string]: unknown\n}\n\nexport function isMigrate(v: unknown): v is Migrate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#migrate'\n  )\n}\n\nexport function validateMigrate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#migrate', v)\n}\n\nexport interface Tombstone {\n  seq: number\n  did: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isTombstone(v: unknown): v is Tombstone {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#tombstone'\n  )\n}\n\nexport function validateTombstone(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#tombstone', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#info', v)\n}\n\n/** A repo operation, ie a write of a single record. For creates and updates, CID is the record's CID as of this operation. For deletes, it's null. */\nexport interface RepoOp {\n  action: 'create' | 'update' | 'delete' | (string & {})\n  path: string\n  cid: CID | null\n  [k: string]: unknown\n}\n\nexport function isRepoOp(v: unknown): v is RepoOp {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#repoOp'\n  )\n}\n\nexport function validateRepoOp(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#repoOp', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface ProfileViewBasic {\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileViewBasic(v: unknown): v is ProfileViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewBasic'\n  )\n}\n\nexport function validateProfileViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewBasic', v)\n}\n\nexport interface ProfileView {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  indexedAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileView(v: unknown): v is ProfileView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileView'\n  )\n}\n\nexport function validateProfileView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileView', v)\n}\n\nexport interface ProfileViewDetailed {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  banner?: string\n  followersCount?: number\n  followsCount?: number\n  postsCount?: number\n  indexedAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileViewDetailed(v: unknown): v is ProfileViewDetailed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewDetailed'\n  )\n}\n\nexport function validateProfileViewDetailed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewDetailed', v)\n}\n\nexport interface ViewerState {\n  muted?: boolean\n  mutedByList?: AppBskyGraphDefs.ListViewBasic\n  blockedBy?: boolean\n  blocking?: string\n  blockingByList?: AppBskyGraphDefs.ListViewBasic\n  following?: string\n  followedBy?: string\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#viewerState', v)\n}\n\nexport type Preferences = (\n  | AdultContentPref\n  | ContentLabelPref\n  | SavedFeedsPref\n  | PersonalDetailsPref\n  | FeedViewPref\n  | ThreadViewPref\n  | { $type: string; [k: string]: unknown }\n)[]\n\nexport interface AdultContentPref {\n  enabled: boolean\n  [k: string]: unknown\n}\n\nexport function isAdultContentPref(v: unknown): v is AdultContentPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#adultContentPref'\n  )\n}\n\nexport function validateAdultContentPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#adultContentPref', v)\n}\n\nexport interface ContentLabelPref {\n  label: string\n  visibility: 'show' | 'warn' | 'hide' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isContentLabelPref(v: unknown): v is ContentLabelPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#contentLabelPref'\n  )\n}\n\nexport function validateContentLabelPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#contentLabelPref', v)\n}\n\nexport interface SavedFeedsPref {\n  pinned: string[]\n  saved: string[]\n  [k: string]: unknown\n}\n\nexport function isSavedFeedsPref(v: unknown): v is SavedFeedsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#savedFeedsPref'\n  )\n}\n\nexport function validateSavedFeedsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#savedFeedsPref', v)\n}\n\nexport interface PersonalDetailsPref {\n  /** The birth date of account owner. */\n  birthDate?: string\n  [k: string]: unknown\n}\n\nexport function isPersonalDetailsPref(v: unknown): v is PersonalDetailsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#personalDetailsPref'\n  )\n}\n\nexport function validatePersonalDetailsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#personalDetailsPref', v)\n}\n\nexport interface FeedViewPref {\n  /** The URI of the feed, or an identifier which describes the feed. */\n  feed: string\n  /** Hide replies in the feed. */\n  hideReplies?: boolean\n  /** Hide replies in the feed if they are not by followed users. */\n  hideRepliesByUnfollowed?: boolean\n  /** Hide replies in the feed if they do not have this number of likes. */\n  hideRepliesByLikeCount?: number\n  /** Hide reposts in the feed. */\n  hideReposts?: boolean\n  /** Hide quote posts in the feed. */\n  hideQuotePosts?: boolean\n  [k: string]: unknown\n}\n\nexport function isFeedViewPref(v: unknown): v is FeedViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#feedViewPref'\n  )\n}\n\nexport function validateFeedViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#feedViewPref', v)\n}\n\nexport interface ThreadViewPref {\n  /** Sorting mode for threads. */\n  sort?: 'oldest' | 'newest' | 'most-likes' | 'random' | (string & {})\n  /** Show followed users at the top of all replies. */\n  prioritizeFollowedUsers?: boolean\n  [k: string]: unknown\n}\n\nexport function isThreadViewPref(v: unknown): v is ThreadViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#threadViewPref'\n  )\n}\n\nexport function validateThreadViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#threadViewPref', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  displayName?: string\n  description?: string\n  avatar?: BlobRef\n  banner?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.actor.profile#main' ||\n      v.$type === 'app.bsky.actor.profile')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.profile#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  external: External\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.external#main' ||\n      v.$type === 'app.bsky.embed.external')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#main', v)\n}\n\nexport interface External {\n  uri: string\n  title: string\n  description: string\n  thumb?: BlobRef\n  [k: string]: unknown\n}\n\nexport function isExternal(v: unknown): v is External {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#external'\n  )\n}\n\nexport function validateExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#external', v)\n}\n\nexport interface View {\n  external: ViewExternal\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#view', v)\n}\n\nexport interface ViewExternal {\n  uri: string\n  title: string\n  description: string\n  thumb?: string\n  [k: string]: unknown\n}\n\nexport function isViewExternal(v: unknown): v is ViewExternal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#viewExternal'\n  )\n}\n\nexport function validateViewExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#viewExternal', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  images: Image[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.images#main' ||\n      v.$type === 'app.bsky.embed.images')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#main', v)\n}\n\nexport interface Image {\n  image: BlobRef\n  alt: string\n  aspectRatio?: AspectRatio\n  [k: string]: unknown\n}\n\nexport function isImage(v: unknown): v is Image {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#image'\n  )\n}\n\nexport function validateImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#image', v)\n}\n\n/** width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit. */\nexport interface AspectRatio {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isAspectRatio(v: unknown): v is AspectRatio {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#aspectRatio'\n  )\n}\n\nexport function validateAspectRatio(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#aspectRatio', v)\n}\n\nexport interface View {\n  images: ViewImage[]\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#view', v)\n}\n\nexport interface ViewImage {\n  thumb: string\n  fullsize: string\n  alt: string\n  aspectRatio?: AspectRatio\n  [k: string]: unknown\n}\n\nexport function isViewImage(v: unknown): v is ViewImage {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#viewImage'\n  )\n}\n\nexport function validateViewImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#viewImage', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\nimport * as AppBskyFeedDefs from '../feed/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedExternal from './external'\nimport * as AppBskyEmbedRecordWithMedia from './recordWithMedia'\n\nexport interface Main {\n  record: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.record#main' ||\n      v.$type === 'app.bsky.embed.record')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#main', v)\n}\n\nexport interface View {\n  record:\n    | ViewRecord\n    | ViewNotFound\n    | ViewBlocked\n    | AppBskyFeedDefs.GeneratorView\n    | AppBskyGraphDefs.ListView\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.record#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#view', v)\n}\n\nexport interface ViewRecord {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  value: {}\n  labels?: ComAtprotoLabelDefs.Label[]\n  embeds?: (\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  )[]\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isViewRecord(v: unknown): v is ViewRecord {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewRecord'\n  )\n}\n\nexport function validateViewRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewRecord', v)\n}\n\nexport interface ViewNotFound {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isViewNotFound(v: unknown): v is ViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewNotFound'\n  )\n}\n\nexport function validateViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewNotFound', v)\n}\n\nexport interface ViewBlocked {\n  uri: string\n  blocked: true\n  author: AppBskyFeedDefs.BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isViewBlocked(v: unknown): v is ViewBlocked {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewBlocked'\n  )\n}\n\nexport function validateViewBlocked(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewBlocked', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyEmbedRecord from './record'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedExternal from './external'\n\nexport interface Main {\n  record: AppBskyEmbedRecord.Main\n  media:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedExternal.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.recordWithMedia#main' ||\n      v.$type === 'app.bsky.embed.recordWithMedia')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#main', v)\n}\n\nexport interface View {\n  record: AppBskyEmbedRecord.View\n  media:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.recordWithMedia#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#view', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface PostView {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  record: {}\n  embed?:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | AppBskyEmbedRecord.View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  indexedAt: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  threadgate?: ThreadgateView\n  [k: string]: unknown\n}\n\nexport function isPostView(v: unknown): v is PostView {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#postView'\n  )\n}\n\nexport function validatePostView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#postView', v)\n}\n\nexport interface ViewerState {\n  repost?: string\n  like?: string\n  replyDisabled?: boolean\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#viewerState', v)\n}\n\nexport interface FeedViewPost {\n  post: PostView\n  reply?: ReplyRef\n  reason?: ReasonRepost | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isFeedViewPost(v: unknown): v is FeedViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#feedViewPost'\n  )\n}\n\nexport function validateFeedViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#feedViewPost', v)\n}\n\nexport interface ReplyRef {\n  root:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  parent:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#replyRef', v)\n}\n\nexport interface ReasonRepost {\n  by: AppBskyActorDefs.ProfileViewBasic\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isReasonRepost(v: unknown): v is ReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#reasonRepost'\n  )\n}\n\nexport function validateReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#reasonRepost', v)\n}\n\nexport interface ThreadViewPost {\n  post: PostView\n  parent?:\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  replies?: (\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport function isThreadViewPost(v: unknown): v is ThreadViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadViewPost'\n  )\n}\n\nexport function validateThreadViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadViewPost', v)\n}\n\nexport interface NotFoundPost {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isNotFoundPost(v: unknown): v is NotFoundPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#notFoundPost'\n  )\n}\n\nexport function validateNotFoundPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#notFoundPost', v)\n}\n\nexport interface BlockedPost {\n  uri: string\n  blocked: true\n  author: BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isBlockedPost(v: unknown): v is BlockedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedPost'\n  )\n}\n\nexport function validateBlockedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedPost', v)\n}\n\nexport interface BlockedAuthor {\n  did: string\n  viewer?: AppBskyActorDefs.ViewerState\n  [k: string]: unknown\n}\n\nexport function isBlockedAuthor(v: unknown): v is BlockedAuthor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedAuthor'\n  )\n}\n\nexport function validateBlockedAuthor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedAuthor', v)\n}\n\nexport interface GeneratorView {\n  uri: string\n  cid: string\n  did: string\n  creator: AppBskyActorDefs.ProfileView\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  likeCount?: number\n  viewer?: GeneratorViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorView(v: unknown): v is GeneratorView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorView'\n  )\n}\n\nexport function validateGeneratorView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorView', v)\n}\n\nexport interface GeneratorViewerState {\n  like?: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorViewerState(v: unknown): v is GeneratorViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorViewerState'\n  )\n}\n\nexport function validateGeneratorViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorViewerState', v)\n}\n\nexport interface SkeletonFeedPost {\n  post: string\n  reason?: SkeletonReasonRepost | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isSkeletonFeedPost(v: unknown): v is SkeletonFeedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonFeedPost'\n  )\n}\n\nexport function validateSkeletonFeedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonFeedPost', v)\n}\n\nexport interface SkeletonReasonRepost {\n  repost: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonReasonRepost(v: unknown): v is SkeletonReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonReasonRepost'\n  )\n}\n\nexport function validateSkeletonReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonReasonRepost', v)\n}\n\nexport interface ThreadgateView {\n  uri?: string\n  cid?: string\n  record?: {}\n  lists?: AppBskyGraphDefs.ListViewBasic[]\n  [k: string]: unknown\n}\n\nexport function isThreadgateView(v: unknown): v is ThreadgateView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadgateView'\n  )\n}\n\nexport function validateThreadgateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadgateView', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  did: string\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.generator#main' ||\n      v.$type === 'app.bsky.feed.generator')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.generator#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.like#main' || v.$type === 'app.bsky.feed.like')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.like#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  text: string\n  /** Deprecated: replaced by app.bsky.richtext.facet. */\n  entities?: Entity[]\n  facets?: AppBskyRichtextFacet.Main[]\n  reply?: ReplyRef\n  embed?:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedExternal.Main\n    | AppBskyEmbedRecord.Main\n    | AppBskyEmbedRecordWithMedia.Main\n    | { $type: string; [k: string]: unknown }\n  langs?: string[]\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  /** Additional non-inline tags describing this post. */\n  tags?: string[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.post#main' || v.$type === 'app.bsky.feed.post')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#main', v)\n}\n\nexport interface ReplyRef {\n  root: ComAtprotoRepoStrongRef.Main\n  parent: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#replyRef', v)\n}\n\n/** Deprecated: use facets instead. */\nexport interface Entity {\n  index: TextSlice\n  /** Expected values are 'mention' and 'link'. */\n  type: string\n  value: string\n  [k: string]: unknown\n}\n\nexport function isEntity(v: unknown): v is Entity {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#entity'\n  )\n}\n\nexport function validateEntity(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#entity', v)\n}\n\n/** Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings. */\nexport interface TextSlice {\n  start: number\n  end: number\n  [k: string]: unknown\n}\n\nexport function isTextSlice(v: unknown): v is TextSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.post#textSlice'\n  )\n}\n\nexport function validateTextSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#textSlice', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.repost#main' ||\n      v.$type === 'app.bsky.feed.repost')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.repost#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  post: string\n  allow?: (\n    | MentionRule\n    | FollowingRule\n    | ListRule\n    | { $type: string; [k: string]: unknown }\n  )[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.threadgate#main' ||\n      v.$type === 'app.bsky.feed.threadgate')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#main', v)\n}\n\n/** Allow replies from actors mentioned in your post. */\nexport interface MentionRule {\n  [k: string]: unknown\n}\n\nexport function isMentionRule(v: unknown): v is MentionRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#mentionRule'\n  )\n}\n\nexport function validateMentionRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#mentionRule', v)\n}\n\n/** Allow replies from actors you follow. */\nexport interface FollowingRule {\n  [k: string]: unknown\n}\n\nexport function isFollowingRule(v: unknown): v is FollowingRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#followingRule'\n  )\n}\n\nexport function validateFollowingRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#followingRule', v)\n}\n\n/** Allow replies from actors on a list. */\nexport interface ListRule {\n  list: string\n  [k: string]: unknown\n}\n\nexport function isListRule(v: unknown): v is ListRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#listRule'\n  )\n}\n\nexport function validateListRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#listRule', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.block#main' ||\n      v.$type === 'app.bsky.graph.block')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.block#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\n\nexport interface ListViewBasic {\n  uri: string\n  cid: string\n  name: string\n  purpose: ListPurpose\n  avatar?: string\n  viewer?: ListViewerState\n  indexedAt?: string\n  [k: string]: unknown\n}\n\nexport function isListViewBasic(v: unknown): v is ListViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewBasic'\n  )\n}\n\nexport function validateListViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewBasic', v)\n}\n\nexport interface ListView {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  name: string\n  purpose: ListPurpose\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  viewer?: ListViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isListView(v: unknown): v is ListView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listView'\n  )\n}\n\nexport function validateListView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listView', v)\n}\n\nexport interface ListItemView {\n  uri: string\n  subject: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isListItemView(v: unknown): v is ListItemView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listItemView'\n  )\n}\n\nexport function validateListItemView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listItemView', v)\n}\n\nexport type ListPurpose =\n  | 'app.bsky.graph.defs#modlist'\n  | 'app.bsky.graph.defs#curatelist'\n  | (string & {})\n\n/** A list of actors to apply an aggregate moderation action (mute/block) on. */\nexport const MODLIST = 'app.bsky.graph.defs#modlist'\n/** A list of actors used for curation purposes such as list feeds or interaction gating. */\nexport const CURATELIST = 'app.bsky.graph.defs#curatelist'\n\nexport interface ListViewerState {\n  muted?: boolean\n  blocked?: string\n  [k: string]: unknown\n}\n\nexport function isListViewerState(v: unknown): v is ListViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewerState'\n  )\n}\n\nexport function validateListViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewerState', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.follow#main' ||\n      v.$type === 'app.bsky.graph.follow')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.follow#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  purpose: AppBskyGraphDefs.ListPurpose\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.list#main' ||\n      v.$type === 'app.bsky.graph.list')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.list#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listblock#main' ||\n      v.$type === 'app.bsky.graph.listblock')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listblock#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  list: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listitem#main' ||\n      v.$type === 'app.bsky.graph.listitem')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listitem#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  index: ByteSlice\n  features: (Mention | Link | Tag | { $type: string; [k: string]: unknown })[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.richtext.facet#main' ||\n      v.$type === 'app.bsky.richtext.facet')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#main', v)\n}\n\n/** A facet feature for actor mentions. */\nexport interface Mention {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isMention(v: unknown): v is Mention {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#mention'\n  )\n}\n\nexport function validateMention(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#mention', v)\n}\n\n/** A facet feature for links. */\nexport interface Link {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isLink(v: unknown): v is Link {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#link'\n  )\n}\n\nexport function validateLink(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#link', v)\n}\n\n/** A hashtag. */\nexport interface Tag {\n  tag: string\n  [k: string]: unknown\n}\n\nexport function isTag(v: unknown): v is Tag {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.richtext.facet#tag'\n  )\n}\n\nexport function validateTag(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#tag', v)\n}\n\n/** A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings. */\nexport interface ByteSlice {\n  byteStart: number\n  byteEnd: number\n  [k: string]: unknown\n}\n\nexport function isByteSlice(v: unknown): v is ByteSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#byteSlice'\n  )\n}\n\nexport function validateByteSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#byteSlice', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface SkeletonSearchPost {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchPost(v: unknown): v is SkeletonSearchPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchPost'\n  )\n}\n\nexport function validateSkeletonSearchPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchPost', v)\n}\n\nexport interface SkeletonSearchActor {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchActor(v: unknown): v is SkeletonSearchActor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchActor'\n  )\n}\n\nexport function validateSkeletonSearchActor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchActor', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport {\n  Client as XrpcClient,\n  ServiceClient as XrpcServiceClient,\n} from '@atproto/xrpc'\nimport { schemas } from './lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nimport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount'\nimport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nimport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nimport * as ComAtprotoAdminEmitModerationEvent from './types/com/atproto/admin/emitModerationEvent'\nimport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nimport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nimport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nimport * as ComAtprotoAdminGetModerationEvent from './types/com/atproto/admin/getModerationEvent'\nimport * as ComAtprotoAdminGetRecord from './types/com/atproto/admin/getRecord'\nimport * as ComAtprotoAdminGetRepo from './types/com/atproto/admin/getRepo'\nimport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nimport * as ComAtprotoAdminQueryModerationEvents from './types/com/atproto/admin/queryModerationEvents'\nimport * as ComAtprotoAdminQueryModerationStatuses from './types/com/atproto/admin/queryModerationStatuses'\nimport * as ComAtprotoAdminSearchRepos from './types/com/atproto/admin/searchRepos'\nimport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nimport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nimport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nimport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nimport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nimport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nimport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nimport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nimport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nimport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nimport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nimport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nimport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nimport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nimport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nimport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nimport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nimport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nimport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nimport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nimport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nimport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nimport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nimport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nimport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nimport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nimport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nimport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nimport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nimport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nimport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nimport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nimport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nimport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nimport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nimport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nimport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nimport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nimport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nimport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nimport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nimport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nimport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nimport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nimport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nimport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nimport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nimport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nimport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nimport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nimport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nimport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nimport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nimport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nimport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nimport * as ComAtprotoTempImportRepo from './types/com/atproto/temp/importRepo'\nimport * as ComAtprotoTempPushBlob from './types/com/atproto/temp/pushBlob'\nimport * as ComAtprotoTempTransferAccount from './types/com/atproto/temp/transferAccount'\nimport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nimport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nimport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nimport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nimport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nimport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nimport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nimport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nimport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nimport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nimport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nimport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nimport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nimport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nimport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nimport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nimport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nimport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nimport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nimport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nimport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nimport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nimport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nimport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nimport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nimport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nimport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nimport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nimport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nimport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nimport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nimport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nimport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nimport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nimport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nimport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nimport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nimport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nimport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nimport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nimport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nimport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nimport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nimport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nimport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nimport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nimport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nimport * as AppBskyGraphList from './types/app/bsky/graph/list'\nimport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nimport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nimport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nimport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nimport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nimport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nimport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nimport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nimport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nimport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nimport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nimport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nimport * as AppBskyUnspeccedGetPopular from './types/app/bsky/unspecced/getPopular'\nimport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nimport * as AppBskyUnspeccedGetTimelineSkeleton from './types/app/bsky/unspecced/getTimelineSkeleton'\nimport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nimport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\n\nexport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nexport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount'\nexport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nexport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nexport * as ComAtprotoAdminEmitModerationEvent from './types/com/atproto/admin/emitModerationEvent'\nexport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nexport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nexport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nexport * as ComAtprotoAdminGetModerationEvent from './types/com/atproto/admin/getModerationEvent'\nexport * as ComAtprotoAdminGetRecord from './types/com/atproto/admin/getRecord'\nexport * as ComAtprotoAdminGetRepo from './types/com/atproto/admin/getRepo'\nexport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nexport * as ComAtprotoAdminQueryModerationEvents from './types/com/atproto/admin/queryModerationEvents'\nexport * as ComAtprotoAdminQueryModerationStatuses from './types/com/atproto/admin/queryModerationStatuses'\nexport * as ComAtprotoAdminSearchRepos from './types/com/atproto/admin/searchRepos'\nexport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nexport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nexport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nexport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nexport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nexport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nexport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nexport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nexport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nexport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nexport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nexport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nexport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nexport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nexport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nexport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nexport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nexport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nexport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nexport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nexport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nexport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nexport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nexport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nexport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nexport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nexport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nexport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nexport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nexport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nexport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nexport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nexport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nexport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nexport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nexport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nexport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nexport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nexport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nexport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nexport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nexport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nexport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nexport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nexport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nexport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nexport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nexport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nexport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nexport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nexport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nexport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nexport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nexport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nexport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nexport * as ComAtprotoTempImportRepo from './types/com/atproto/temp/importRepo'\nexport * as ComAtprotoTempPushBlob from './types/com/atproto/temp/pushBlob'\nexport * as ComAtprotoTempTransferAccount from './types/com/atproto/temp/transferAccount'\nexport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nexport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nexport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nexport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nexport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nexport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nexport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nexport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nexport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nexport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nexport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nexport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nexport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nexport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nexport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nexport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nexport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nexport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nexport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nexport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nexport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nexport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nexport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nexport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nexport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nexport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nexport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nexport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nexport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nexport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nexport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nexport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nexport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nexport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nexport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nexport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nexport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nexport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nexport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nexport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nexport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nexport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nexport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nexport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nexport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nexport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nexport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nexport * as AppBskyGraphList from './types/app/bsky/graph/list'\nexport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nexport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nexport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nexport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nexport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nexport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nexport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nexport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nexport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nexport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nexport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nexport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nexport * as AppBskyUnspeccedGetPopular from './types/app/bsky/unspecced/getPopular'\nexport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nexport * as AppBskyUnspeccedGetTimelineSkeleton from './types/app/bsky/unspecced/getTimelineSkeleton'\nexport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nexport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\n\nexport const COM_ATPROTO_ADMIN = {\n  DefsReviewOpen: 'com.atproto.admin.defs#reviewOpen',\n  DefsReviewEscalated: 'com.atproto.admin.defs#reviewEscalated',\n  DefsReviewClosed: 'com.atproto.admin.defs#reviewClosed',\n}\nexport const COM_ATPROTO_MODERATION = {\n  DefsReasonSpam: 'com.atproto.moderation.defs#reasonSpam',\n  DefsReasonViolation: 'com.atproto.moderation.defs#reasonViolation',\n  DefsReasonMisleading: 'com.atproto.moderation.defs#reasonMisleading',\n  DefsReasonSexual: 'com.atproto.moderation.defs#reasonSexual',\n  DefsReasonRude: 'com.atproto.moderation.defs#reasonRude',\n  DefsReasonOther: 'com.atproto.moderation.defs#reasonOther',\n  DefsReasonAppeal: 'com.atproto.moderation.defs#reasonAppeal',\n}\nexport const APP_BSKY_GRAPH = {\n  DefsModlist: 'app.bsky.graph.defs#modlist',\n  DefsCuratelist: 'app.bsky.graph.defs#curatelist',\n}\n\nexport class AtpBaseClient {\n  xrpc: XrpcClient = new XrpcClient()\n\n  constructor() {\n    this.xrpc.addLexicons(schemas)\n  }\n\n  service(serviceUri: string | URL): AtpServiceClient {\n    return new AtpServiceClient(this, this.xrpc.service(serviceUri))\n  }\n}\n\nexport class AtpServiceClient {\n  _baseClient: AtpBaseClient\n  xrpc: XrpcServiceClient\n  com: ComNS\n  app: AppNS\n\n  constructor(baseClient: AtpBaseClient, xrpcService: XrpcServiceClient) {\n    this._baseClient = baseClient\n    this.xrpc = xrpcService\n    this.com = new ComNS(this)\n    this.app = new AppNS(this)\n  }\n\n  setHeader(key: string, value: string): void {\n    this.xrpc.setHeader(key, value)\n  }\n}\n\nexport class ComNS {\n  _service: AtpServiceClient\n  atproto: AtprotoNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.atproto = new AtprotoNS(service)\n  }\n}\n\nexport class AtprotoNS {\n  _service: AtpServiceClient\n  admin: AdminNS\n  identity: IdentityNS\n  label: LabelNS\n  moderation: ModerationNS\n  repo: RepoNS\n  server: ServerNS\n  sync: SyncNS\n  temp: TempNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.admin = new AdminNS(service)\n    this.identity = new IdentityNS(service)\n    this.label = new LabelNS(service)\n    this.moderation = new ModerationNS(service)\n    this.repo = new RepoNS(service)\n    this.server = new ServerNS(service)\n    this.sync = new SyncNS(service)\n    this.temp = new TempNS(service)\n  }\n}\n\nexport class AdminNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  deleteAccount(\n    data?: ComAtprotoAdminDeleteAccount.InputSchema,\n    opts?: ComAtprotoAdminDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoAdminDeleteAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  disableAccountInvites(\n    data?: ComAtprotoAdminDisableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminDisableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminDisableAccountInvites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.disableAccountInvites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDisableAccountInvites.toKnownErr(e)\n      })\n  }\n\n  disableInviteCodes(\n    data?: ComAtprotoAdminDisableInviteCodes.InputSchema,\n    opts?: ComAtprotoAdminDisableInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminDisableInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.disableInviteCodes', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDisableInviteCodes.toKnownErr(e)\n      })\n  }\n\n  emitModerationEvent(\n    data?: ComAtprotoAdminEmitModerationEvent.InputSchema,\n    opts?: ComAtprotoAdminEmitModerationEvent.CallOptions,\n  ): Promise<ComAtprotoAdminEmitModerationEvent.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.emitModerationEvent', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminEmitModerationEvent.toKnownErr(e)\n      })\n  }\n\n  enableAccountInvites(\n    data?: ComAtprotoAdminEnableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminEnableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminEnableAccountInvites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.enableAccountInvites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminEnableAccountInvites.toKnownErr(e)\n      })\n  }\n\n  getAccountInfo(\n    params?: ComAtprotoAdminGetAccountInfo.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfo.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getAccountInfo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetAccountInfo.toKnownErr(e)\n      })\n  }\n\n  getInviteCodes(\n    params?: ComAtprotoAdminGetInviteCodes.QueryParams,\n    opts?: ComAtprotoAdminGetInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminGetInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getModerationEvent(\n    params?: ComAtprotoAdminGetModerationEvent.QueryParams,\n    opts?: ComAtprotoAdminGetModerationEvent.CallOptions,\n  ): Promise<ComAtprotoAdminGetModerationEvent.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getModerationEvent', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetModerationEvent.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoAdminGetRecord.QueryParams,\n    opts?: ComAtprotoAdminGetRecord.CallOptions,\n  ): Promise<ComAtprotoAdminGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoAdminGetRepo.QueryParams,\n    opts?: ComAtprotoAdminGetRepo.CallOptions,\n  ): Promise<ComAtprotoAdminGetRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetRepo.toKnownErr(e)\n      })\n  }\n\n  getSubjectStatus(\n    params?: ComAtprotoAdminGetSubjectStatus.QueryParams,\n    opts?: ComAtprotoAdminGetSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminGetSubjectStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getSubjectStatus', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetSubjectStatus.toKnownErr(e)\n      })\n  }\n\n  queryModerationEvents(\n    params?: ComAtprotoAdminQueryModerationEvents.QueryParams,\n    opts?: ComAtprotoAdminQueryModerationEvents.CallOptions,\n  ): Promise<ComAtprotoAdminQueryModerationEvents.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.queryModerationEvents', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminQueryModerationEvents.toKnownErr(e)\n      })\n  }\n\n  queryModerationStatuses(\n    params?: ComAtprotoAdminQueryModerationStatuses.QueryParams,\n    opts?: ComAtprotoAdminQueryModerationStatuses.CallOptions,\n  ): Promise<ComAtprotoAdminQueryModerationStatuses.Response> {\n    return this._service.xrpc\n      .call(\n        'com.atproto.admin.queryModerationStatuses',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw ComAtprotoAdminQueryModerationStatuses.toKnownErr(e)\n      })\n  }\n\n  searchRepos(\n    params?: ComAtprotoAdminSearchRepos.QueryParams,\n    opts?: ComAtprotoAdminSearchRepos.CallOptions,\n  ): Promise<ComAtprotoAdminSearchRepos.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.searchRepos', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminSearchRepos.toKnownErr(e)\n      })\n  }\n\n  sendEmail(\n    data?: ComAtprotoAdminSendEmail.InputSchema,\n    opts?: ComAtprotoAdminSendEmail.CallOptions,\n  ): Promise<ComAtprotoAdminSendEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.sendEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminSendEmail.toKnownErr(e)\n      })\n  }\n\n  updateAccountEmail(\n    data?: ComAtprotoAdminUpdateAccountEmail.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountEmail.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountEmail.toKnownErr(e)\n      })\n  }\n\n  updateAccountHandle(\n    data?: ComAtprotoAdminUpdateAccountHandle.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountHandle.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountHandle', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountHandle.toKnownErr(e)\n      })\n  }\n\n  updateSubjectStatus(\n    data?: ComAtprotoAdminUpdateSubjectStatus.InputSchema,\n    opts?: ComAtprotoAdminUpdateSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateSubjectStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateSubjectStatus', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateSubjectStatus.toKnownErr(e)\n      })\n  }\n}\n\nexport class IdentityNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  resolveHandle(\n    params?: ComAtprotoIdentityResolveHandle.QueryParams,\n    opts?: ComAtprotoIdentityResolveHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityResolveHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.resolveHandle', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentityResolveHandle.toKnownErr(e)\n      })\n  }\n\n  updateHandle(\n    data?: ComAtprotoIdentityUpdateHandle.InputSchema,\n    opts?: ComAtprotoIdentityUpdateHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityUpdateHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.updateHandle', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentityUpdateHandle.toKnownErr(e)\n      })\n  }\n}\n\nexport class LabelNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  queryLabels(\n    params?: ComAtprotoLabelQueryLabels.QueryParams,\n    opts?: ComAtprotoLabelQueryLabels.CallOptions,\n  ): Promise<ComAtprotoLabelQueryLabels.Response> {\n    return this._service.xrpc\n      .call('com.atproto.label.queryLabels', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoLabelQueryLabels.toKnownErr(e)\n      })\n  }\n}\n\nexport class ModerationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  createReport(\n    data?: ComAtprotoModerationCreateReport.InputSchema,\n    opts?: ComAtprotoModerationCreateReport.CallOptions,\n  ): Promise<ComAtprotoModerationCreateReport.Response> {\n    return this._service.xrpc\n      .call('com.atproto.moderation.createReport', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoModerationCreateReport.toKnownErr(e)\n      })\n  }\n}\n\nexport class RepoNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  applyWrites(\n    data?: ComAtprotoRepoApplyWrites.InputSchema,\n    opts?: ComAtprotoRepoApplyWrites.CallOptions,\n  ): Promise<ComAtprotoRepoApplyWrites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.applyWrites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoApplyWrites.toKnownErr(e)\n      })\n  }\n\n  createRecord(\n    data?: ComAtprotoRepoCreateRecord.InputSchema,\n    opts?: ComAtprotoRepoCreateRecord.CallOptions,\n  ): Promise<ComAtprotoRepoCreateRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.createRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoCreateRecord.toKnownErr(e)\n      })\n  }\n\n  deleteRecord(\n    data?: ComAtprotoRepoDeleteRecord.InputSchema,\n    opts?: ComAtprotoRepoDeleteRecord.CallOptions,\n  ): Promise<ComAtprotoRepoDeleteRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.deleteRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDeleteRecord.toKnownErr(e)\n      })\n  }\n\n  describeRepo(\n    params?: ComAtprotoRepoDescribeRepo.QueryParams,\n    opts?: ComAtprotoRepoDescribeRepo.CallOptions,\n  ): Promise<ComAtprotoRepoDescribeRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.describeRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDescribeRepo.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoRepoGetRecord.QueryParams,\n    opts?: ComAtprotoRepoGetRecord.CallOptions,\n  ): Promise<ComAtprotoRepoGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoGetRecord.toKnownErr(e)\n      })\n  }\n\n  listRecords(\n    params?: ComAtprotoRepoListRecords.QueryParams,\n    opts?: ComAtprotoRepoListRecords.CallOptions,\n  ): Promise<ComAtprotoRepoListRecords.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.listRecords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoListRecords.toKnownErr(e)\n      })\n  }\n\n  putRecord(\n    data?: ComAtprotoRepoPutRecord.InputSchema,\n    opts?: ComAtprotoRepoPutRecord.CallOptions,\n  ): Promise<ComAtprotoRepoPutRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.putRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoPutRecord.toKnownErr(e)\n      })\n  }\n\n  uploadBlob(\n    data?: ComAtprotoRepoUploadBlob.InputSchema,\n    opts?: ComAtprotoRepoUploadBlob.CallOptions,\n  ): Promise<ComAtprotoRepoUploadBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.uploadBlob', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoUploadBlob.toKnownErr(e)\n      })\n  }\n}\n\nexport class ServerNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  confirmEmail(\n    data?: ComAtprotoServerConfirmEmail.InputSchema,\n    opts?: ComAtprotoServerConfirmEmail.CallOptions,\n  ): Promise<ComAtprotoServerConfirmEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.confirmEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerConfirmEmail.toKnownErr(e)\n      })\n  }\n\n  createAccount(\n    data?: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAccount.toKnownErr(e)\n      })\n  }\n\n  createAppPassword(\n    data?: ComAtprotoServerCreateAppPassword.InputSchema,\n    opts?: ComAtprotoServerCreateAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerCreateAppPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAppPassword.toKnownErr(e)\n      })\n  }\n\n  createInviteCode(\n    data?: ComAtprotoServerCreateInviteCode.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCode.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCode.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createInviteCode', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateInviteCode.toKnownErr(e)\n      })\n  }\n\n  createInviteCodes(\n    data?: ComAtprotoServerCreateInviteCodes.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createInviteCodes', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateInviteCodes.toKnownErr(e)\n      })\n  }\n\n  createSession(\n    data?: ComAtprotoServerCreateSession.InputSchema,\n    opts?: ComAtprotoServerCreateSession.CallOptions,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateSession.toKnownErr(e)\n      })\n  }\n\n  deleteAccount(\n    data?: ComAtprotoServerDeleteAccount.InputSchema,\n    opts?: ComAtprotoServerDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeleteAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  deleteSession(\n    data?: ComAtprotoServerDeleteSession.InputSchema,\n    opts?: ComAtprotoServerDeleteSession.CallOptions,\n  ): Promise<ComAtprotoServerDeleteSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deleteSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteSession.toKnownErr(e)\n      })\n  }\n\n  describeServer(\n    params?: ComAtprotoServerDescribeServer.QueryParams,\n    opts?: ComAtprotoServerDescribeServer.CallOptions,\n  ): Promise<ComAtprotoServerDescribeServer.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.describeServer', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDescribeServer.toKnownErr(e)\n      })\n  }\n\n  getAccountInviteCodes(\n    params?: ComAtprotoServerGetAccountInviteCodes.QueryParams,\n    opts?: ComAtprotoServerGetAccountInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerGetAccountInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getAccountInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetAccountInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getSession(\n    params?: ComAtprotoServerGetSession.QueryParams,\n    opts?: ComAtprotoServerGetSession.CallOptions,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getSession', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetSession.toKnownErr(e)\n      })\n  }\n\n  listAppPasswords(\n    params?: ComAtprotoServerListAppPasswords.QueryParams,\n    opts?: ComAtprotoServerListAppPasswords.CallOptions,\n  ): Promise<ComAtprotoServerListAppPasswords.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.listAppPasswords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerListAppPasswords.toKnownErr(e)\n      })\n  }\n\n  refreshSession(\n    data?: ComAtprotoServerRefreshSession.InputSchema,\n    opts?: ComAtprotoServerRefreshSession.CallOptions,\n  ): Promise<ComAtprotoServerRefreshSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.refreshSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRefreshSession.toKnownErr(e)\n      })\n  }\n\n  requestAccountDelete(\n    data?: ComAtprotoServerRequestAccountDelete.InputSchema,\n    opts?: ComAtprotoServerRequestAccountDelete.CallOptions,\n  ): Promise<ComAtprotoServerRequestAccountDelete.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestAccountDelete', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestAccountDelete.toKnownErr(e)\n      })\n  }\n\n  requestEmailConfirmation(\n    data?: ComAtprotoServerRequestEmailConfirmation.InputSchema,\n    opts?: ComAtprotoServerRequestEmailConfirmation.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailConfirmation.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestEmailConfirmation', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestEmailConfirmation.toKnownErr(e)\n      })\n  }\n\n  requestEmailUpdate(\n    data?: ComAtprotoServerRequestEmailUpdate.InputSchema,\n    opts?: ComAtprotoServerRequestEmailUpdate.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailUpdate.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestEmailUpdate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestEmailUpdate.toKnownErr(e)\n      })\n  }\n\n  requestPasswordReset(\n    data?: ComAtprotoServerRequestPasswordReset.InputSchema,\n    opts?: ComAtprotoServerRequestPasswordReset.CallOptions,\n  ): Promise<ComAtprotoServerRequestPasswordReset.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestPasswordReset', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestPasswordReset.toKnownErr(e)\n      })\n  }\n\n  reserveSigningKey(\n    data?: ComAtprotoServerReserveSigningKey.InputSchema,\n    opts?: ComAtprotoServerReserveSigningKey.CallOptions,\n  ): Promise<ComAtprotoServerReserveSigningKey.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.reserveSigningKey', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerReserveSigningKey.toKnownErr(e)\n      })\n  }\n\n  resetPassword(\n    data?: ComAtprotoServerResetPassword.InputSchema,\n    opts?: ComAtprotoServerResetPassword.CallOptions,\n  ): Promise<ComAtprotoServerResetPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.resetPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerResetPassword.toKnownErr(e)\n      })\n  }\n\n  revokeAppPassword(\n    data?: ComAtprotoServerRevokeAppPassword.InputSchema,\n    opts?: ComAtprotoServerRevokeAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerRevokeAppPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.revokeAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRevokeAppPassword.toKnownErr(e)\n      })\n  }\n\n  updateEmail(\n    data?: ComAtprotoServerUpdateEmail.InputSchema,\n    opts?: ComAtprotoServerUpdateEmail.CallOptions,\n  ): Promise<ComAtprotoServerUpdateEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.updateEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerUpdateEmail.toKnownErr(e)\n      })\n  }\n}\n\nexport class SyncNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getBlob(\n    params?: ComAtprotoSyncGetBlob.QueryParams,\n    opts?: ComAtprotoSyncGetBlob.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getBlob', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlob.toKnownErr(e)\n      })\n  }\n\n  getBlocks(\n    params?: ComAtprotoSyncGetBlocks.QueryParams,\n    opts?: ComAtprotoSyncGetBlocks.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlocks.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getCheckout(\n    params?: ComAtprotoSyncGetCheckout.QueryParams,\n    opts?: ComAtprotoSyncGetCheckout.CallOptions,\n  ): Promise<ComAtprotoSyncGetCheckout.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getCheckout', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetCheckout.toKnownErr(e)\n      })\n  }\n\n  getHead(\n    params?: ComAtprotoSyncGetHead.QueryParams,\n    opts?: ComAtprotoSyncGetHead.CallOptions,\n  ): Promise<ComAtprotoSyncGetHead.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getHead', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetHead.toKnownErr(e)\n      })\n  }\n\n  getLatestCommit(\n    params?: ComAtprotoSyncGetLatestCommit.QueryParams,\n    opts?: ComAtprotoSyncGetLatestCommit.CallOptions,\n  ): Promise<ComAtprotoSyncGetLatestCommit.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getLatestCommit', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetLatestCommit.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoSyncGetRecord.QueryParams,\n    opts?: ComAtprotoSyncGetRecord.CallOptions,\n  ): Promise<ComAtprotoSyncGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoSyncGetRepo.QueryParams,\n    opts?: ComAtprotoSyncGetRepo.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepo.toKnownErr(e)\n      })\n  }\n\n  listBlobs(\n    params?: ComAtprotoSyncListBlobs.QueryParams,\n    opts?: ComAtprotoSyncListBlobs.CallOptions,\n  ): Promise<ComAtprotoSyncListBlobs.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.listBlobs', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListBlobs.toKnownErr(e)\n      })\n  }\n\n  listRepos(\n    params?: ComAtprotoSyncListRepos.QueryParams,\n    opts?: ComAtprotoSyncListRepos.CallOptions,\n  ): Promise<ComAtprotoSyncListRepos.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.listRepos', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListRepos.toKnownErr(e)\n      })\n  }\n\n  notifyOfUpdate(\n    data?: ComAtprotoSyncNotifyOfUpdate.InputSchema,\n    opts?: ComAtprotoSyncNotifyOfUpdate.CallOptions,\n  ): Promise<ComAtprotoSyncNotifyOfUpdate.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.notifyOfUpdate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncNotifyOfUpdate.toKnownErr(e)\n      })\n  }\n\n  requestCrawl(\n    data?: ComAtprotoSyncRequestCrawl.InputSchema,\n    opts?: ComAtprotoSyncRequestCrawl.CallOptions,\n  ): Promise<ComAtprotoSyncRequestCrawl.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.requestCrawl', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncRequestCrawl.toKnownErr(e)\n      })\n  }\n}\n\nexport class TempNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  fetchLabels(\n    params?: ComAtprotoTempFetchLabels.QueryParams,\n    opts?: ComAtprotoTempFetchLabels.CallOptions,\n  ): Promise<ComAtprotoTempFetchLabels.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.fetchLabels', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoTempFetchLabels.toKnownErr(e)\n      })\n  }\n\n  importRepo(\n    data?: ComAtprotoTempImportRepo.InputSchema,\n    opts?: ComAtprotoTempImportRepo.CallOptions,\n  ): Promise<ComAtprotoTempImportRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.importRepo', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoTempImportRepo.toKnownErr(e)\n      })\n  }\n\n  pushBlob(\n    data?: ComAtprotoTempPushBlob.InputSchema,\n    opts?: ComAtprotoTempPushBlob.CallOptions,\n  ): Promise<ComAtprotoTempPushBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.pushBlob', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoTempPushBlob.toKnownErr(e)\n      })\n  }\n\n  transferAccount(\n    data?: ComAtprotoTempTransferAccount.InputSchema,\n    opts?: ComAtprotoTempTransferAccount.CallOptions,\n  ): Promise<ComAtprotoTempTransferAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.transferAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoTempTransferAccount.toKnownErr(e)\n      })\n  }\n}\n\nexport class AppNS {\n  _service: AtpServiceClient\n  bsky: BskyNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.bsky = new BskyNS(service)\n  }\n}\n\nexport class BskyNS {\n  _service: AtpServiceClient\n  actor: ActorNS\n  embed: EmbedNS\n  feed: FeedNS\n  graph: GraphNS\n  notification: NotificationNS\n  richtext: RichtextNS\n  unspecced: UnspeccedNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.actor = new ActorNS(service)\n    this.embed = new EmbedNS(service)\n    this.feed = new FeedNS(service)\n    this.graph = new GraphNS(service)\n    this.notification = new NotificationNS(service)\n    this.richtext = new RichtextNS(service)\n    this.unspecced = new UnspeccedNS(service)\n  }\n}\n\nexport class ActorNS {\n  _service: AtpServiceClient\n  profile: ProfileRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.profile = new ProfileRecord(service)\n  }\n\n  getPreferences(\n    params?: AppBskyActorGetPreferences.QueryParams,\n    opts?: AppBskyActorGetPreferences.CallOptions,\n  ): Promise<AppBskyActorGetPreferences.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getPreferences', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetPreferences.toKnownErr(e)\n      })\n  }\n\n  getProfile(\n    params?: AppBskyActorGetProfile.QueryParams,\n    opts?: AppBskyActorGetProfile.CallOptions,\n  ): Promise<AppBskyActorGetProfile.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getProfile', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetProfile.toKnownErr(e)\n      })\n  }\n\n  getProfiles(\n    params?: AppBskyActorGetProfiles.QueryParams,\n    opts?: AppBskyActorGetProfiles.CallOptions,\n  ): Promise<AppBskyActorGetProfiles.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getProfiles', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetProfiles.toKnownErr(e)\n      })\n  }\n\n  getSuggestions(\n    params?: AppBskyActorGetSuggestions.QueryParams,\n    opts?: AppBskyActorGetSuggestions.CallOptions,\n  ): Promise<AppBskyActorGetSuggestions.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getSuggestions', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetSuggestions.toKnownErr(e)\n      })\n  }\n\n  putPreferences(\n    data?: AppBskyActorPutPreferences.InputSchema,\n    opts?: AppBskyActorPutPreferences.CallOptions,\n  ): Promise<AppBskyActorPutPreferences.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.putPreferences', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyActorPutPreferences.toKnownErr(e)\n      })\n  }\n\n  searchActors(\n    params?: AppBskyActorSearchActors.QueryParams,\n    opts?: AppBskyActorSearchActors.CallOptions,\n  ): Promise<AppBskyActorSearchActors.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.searchActors', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorSearchActors.toKnownErr(e)\n      })\n  }\n\n  searchActorsTypeahead(\n    params?: AppBskyActorSearchActorsTypeahead.QueryParams,\n    opts?: AppBskyActorSearchActorsTypeahead.CallOptions,\n  ): Promise<AppBskyActorSearchActorsTypeahead.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.searchActorsTypeahead', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorSearchActorsTypeahead.toKnownErr(e)\n      })\n  }\n}\n\nexport class ProfileRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyActorProfile.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyActorProfile.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyActorProfile.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.actor.profile'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', rkey: 'self', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class EmbedNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n}\n\nexport class FeedNS {\n  _service: AtpServiceClient\n  generator: GeneratorRecord\n  like: LikeRecord\n  post: PostRecord\n  repost: RepostRecord\n  threadgate: ThreadgateRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.generator = new GeneratorRecord(service)\n    this.like = new LikeRecord(service)\n    this.post = new PostRecord(service)\n    this.repost = new RepostRecord(service)\n    this.threadgate = new ThreadgateRecord(service)\n  }\n\n  describeFeedGenerator(\n    params?: AppBskyFeedDescribeFeedGenerator.QueryParams,\n    opts?: AppBskyFeedDescribeFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedDescribeFeedGenerator.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.describeFeedGenerator', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedDescribeFeedGenerator.toKnownErr(e)\n      })\n  }\n\n  getActorFeeds(\n    params?: AppBskyFeedGetActorFeeds.QueryParams,\n    opts?: AppBskyFeedGetActorFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetActorFeeds.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getActorFeeds', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorFeeds.toKnownErr(e)\n      })\n  }\n\n  getActorLikes(\n    params?: AppBskyFeedGetActorLikes.QueryParams,\n    opts?: AppBskyFeedGetActorLikes.CallOptions,\n  ): Promise<AppBskyFeedGetActorLikes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getActorLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorLikes.toKnownErr(e)\n      })\n  }\n\n  getAuthorFeed(\n    params?: AppBskyFeedGetAuthorFeed.QueryParams,\n    opts?: AppBskyFeedGetAuthorFeed.CallOptions,\n  ): Promise<AppBskyFeedGetAuthorFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getAuthorFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetAuthorFeed.toKnownErr(e)\n      })\n  }\n\n  getFeed(\n    params?: AppBskyFeedGetFeed.QueryParams,\n    opts?: AppBskyFeedGetFeed.CallOptions,\n  ): Promise<AppBskyFeedGetFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeed.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerator(\n    params?: AppBskyFeedGetFeedGenerator.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerator.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedGenerator', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedGenerator.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerators(\n    params?: AppBskyFeedGetFeedGenerators.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerators.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerators.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedGenerators', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedGenerators.toKnownErr(e)\n      })\n  }\n\n  getFeedSkeleton(\n    params?: AppBskyFeedGetFeedSkeleton.QueryParams,\n    opts?: AppBskyFeedGetFeedSkeleton.CallOptions,\n  ): Promise<AppBskyFeedGetFeedSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedSkeleton.toKnownErr(e)\n      })\n  }\n\n  getLikes(\n    params?: AppBskyFeedGetLikes.QueryParams,\n    opts?: AppBskyFeedGetLikes.CallOptions,\n  ): Promise<AppBskyFeedGetLikes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetLikes.toKnownErr(e)\n      })\n  }\n\n  getListFeed(\n    params?: AppBskyFeedGetListFeed.QueryParams,\n    opts?: AppBskyFeedGetListFeed.CallOptions,\n  ): Promise<AppBskyFeedGetListFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getListFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetListFeed.toKnownErr(e)\n      })\n  }\n\n  getPostThread(\n    params?: AppBskyFeedGetPostThread.QueryParams,\n    opts?: AppBskyFeedGetPostThread.CallOptions,\n  ): Promise<AppBskyFeedGetPostThread.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getPostThread', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPostThread.toKnownErr(e)\n      })\n  }\n\n  getPosts(\n    params?: AppBskyFeedGetPosts.QueryParams,\n    opts?: AppBskyFeedGetPosts.CallOptions,\n  ): Promise<AppBskyFeedGetPosts.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPosts.toKnownErr(e)\n      })\n  }\n\n  getRepostedBy(\n    params?: AppBskyFeedGetRepostedBy.QueryParams,\n    opts?: AppBskyFeedGetRepostedBy.CallOptions,\n  ): Promise<AppBskyFeedGetRepostedBy.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getRepostedBy', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetRepostedBy.toKnownErr(e)\n      })\n  }\n\n  getSuggestedFeeds(\n    params?: AppBskyFeedGetSuggestedFeeds.QueryParams,\n    opts?: AppBskyFeedGetSuggestedFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetSuggestedFeeds.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getSuggestedFeeds', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetSuggestedFeeds.toKnownErr(e)\n      })\n  }\n\n  getTimeline(\n    params?: AppBskyFeedGetTimeline.QueryParams,\n    opts?: AppBskyFeedGetTimeline.CallOptions,\n  ): Promise<AppBskyFeedGetTimeline.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getTimeline', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetTimeline.toKnownErr(e)\n      })\n  }\n\n  searchPosts(\n    params?: AppBskyFeedSearchPosts.QueryParams,\n    opts?: AppBskyFeedSearchPosts.CallOptions,\n  ): Promise<AppBskyFeedSearchPosts.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.searchPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedSearchPosts.toKnownErr(e)\n      })\n  }\n}\n\nexport class GeneratorRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedGenerator.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedGenerator.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedGenerator.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.generator'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class LikeRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedLike.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedLike.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedLike.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.like'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPost.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPost.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedPost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.post'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class RepostRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedRepost.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedRepost.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedRepost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.repost'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ThreadgateRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedThreadgate.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyFeedThreadgate.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedThreadgate.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.threadgate'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class GraphNS {\n  _service: AtpServiceClient\n  block: BlockRecord\n  follow: FollowRecord\n  list: ListRecord\n  listblock: ListblockRecord\n  listitem: ListitemRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.block = new BlockRecord(service)\n    this.follow = new FollowRecord(service)\n    this.list = new ListRecord(service)\n    this.listblock = new ListblockRecord(service)\n    this.listitem = new ListitemRecord(service)\n  }\n\n  getBlocks(\n    params?: AppBskyGraphGetBlocks.QueryParams,\n    opts?: AppBskyGraphGetBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetBlocks.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getFollowers(\n    params?: AppBskyGraphGetFollowers.QueryParams,\n    opts?: AppBskyGraphGetFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetFollowers.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getFollowers', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetFollowers.toKnownErr(e)\n      })\n  }\n\n  getFollows(\n    params?: AppBskyGraphGetFollows.QueryParams,\n    opts?: AppBskyGraphGetFollows.CallOptions,\n  ): Promise<AppBskyGraphGetFollows.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getFollows', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetFollows.toKnownErr(e)\n      })\n  }\n\n  getList(\n    params?: AppBskyGraphGetList.QueryParams,\n    opts?: AppBskyGraphGetList.CallOptions,\n  ): Promise<AppBskyGraphGetList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getList', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetList.toKnownErr(e)\n      })\n  }\n\n  getListBlocks(\n    params?: AppBskyGraphGetListBlocks.QueryParams,\n    opts?: AppBskyGraphGetListBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetListBlocks.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getListBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetListBlocks.toKnownErr(e)\n      })\n  }\n\n  getListMutes(\n    params?: AppBskyGraphGetListMutes.QueryParams,\n    opts?: AppBskyGraphGetListMutes.CallOptions,\n  ): Promise<AppBskyGraphGetListMutes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getListMutes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetListMutes.toKnownErr(e)\n      })\n  }\n\n  getLists(\n    params?: AppBskyGraphGetLists.QueryParams,\n    opts?: AppBskyGraphGetLists.CallOptions,\n  ): Promise<AppBskyGraphGetLists.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getLists', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetLists.toKnownErr(e)\n      })\n  }\n\n  getMutes(\n    params?: AppBskyGraphGetMutes.QueryParams,\n    opts?: AppBskyGraphGetMutes.CallOptions,\n  ): Promise<AppBskyGraphGetMutes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getMutes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetMutes.toKnownErr(e)\n      })\n  }\n\n  getSuggestedFollowsByActor(\n    params?: AppBskyGraphGetSuggestedFollowsByActor.QueryParams,\n    opts?: AppBskyGraphGetSuggestedFollowsByActor.CallOptions,\n  ): Promise<AppBskyGraphGetSuggestedFollowsByActor.Response> {\n    return this._service.xrpc\n      .call(\n        'app.bsky.graph.getSuggestedFollowsByActor',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyGraphGetSuggestedFollowsByActor.toKnownErr(e)\n      })\n  }\n\n  muteActor(\n    data?: AppBskyGraphMuteActor.InputSchema,\n    opts?: AppBskyGraphMuteActor.CallOptions,\n  ): Promise<AppBskyGraphMuteActor.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.muteActor', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphMuteActor.toKnownErr(e)\n      })\n  }\n\n  muteActorList(\n    data?: AppBskyGraphMuteActorList.InputSchema,\n    opts?: AppBskyGraphMuteActorList.CallOptions,\n  ): Promise<AppBskyGraphMuteActorList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.muteActorList', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphMuteActorList.toKnownErr(e)\n      })\n  }\n\n  unmuteActor(\n    data?: AppBskyGraphUnmuteActor.InputSchema,\n    opts?: AppBskyGraphUnmuteActor.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActor.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.unmuteActor', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphUnmuteActor.toKnownErr(e)\n      })\n  }\n\n  unmuteActorList(\n    data?: AppBskyGraphUnmuteActorList.InputSchema,\n    opts?: AppBskyGraphUnmuteActorList.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActorList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.unmuteActorList', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphUnmuteActorList.toKnownErr(e)\n      })\n  }\n}\n\nexport class BlockRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphBlock.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphBlock.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphBlock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.block'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class FollowRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphFollow.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphFollow.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphFollow.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.follow'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphList.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphList.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphList.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.list'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListblockRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListblock.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphListblock.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListblock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listblock'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListitemRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListitem.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphListitem.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListitem.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listitem'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class NotificationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getUnreadCount(\n    params?: AppBskyNotificationGetUnreadCount.QueryParams,\n    opts?: AppBskyNotificationGetUnreadCount.CallOptions,\n  ): Promise<AppBskyNotificationGetUnreadCount.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.getUnreadCount', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyNotificationGetUnreadCount.toKnownErr(e)\n      })\n  }\n\n  listNotifications(\n    params?: AppBskyNotificationListNotifications.QueryParams,\n    opts?: AppBskyNotificationListNotifications.CallOptions,\n  ): Promise<AppBskyNotificationListNotifications.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.listNotifications', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyNotificationListNotifications.toKnownErr(e)\n      })\n  }\n\n  registerPush(\n    data?: AppBskyNotificationRegisterPush.InputSchema,\n    opts?: AppBskyNotificationRegisterPush.CallOptions,\n  ): Promise<AppBskyNotificationRegisterPush.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.registerPush', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyNotificationRegisterPush.toKnownErr(e)\n      })\n  }\n\n  updateSeen(\n    data?: AppBskyNotificationUpdateSeen.InputSchema,\n    opts?: AppBskyNotificationUpdateSeen.CallOptions,\n  ): Promise<AppBskyNotificationUpdateSeen.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.updateSeen', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyNotificationUpdateSeen.toKnownErr(e)\n      })\n  }\n}\n\nexport class RichtextNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n}\n\nexport class UnspeccedNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getPopular(\n    params?: AppBskyUnspeccedGetPopular.QueryParams,\n    opts?: AppBskyUnspeccedGetPopular.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopular.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.getPopular', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedGetPopular.toKnownErr(e)\n      })\n  }\n\n  getPopularFeedGenerators(\n    params?: AppBskyUnspeccedGetPopularFeedGenerators.QueryParams,\n    opts?: AppBskyUnspeccedGetPopularFeedGenerators.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopularFeedGenerators.Response> {\n    return this._service.xrpc\n      .call(\n        'app.bsky.unspecced.getPopularFeedGenerators',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyUnspeccedGetPopularFeedGenerators.toKnownErr(e)\n      })\n  }\n\n  getTimelineSkeleton(\n    params?: AppBskyUnspeccedGetTimelineSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedGetTimelineSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTimelineSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.getTimelineSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedGetTimelineSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchActorsSkeleton(\n    params?: AppBskyUnspeccedSearchActorsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchActorsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchActorsSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.searchActorsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchActorsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchPostsSkeleton(\n    params?: AppBskyUnspeccedSearchPostsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchPostsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchPostsSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.searchPostsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchPostsSkeleton.toKnownErr(e)\n      })\n  }\n}\n", "import { ErrorResponseBody, errorResponseBody } from '@atproto/xrpc'\nimport { defaultFetchHandler, XRPCError, ResponseType } from '@atproto/xrpc'\nimport { isValidDidDoc, getPdsEndpoint } from '@atproto/common-web'\nimport {\n  AtpBaseClient,\n  AtpServiceClient,\n  ComAtprotoServerCreateAccount,\n  ComAtprotoServerCreateSession,\n  ComAtprotoServerGetSession,\n  ComAtprotoServerRefreshSession,\n} from './client'\nimport {\n  AtpSessionData,\n  AtpAgentCreateAccountOpts,\n  AtpAgentLoginOpts,\n  AtpAgentFetchHandler,\n  AtpAgentFetchHandlerResponse,\n  AtpAgentGlobalOpts,\n  AtpPersistSessionHandler,\n  AtpAgentOpts,\n} from './types'\n\nconst REFRESH_SESSION = 'com.atproto.server.refreshSession'\n\n/**\n * An ATP \"Agent\"\n * Manages session token lifecycles and provides convenience methods.\n */\nexport class AtpAgent {\n  service: URL\n  api: AtpServiceClient\n  session?: AtpSessionData\n\n  /**\n   * The PDS URL, driven by the did doc. May be undefined.\n   */\n  pdsUrl: URL | undefined\n\n  private _baseClient: AtpBaseClient\n  private _persistSession?: AtpPersistSessionHandler\n  private _refreshSessionPromise: Promise<void> | undefined\n\n  get com() {\n    return this.api.com\n  }\n\n  /**\n   * The `fetch` implementation; must be implemented for your platform.\n   */\n  static fetch: AtpAgentFetchHandler | undefined = defaultFetchHandler\n\n  /**\n   * Configures the API globally.\n   */\n  static configure(opts: AtpAgentGlobalOpts) {\n    AtpAgent.fetch = opts.fetch\n  }\n\n  constructor(opts: AtpAgentOpts) {\n    this.service =\n      opts.service instanceof URL ? opts.service : new URL(opts.service)\n    this._persistSession = opts.persistSession\n\n    // create an ATP client instance for this agent\n    this._baseClient = new AtpBaseClient()\n    this._baseClient.xrpc.fetch = this._fetch.bind(this) // patch its fetch implementation\n    this.api = this._baseClient.service(opts.service)\n  }\n\n  /**\n   * Is there any active session?\n   */\n  get hasSession() {\n    return !!this.session\n  }\n\n  /**\n   * Sets the \"Persist Session\" method which can be used to store access tokens\n   * as they change.\n   */\n  setPersistSessionHandler(handler?: AtpPersistSessionHandler) {\n    this._persistSession = handler\n  }\n\n  /**\n   * Create a new account and hydrate its session in this agent.\n   */\n  async createAccount(\n    opts: AtpAgentCreateAccountOpts,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    try {\n      const res = await this.api.com.atproto.server.createAccount({\n        handle: opts.handle,\n        password: opts.password,\n        email: opts.email,\n        inviteCode: opts.inviteCode,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: opts.email,\n        emailConfirmed: false,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Start a new session with this agent.\n   */\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    try {\n      const res = await this.api.com.atproto.server.createSession({\n        identifier: opts.identifier,\n        password: opts.password,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: res.data.email,\n        emailConfirmed: res.data.emailConfirmed,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Resume a pre-existing session with this agent.\n   */\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    try {\n      this.session = session\n      const res = await this.api.com.atproto.server.getSession()\n      if (res.data.did !== this.session.did) {\n        throw new XRPCError(\n          ResponseType.InvalidRequest,\n          'Invalid session',\n          'InvalidDID',\n        )\n      }\n      this.session.email = res.data.email\n      this.session.handle = res.data.handle\n      this.session.emailConfirmed = res.data.emailConfirmed\n      this._updateApiEndpoint(res.data.didDoc)\n      this._persistSession?.('update', this.session)\n      return res\n    } catch (e) {\n      this.session = undefined\n\n      if (e instanceof XRPCError) {\n        /*\n         * `ExpiredToken` and `InvalidToken` are handled in\n         * `this_refreshSession`, and emit an `expired` event there.\n         *\n         * Everything else is handled here.\n         */\n        if (\n          [1, 408, 425, 429, 500, 502, 503, 504, 522, 524].includes(e.status)\n        ) {\n          this._persistSession?.('network-error', undefined)\n        } else {\n          this._persistSession?.('expired', undefined)\n        }\n      } else {\n        this._persistSession?.('network-error', undefined)\n      }\n\n      throw e\n    }\n  }\n\n  /**\n   * Internal helper to add authorization headers to requests.\n   */\n  private _addAuthHeader(reqHeaders: Record<string, string>) {\n    if (!reqHeaders.authorization && this.session?.accessJwt) {\n      return {\n        ...reqHeaders,\n        authorization: `Bearer ${this.session.accessJwt}`,\n      }\n    }\n    return reqHeaders\n  }\n\n  /**\n   * Internal fetch handler which adds access-token management\n   */\n  private async _fetch(\n    reqUri: string,\n    reqMethod: string,\n    reqHeaders: Record<string, string>,\n    reqBody: any,\n  ): Promise<AtpAgentFetchHandlerResponse> {\n    if (!AtpAgent.fetch) {\n      throw new Error('AtpAgent fetch() method not configured')\n    }\n\n    // wait for any active session-refreshes to finish\n    await this._refreshSessionPromise\n\n    // send the request\n    let res = await AtpAgent.fetch(\n      reqUri,\n      reqMethod,\n      this._addAuthHeader(reqHeaders),\n      reqBody,\n    )\n\n    // handle session-refreshes as needed\n    if (isErrorResponse(res, ['ExpiredToken']) && this.session?.refreshJwt) {\n      // attempt refresh\n      await this._refreshSession()\n\n      // resend the request with the new access token\n      res = await AtpAgent.fetch(\n        reqUri,\n        reqMethod,\n        this._addAuthHeader(reqHeaders),\n        reqBody,\n      )\n    }\n\n    return res\n  }\n\n  /**\n   * Internal helper to refresh sessions\n   * - Wraps the actual implementation in a promise-guard to ensure only\n   *   one refresh is attempted at a time.\n   */\n  private async _refreshSession() {\n    if (this._refreshSessionPromise) {\n      return this._refreshSessionPromise\n    }\n    this._refreshSessionPromise = this._refreshSessionInner()\n    try {\n      await this._refreshSessionPromise\n    } finally {\n      this._refreshSessionPromise = undefined\n    }\n  }\n\n  /**\n   * Internal helper to refresh sessions (actual behavior)\n   */\n  private async _refreshSessionInner() {\n    if (!AtpAgent.fetch) {\n      throw new Error('AtpAgent fetch() method not configured')\n    }\n    if (!this.session?.refreshJwt) {\n      return\n    }\n\n    // send the refresh request\n    const url = new URL((this.pdsUrl || this.service).origin)\n    url.pathname = `/xrpc/${REFRESH_SESSION}`\n    const res = await AtpAgent.fetch(\n      url.toString(),\n      'POST',\n      {\n        authorization: `Bearer ${this.session.refreshJwt}`,\n      },\n      undefined,\n    )\n\n    if (isErrorResponse(res, ['ExpiredToken', 'InvalidToken'])) {\n      // failed due to a bad refresh token\n      this.session = undefined\n      this._persistSession?.('expired', undefined)\n    } else if (isNewSessionObject(this._baseClient, res.body)) {\n      // succeeded, update the session\n      this.session = {\n        ...(this.session || {}),\n        accessJwt: res.body.accessJwt,\n        refreshJwt: res.body.refreshJwt,\n        handle: res.body.handle,\n        did: res.body.did,\n      }\n      this._updateApiEndpoint(res.body.didDoc)\n      this._persistSession?.('update', this.session)\n    }\n    // else: other failures should be ignored - the issue will\n    // propagate in the _fetch() handler's second attempt to run\n    // the request\n  }\n\n  /**\n   * Upload a binary blob to the server\n   */\n  uploadBlob: typeof this.api.com.atproto.repo.uploadBlob = (data, opts) =>\n    this.api.com.atproto.repo.uploadBlob(data, opts)\n\n  /**\n   * Resolve a handle to a DID\n   */\n  resolveHandle: typeof this.api.com.atproto.identity.resolveHandle = (\n    params,\n    opts,\n  ) => this.api.com.atproto.identity.resolveHandle(params, opts)\n\n  /**\n   * Change the user's handle\n   */\n  updateHandle: typeof this.api.com.atproto.identity.updateHandle = (\n    data,\n    opts,\n  ) => this.api.com.atproto.identity.updateHandle(data, opts)\n\n  /**\n   * Create a moderation report\n   */\n  createModerationReport: typeof this.api.com.atproto.moderation.createReport =\n    (data, opts) => this.api.com.atproto.moderation.createReport(data, opts)\n\n  /**\n   * Helper to update the pds endpoint dynamically.\n   *\n   * The session methods (create, resume, refresh) may respond with the user's\n   * did document which contains the user's canonical PDS endpoint. That endpoint\n   * may differ from the endpoint used to contact the server. We capture that\n   * PDS endpoint and update the client to use that given endpoint for future\n   * requests. (This helps ensure smooth migrations between PDSes, especially\n   * when the PDSes are operated by a single org.)\n   */\n  private _updateApiEndpoint(didDoc: unknown) {\n    if (isValidDidDoc(didDoc)) {\n      const endpoint = getPdsEndpoint(didDoc)\n      this.pdsUrl = endpoint ? new URL(endpoint) : undefined\n    }\n    this.api.xrpc.uri = this.pdsUrl || this.service\n  }\n}\n\nfunction isErrorObject(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n\nfunction isErrorResponse(\n  res: AtpAgentFetchHandlerResponse,\n  errorNames: string[],\n): boolean {\n  if (res.status !== 400) {\n    return false\n  }\n  if (!isErrorObject(res.body)) {\n    return false\n  }\n  return (\n    typeof res.body.error === 'string' && errorNames.includes(res.body.error)\n  )\n}\n\nfunction isNewSessionObject(\n  client: AtpBaseClient,\n  v: unknown,\n): v is ComAtprotoServerRefreshSession.OutputSchema {\n  try {\n    client.xrpc.lex.assertValidXrpcOutput(\n      'com.atproto.server.refreshSession',\n      v,\n    )\n    return true\n  } catch {\n    return false\n  }\n}\n", "/**\n * Javascript uses utf16-encoded strings while most environments and specs\n * have standardized around utf8 (including JSON).\n *\n * After some lengthy debated we decided that richtext facets need to use\n * utf8 indices. This means we need tools to convert indices between utf8\n * and utf16, and that's precisely what this library handles.\n */\n\nimport { graphemeLen } from '@atproto/common-web'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport class UnicodeString {\n  utf16: string\n  utf8: Uint8Array\n  private _graphemeLen?: number | undefined\n\n  constructor(utf16: string) {\n    this.utf16 = utf16\n    this.utf8 = encoder.encode(utf16)\n  }\n\n  get length() {\n    return this.utf8.byteLength\n  }\n\n  get graphemeLength() {\n    if (!this._graphemeLen) {\n      this._graphemeLen = graphemeLen(this.utf16)\n    }\n    return this._graphemeLen\n  }\n\n  slice(start?: number, end?: number): string {\n    return decoder.decode(this.utf8.slice(start, end))\n  }\n\n  utf16IndexToUtf8Index(i: number) {\n    return encoder.encode(this.utf16.slice(0, i)).byteLength\n  }\n\n  toString() {\n    return this.utf16\n  }\n}\n", "import { RichText } from './rich-text'\nimport { UnicodeString } from './unicode'\n\n// this regex is intentionally matching on the zero-with-separator codepoint\n// eslint-disable-next-line no-misleading-character-class\nconst EXCESS_SPACE_RE = /[\\r\\n]([\\u00AD\\u2060\\u200D\\u200C\\u200B\\s]*[\\r\\n]){2,}/\nconst REPLACEMENT_STR = '\\n\\n'\n\nexport function sanitizeRichText(\n  richText: RichText,\n  opts: { cleanNewlines?: boolean },\n) {\n  if (opts.cleanNewlines) {\n    richText = clean(richText, EXCESS_SPACE_RE, REPLACEMENT_STR)\n  }\n  return richText\n}\n\nfunction clean(\n  richText: RichText,\n  targetRegexp: RegExp,\n  replacementString: string,\n): RichText {\n  richText = richText.clone()\n\n  let match = richText.unicodeText.utf16.match(targetRegexp)\n  while (match && typeof match.index !== 'undefined') {\n    const oldText = richText.unicodeText\n    const removeStartIndex = richText.unicodeText.utf16IndexToUtf8Index(\n      match.index,\n    )\n    const removeEndIndex = removeStartIndex + new UnicodeString(match[0]).length\n    richText.delete(removeStartIndex, removeEndIndex)\n    if (richText.unicodeText.utf16 === oldText.utf16) {\n      break // sanity check\n    }\n    richText.insert(removeStartIndex, replacementString)\n    match = richText.unicodeText.utf16.match(targetRegexp)\n  }\n\n  return richText\n}\n", "import TLDs from 'tlds'\nimport { AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\n\nexport type Facet = AppBskyRichtextFacet.Main\n\nexport function detectFacets(text: UnicodeString): Facet[] | undefined {\n  let match\n  const facets: Facet[] = []\n  {\n    // mentions\n    const re = /(^|\\s|\\()(@)([a-zA-Z0-9.-]+)(\\b)/g\n    while ((match = re.exec(text.utf16))) {\n      if (!isValidDomain(match[3]) && !match[3].endsWith('.test')) {\n        continue // probably not a handle\n      }\n\n      const start = text.utf16.indexOf(match[3], match.index) - 1\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(start),\n          byteEnd: text.utf16IndexToUtf8Index(start + match[3].length + 1),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#mention',\n            did: match[3], // must be resolved afterwards\n          },\n        ],\n      })\n    }\n  }\n  {\n    // links\n    const re =\n      /(^|\\s|\\()((https?:\\/\\/[\\S]+)|((?<domain>[a-z][a-z0-9]*(\\.[a-z0-9]+)+)[\\S]*))/gim\n    while ((match = re.exec(text.utf16))) {\n      let uri = match[2]\n      if (!uri.startsWith('http')) {\n        const domain = match.groups?.domain\n        if (!domain || !isValidDomain(domain)) {\n          continue\n        }\n        uri = `https://${uri}`\n      }\n      const start = text.utf16.indexOf(match[2], match.index)\n      const index = { start, end: start + match[2].length }\n      // strip ending puncuation\n      if (/[.,;:!?]$/.test(uri)) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      if (/[)]$/.test(uri) && !uri.includes('(')) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index.start),\n          byteEnd: text.utf16IndexToUtf8Index(index.end),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#link',\n            uri,\n          },\n        ],\n      })\n    }\n  }\n  {\n    const re = /(?:^|\\s)(#[^\\d\\s]\\S*)(?=\\s)?/g\n    while ((match = re.exec(text.utf16))) {\n      let [tag] = match\n      const hasLeadingSpace = /^\\s/.test(tag)\n\n      tag = tag.trim().replace(/\\p{P}+$/gu, '') // strip ending punctuation\n\n      // inclusive of #, max of 64 chars\n      if (tag.length > 66) continue\n\n      const index = match.index + (hasLeadingSpace ? 1 : 0)\n\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index),\n          byteEnd: text.utf16IndexToUtf8Index(index + tag.length), // inclusive of last char\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#tag',\n            tag: tag.replace(/^#/, ''),\n          },\n        ],\n      })\n    }\n  }\n  return facets.length > 0 ? facets : undefined\n}\n\nfunction isValidDomain(str: string): boolean {\n  return !!TLDs.find((tld) => {\n    const i = str.lastIndexOf(tld)\n    if (i === -1) {\n      return false\n    }\n    return str.charAt(i - 1) === '.' && i === str.length - tld.length\n  })\n}\n", "/*\n= Rich Text Manipulation\n\nWhen we sanitize rich text, we have to update the entity indices as the\ntext is modified. This can be modeled as inserts() and deletes() of the\nrich text string. The possible scenarios are outlined below, along with\ntheir expected behaviors.\n\nNOTE: Slices are start inclusive, end exclusive\n\n== richTextInsert()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^                       // insert \"test\" at 0\nB:        ^                // insert \"test\" at 4\nC:                 ^       // insert \"test\" at 8\n\nA = before           -> move both by num added\nB = inner            -> move end by num added\nC = after            -> noop\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   t e s t h e l l o   w   // string value\n               ^-------^   // target slice {start: 6, end: 11}\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l t e s t o   w   // string value\n       ^---------------^   // target slice {start: 2, end: 11}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o t e s   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\n== richTextDelete()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^---------------^       // remove slice {start: 0, end: 9}\nB:               ^-----^   // remove slice {start: 7, end: 11}\nC:         ^-----------^   // remove slice {start: 4, end: 11}\nD:       ^-^               // remove slice {start: 3, end: 5}\nE:   ^-----^               // remove slice {start: 1, end: 5}\nF: ^-^                     // remove slice {start: 0, end: 2}\n\nA = entirely outer   -> delete slice\nB = entirely after   -> noop\nC = partially after  -> move end to remove-start\nD = entirely inner   -> move end by num removed\nE = partially before -> move start to remove-start index, move end by num removed\nF = entirely before  -> move both by num removed\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l d                     // string value\n                           // target slice (deleted)\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w           // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l                 // string value\n       ^-^                 // target slice {start: 2, end: 4}\n\nD: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l   w o r l d       // string value\n       ^---^               // target slice {start: 2, end: 5}\n\nE: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h   w o r l d           // string value\n     ^-^                   // target slice {start: 1, end: 3}\n\nF: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l l o   w o r l d       // string value\n   ^-------^               // target slice {start: 0, end: 5}\n */\n\nimport { AtpAgent } from '../agent'\nimport { AppBskyFeedPost, AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\nimport { sanitizeRichText } from './sanitization'\nimport { detectFacets } from './detection'\n\nexport type Facet = AppBskyRichtextFacet.Main\nexport type FacetLink = AppBskyRichtextFacet.Link\nexport type FacetMention = AppBskyRichtextFacet.Mention\nexport type FacetTag = AppBskyRichtextFacet.Tag\nexport type Entity = AppBskyFeedPost.Entity\n\nexport interface RichTextProps {\n  text: string\n  facets?: Facet[]\n  /**\n   * @deprecated Use facets instead\n   */\n  entities?: Entity[]\n}\n\nexport interface RichTextOpts {\n  cleanNewlines?: boolean\n}\n\nexport class RichTextSegment {\n  constructor(public text: string, public facet?: Facet) {}\n\n  get link(): FacetLink | undefined {\n    const link = this.facet?.features.find(AppBskyRichtextFacet.isLink)\n    if (AppBskyRichtextFacet.isLink(link)) {\n      return link\n    }\n    return undefined\n  }\n\n  isLink() {\n    return !!this.link\n  }\n\n  get mention(): FacetMention | undefined {\n    const mention = this.facet?.features.find(AppBskyRichtextFacet.isMention)\n    if (AppBskyRichtextFacet.isMention(mention)) {\n      return mention\n    }\n    return undefined\n  }\n\n  isMention() {\n    return !!this.mention\n  }\n\n  get tag(): FacetTag | undefined {\n    const tag = this.facet?.features.find(AppBskyRichtextFacet.isTag)\n    if (AppBskyRichtextFacet.isTag(tag)) {\n      return tag\n    }\n    return undefined\n  }\n\n  isTag() {\n    return !!this.tag\n  }\n}\n\nexport class RichText {\n  unicodeText: UnicodeString\n  facets?: Facet[]\n\n  constructor(props: RichTextProps, opts?: RichTextOpts) {\n    this.unicodeText = new UnicodeString(props.text)\n    this.facets = props.facets\n    if (!this.facets?.length && props.entities?.length) {\n      this.facets = entitiesToFacets(this.unicodeText, props.entities)\n    }\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n    if (opts?.cleanNewlines) {\n      sanitizeRichText(this, { cleanNewlines: true }).copyInto(this)\n    }\n  }\n\n  get text() {\n    return this.unicodeText.toString()\n  }\n\n  get length() {\n    return this.unicodeText.length\n  }\n\n  get graphemeLength() {\n    return this.unicodeText.graphemeLength\n  }\n\n  clone() {\n    return new RichText({\n      text: this.unicodeText.utf16,\n      facets: cloneDeep(this.facets),\n    })\n  }\n\n  copyInto(target: RichText) {\n    target.unicodeText = this.unicodeText\n    target.facets = cloneDeep(this.facets)\n  }\n\n  *segments(): Generator<RichTextSegment, void, void> {\n    const facets = this.facets || []\n    if (!facets.length) {\n      yield new RichTextSegment(this.unicodeText.utf16)\n      return\n    }\n\n    let textCursor = 0\n    let facetCursor = 0\n    do {\n      const currFacet = facets[facetCursor]\n      if (textCursor < currFacet.index.byteStart) {\n        yield new RichTextSegment(\n          this.unicodeText.slice(textCursor, currFacet.index.byteStart),\n        )\n      } else if (textCursor > currFacet.index.byteStart) {\n        facetCursor++\n        continue\n      }\n      if (currFacet.index.byteStart < currFacet.index.byteEnd) {\n        const subtext = this.unicodeText.slice(\n          currFacet.index.byteStart,\n          currFacet.index.byteEnd,\n        )\n        if (!subtext.trim()) {\n          // dont empty string entities\n          yield new RichTextSegment(subtext)\n        } else {\n          yield new RichTextSegment(subtext, currFacet)\n        }\n      }\n      textCursor = currFacet.index.byteEnd\n      facetCursor++\n    } while (facetCursor < facets.length)\n    if (textCursor < this.unicodeText.length) {\n      yield new RichTextSegment(\n        this.unicodeText.slice(textCursor, this.unicodeText.length),\n      )\n    }\n  }\n\n  insert(insertIndex: number, insertText: string) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, insertIndex) +\n        insertText +\n        this.unicodeText.slice(insertIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsAdded = insertText.length\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (before)\n      if (insertIndex <= ent.index.byteStart) {\n        // move both by num added\n        ent.index.byteStart += numCharsAdded\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario B (inner)\n      else if (\n        insertIndex >= ent.index.byteStart &&\n        insertIndex < ent.index.byteEnd\n      ) {\n        // move end by num added\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario C (after)\n      // noop\n    }\n    return this\n  }\n\n  delete(removeStartIndex: number, removeEndIndex: number) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, removeStartIndex) +\n        this.unicodeText.slice(removeEndIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsRemoved = removeEndIndex - removeStartIndex\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (entirely outer)\n      if (\n        removeStartIndex <= ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteEnd\n      ) {\n        // delete slice (will get removed in final pass)\n        ent.index.byteStart = 0\n        ent.index.byteEnd = 0\n      }\n      // scenario B (entirely after)\n      else if (removeStartIndex > ent.index.byteEnd) {\n        // noop\n      }\n      // scenario C (partially after)\n      else if (\n        removeStartIndex > ent.index.byteStart &&\n        removeStartIndex <= ent.index.byteEnd &&\n        removeEndIndex > ent.index.byteEnd\n      ) {\n        // move end to remove start\n        ent.index.byteEnd = removeStartIndex\n      }\n      // scenario D (entirely inner)\n      else if (\n        removeStartIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move end by num removed\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario E (partially before)\n      else if (\n        removeStartIndex < ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move start to remove-start index, move end by num removed\n        ent.index.byteStart = removeStartIndex\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario F (entirely before)\n      else if (removeEndIndex < ent.index.byteStart) {\n        // move both by num removed\n        ent.index.byteStart -= numCharsRemoved\n        ent.index.byteEnd -= numCharsRemoved\n      }\n    }\n\n    // filter out any facets that were made irrelevant\n    this.facets = this.facets.filter(\n      (ent) => ent.index.byteStart < ent.index.byteEnd,\n    )\n    return this\n  }\n\n  /**\n   * Detects facets such as links and mentions\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  async detectFacets(agent: AtpAgent) {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      for (const facet of this.facets) {\n        for (const feature of facet.features) {\n          if (AppBskyRichtextFacet.isMention(feature)) {\n            const did = await agent\n              .resolveHandle({ handle: feature.did })\n              .catch((_) => undefined)\n              .then((res) => res?.data.did)\n            feature.did = did || ''\n          }\n        }\n      }\n      this.facets.sort(facetSort)\n    }\n  }\n\n  /**\n   * Detects facets such as links and mentions but does not resolve them\n   * Will produce invalid facets! For instance, mentions will not have their DIDs set.\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  detectFacetsWithoutResolution() {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n  }\n}\n\nconst facetSort = (a, b) => a.index.byteStart - b.index.byteStart\n\nfunction entitiesToFacets(text: UnicodeString, entities: Entity[]): Facet[] {\n  const facets: Facet[] = []\n  for (const ent of entities) {\n    if (ent.type === 'link') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [{ $type: 'app.bsky.richtext.facet#link', uri: ent.value }],\n      })\n    } else if (ent.type === 'mention') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [\n          { $type: 'app.bsky.richtext.facet#mention', did: ent.value },\n        ],\n      })\n    }\n  }\n  return facets\n}\n\nfunction cloneDeep<T>(v: T): T {\n  if (typeof v === 'undefined') {\n    return v\n  }\n  return JSON.parse(JSON.stringify(v))\n}\n", "import {\n  AppBskyActorDefs,\n  AppBskyFeedDefs,\n  AppBskyGraphDefs,\n  ComAtprotoLabelDefs,\n} from '../client/index'\n\n// labels\n// =\n\nexport type Label = ComAtprotoLabelDefs.Label\n\nexport type LabelPreference = 'ignore' | 'warn' | 'hide'\nexport type LabelDefinitionFlag = 'no-override' | 'adult' | 'unauthed'\nexport type LabelDefinitionOnWarnBehavior =\n  | 'blur'\n  | 'blur-media'\n  | 'alert'\n  | null\n\nexport interface LabelDefinitionLocalizedStrings {\n  name: string\n  description: string\n}\n\nexport type LabelDefinitionLocalizedStringsMap = Record<\n  string,\n  LabelDefinitionLocalizedStrings\n>\n\nexport interface LabelDefinition {\n  id: string\n  groupId: string\n  configurable: boolean\n  preferences: LabelPreference[]\n  flags: LabelDefinitionFlag[]\n  onwarn: LabelDefinitionOnWarnBehavior\n  strings: {\n    settings: LabelDefinitionLocalizedStringsMap\n    account: LabelDefinitionLocalizedStringsMap\n    content: LabelDefinitionLocalizedStringsMap\n  }\n}\n\nexport interface LabelGroupDefinition {\n  id: string\n  configurable: boolean\n  labels: LabelDefinition[]\n  strings: {\n    settings: LabelDefinitionLocalizedStringsMap\n  }\n}\n\nexport type LabelDefinitionMap = Record<string, LabelDefinition>\nexport type LabelGroupDefinitionMap = Record<string, LabelGroupDefinition>\n\n// labelers\n// =\n\ninterface Labeler {\n  did: string\n  displayName: string\n}\n\nexport interface LabelerSettings {\n  labeler: Labeler\n  labels: Record<string, LabelPreference>\n}\n\n// subjects\n// =\n\nexport type ModerationSubjectProfile =\n  | AppBskyActorDefs.ProfileViewBasic\n  | AppBskyActorDefs.ProfileView\n  | AppBskyActorDefs.ProfileViewDetailed\n\nexport type ModerationSubjectPost = AppBskyFeedDefs.PostView\n\nexport type ModerationSubjectFeedGenerator = AppBskyFeedDefs.GeneratorView\n\nexport type ModerationSubjectUserList =\n  | AppBskyGraphDefs.ListViewBasic\n  | AppBskyGraphDefs.ListView\n\nexport type ModerationSubject =\n  | ModerationSubjectProfile\n  | ModerationSubjectPost\n  | ModerationSubjectFeedGenerator\n  | ModerationSubjectUserList\n\n// behaviors\n// =\n\nexport type ModerationCauseSource =\n  | { type: 'user' }\n  | { type: 'list'; list: AppBskyGraphDefs.ListViewBasic }\n  | { type: 'labeler'; labeler: Labeler }\n\nexport type ModerationCause =\n  | { type: 'blocking'; source: ModerationCauseSource; priority: 3 }\n  | { type: 'blocked-by'; source: ModerationCauseSource; priority: 4 }\n  | { type: 'block-other'; source: ModerationCauseSource; priority: 4 }\n  | {\n      type: 'label'\n      source: ModerationCauseSource\n      label: Label\n      labelDef: LabelDefinition\n      setting: LabelPreference\n      priority: 1 | 2 | 5 | 7 | 8\n    }\n  | { type: 'muted'; source: ModerationCauseSource; priority: 6 }\n\nexport interface ModerationOpts {\n  userDid: string\n  adultContentEnabled: boolean\n  labels: Record<string, LabelPreference>\n  labelers: LabelerSettings[]\n}\n\nexport class ModerationDecision {\n  static noop() {\n    return new ModerationDecision()\n  }\n\n  constructor(\n    public cause: ModerationCause | undefined = undefined,\n    public alert: boolean = false,\n    public blur: boolean = false,\n    public blurMedia: boolean = false,\n    public filter: boolean = false,\n    public noOverride: boolean = false,\n    public additionalCauses: ModerationCause[] = [],\n    public did: string = '',\n  ) {}\n}\n\nexport interface ModerationUI {\n  filter?: boolean\n  blur?: boolean\n  alert?: boolean\n  cause?: ModerationCause\n  noOverride?: boolean\n}\n", "/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { LabelDefinitionMap } from '../types'\n\nexport const LABELS: LabelDefinitionMap = {\n  '!hide': {\n    id: '!hide',\n    preferences: ['hide'],\n    flags: ['no-override'],\n    onwarn: 'blur',\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Moderator Hide',\n          description: 'Moderator has chosen to hide the content.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Content Blocked',\n          description: 'This account has been hidden by the moderators.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Content Blocked',\n          description: 'This content has been hidden by the moderators.',\n        },\n      },\n    },\n  },\n  '!no-promote': {\n    id: '!no-promote',\n    preferences: ['hide'],\n    flags: [],\n    onwarn: null,\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Moderator Filter',\n          description: 'Moderator has chosen to filter the content from feeds.',\n        },\n      },\n      account: {\n        en: {\n          name: 'N/A',\n          description: 'N/A',\n        },\n      },\n      content: {\n        en: {\n          name: 'N/A',\n          description: 'N/A',\n        },\n      },\n    },\n  },\n  '!warn': {\n    id: '!warn',\n    preferences: ['warn'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Moderator Warn',\n          description:\n            'Moderator has chosen to set a general warning on the content.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Content Warning',\n          description:\n            'This account has received a general warning from moderators.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Content Warning',\n          description:\n            'This content has received a general warning from moderators.',\n        },\n      },\n    },\n  },\n  '!no-unauthenticated': {\n    id: '!no-unauthenticated',\n    preferences: ['hide'],\n    flags: ['no-override', 'unauthed'],\n    onwarn: 'blur',\n    groupId: 'system',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Sign-in Required',\n          description:\n            'This user has requested that their account only be shown to signed-in users.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Sign-in Required',\n          description:\n            'This user has requested that their account only be shown to signed-in users.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Sign-in Required',\n          description:\n            'This user has requested that their content only be shown to signed-in users.',\n        },\n      },\n    },\n  },\n  'dmca-violation': {\n    id: 'dmca-violation',\n    preferences: ['hide'],\n    flags: ['no-override'],\n    onwarn: 'blur',\n    groupId: 'legal',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Copyright Violation',\n          description: 'The content has received a DMCA takedown request.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Copyright Violation',\n          description:\n            'This account has received a DMCA takedown request. It will be restored if the concerns can be resolved.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Copyright Violation',\n          description:\n            'This content has received a DMCA takedown request. It will be restored if the concerns can be resolved.',\n        },\n      },\n    },\n  },\n  doxxing: {\n    id: 'doxxing',\n    preferences: ['hide'],\n    flags: ['no-override'],\n    onwarn: 'blur',\n    groupId: 'legal',\n    configurable: false,\n    strings: {\n      settings: {\n        en: {\n          name: 'Doxxing',\n          description:\n            'Information that reveals private information about someone which has been shared without the consent of the subject.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Doxxing',\n          description:\n            'This account has been reported to publish private information about someone without their consent. This report is currently under review.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Doxxing',\n          description:\n            'This content has been reported to include private information about someone without their consent.',\n        },\n      },\n    },\n  },\n  porn: {\n    id: 'porn',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'sexual',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Pornography',\n          description:\n            'Images of full-frontal nudity (genitalia) in any sexualized context, or explicit sexual activity (meaning contact with genitalia or breasts) even if partially covered. Includes graphic sexual cartoons (often jokes/memes).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This account contains imagery of full-frontal nudity or explicit sexual activity.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This content contains imagery of full-frontal nudity or explicit sexual activity.',\n        },\n      },\n    },\n  },\n  sexual: {\n    id: 'sexual',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'sexual',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Sexually Suggestive',\n          description:\n            'Content that does not meet the level of \"pornography\", but is still sexual. Some common examples have been selfies and \"hornyposting\" with underwear on, or partially naked (naked but covered, eg with hands or from side perspective). Sheer/see-through nipples may end up in this category.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Suggestive Content',\n          description:\n            'This account contains imagery which is sexually suggestive. Common examples include selfies in underwear or in partial undress.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Suggestive Content',\n          description:\n            'This content contains imagery which is sexually suggestive. Common examples include selfies in underwear or in partial undress.',\n        },\n      },\n    },\n  },\n  nudity: {\n    id: 'nudity',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'sexual',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Nudity',\n          description:\n            'Nudity which is not sexual, or that is primarily \"artistic\" in nature. For example: breastfeeding; classic art paintings and sculptures; newspaper images with some nudity; fashion modeling. \"Erotic photography\" is likely to end up in sexual or porn.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This account contains imagery which portrays nudity in a non-sexual or artistic setting.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Adult Content',\n          description:\n            'This content contains imagery which portrays nudity in a non-sexual or artistic setting.',\n        },\n      },\n    },\n  },\n  nsfl: {\n    id: 'nsfl',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'NSFL',\n          description:\n            '\"Not Suitable For Life.\" This includes graphic images like the infamous \"goatse\" (don\\'t look it up).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (NSFL)',\n          description:\n            'This account contains graphic images which are often referred to as \"Not Suitable For Life.\"',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (NSFL)',\n          description:\n            'This content contains graphic images which are often referred to as \"Not Suitable For Life.\"',\n        },\n      },\n    },\n  },\n  corpse: {\n    id: 'corpse',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Corpse',\n          description:\n            'Visual image of a dead human body in any context. Includes war images, hanging, funeral caskets. Does not include all figurative cases (cartoons), but can include realistic figurative images or renderings.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Corpse)',\n          description:\n            'This account contains images of a dead human body in any context. Includes war images, hanging, funeral caskets.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Corpse)',\n          description:\n            'This content contains images of a dead human body in any context. Includes war images, hanging, funeral caskets.',\n        },\n      },\n    },\n  },\n  gore: {\n    id: 'gore',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Gore',\n          description:\n            'Intended for shocking images, typically involving blood or visible wounds.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Gore)',\n          description:\n            'This account contains shocking images involving blood or visible wounds.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Gore)',\n          description:\n            'This content contains shocking images involving blood or visible wounds.',\n        },\n      },\n    },\n  },\n  torture: {\n    id: 'torture',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Torture',\n          description:\n            'Depictions of torture of a human or animal (animal cruelty).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Torture)',\n          description:\n            'This account contains depictions of torture of a human or animal.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Torture)',\n          description:\n            'This content contains depictions of torture of a human or animal.',\n        },\n      },\n    },\n  },\n  'self-harm': {\n    id: 'self-harm',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: ['adult'],\n    onwarn: 'blur-media',\n    groupId: 'violence',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Self-Harm',\n          description:\n            'A visual depiction (photo or figurative) of cutting, suicide, or similar.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Graphic Imagery (Self-Harm)',\n          description:\n            'This account includes depictions of cutting, suicide, or other forms of self-harm.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Graphic Imagery (Self-Harm)',\n          description:\n            'This content includes depictions of cutting, suicide, or other forms of self-harm.',\n        },\n      },\n    },\n  },\n  'intolerant-race': {\n    id: 'intolerant-race',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Racial Intolerance',\n          description: 'Hateful or intolerant content related to race.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Racial)',\n          description:\n            'This account includes hateful or intolerant content related to race.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Racial)',\n          description:\n            'This content includes hateful or intolerant views related to race.',\n        },\n      },\n    },\n  },\n  'intolerant-gender': {\n    id: 'intolerant-gender',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Gender Intolerance',\n          description:\n            'Hateful or intolerant content related to gender or gender identity.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Gender)',\n          description:\n            'This account includes hateful or intolerant content related to gender or gender identity.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Gender)',\n          description:\n            'This content includes hateful or intolerant views related to gender or gender identity.',\n        },\n      },\n    },\n  },\n  'intolerant-sexual-orientation': {\n    id: 'intolerant-sexual-orientation',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Sexual Orientation Intolerance',\n          description:\n            'Hateful or intolerant content related to sexual preferences.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Orientation)',\n          description:\n            'This account includes hateful or intolerant content related to sexual preferences.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Orientation)',\n          description:\n            'This content includes hateful or intolerant views related to sexual preferences.',\n        },\n      },\n    },\n  },\n  'intolerant-religion': {\n    id: 'intolerant-religion',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Religious Intolerance',\n          description:\n            'Hateful or intolerant content related to religious views or practices.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance (Religious)',\n          description:\n            'This account includes hateful or intolerant content related to religious views or practices.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance (Religious)',\n          description:\n            'This content includes hateful or intolerant views related to religious views or practices.',\n        },\n      },\n    },\n  },\n  intolerant: {\n    id: 'intolerant',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Intolerance',\n          description:\n            'A catchall for hateful or intolerant content which is not covered elsewhere.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerance',\n          description: 'This account includes hateful or intolerant content.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerance',\n          description: 'This content includes hateful or intolerant views.',\n        },\n      },\n    },\n  },\n  'icon-intolerant': {\n    id: 'icon-intolerant',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur-media',\n    groupId: 'intolerance',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Intolerant Iconography',\n          description:\n            'Visual imagery associated with a hate group, such as the KKK or Nazi, in any context (supportive, critical, documentary, etc).',\n        },\n      },\n      account: {\n        en: {\n          name: 'Intolerant Iconography',\n          description:\n            'This account includes imagery associated with a hate group such as the KKK or Nazis. This warning may apply to content any context, including critical or documentary purposes.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Intolerant Iconography',\n          description:\n            'This content includes imagery associated with a hate group such as the KKK or Nazis. This warning may apply to content any context, including critical or documentary purposes.',\n        },\n      },\n    },\n  },\n  threat: {\n    id: 'threat',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'rude',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Threats',\n          description:\n            'Statements or imagery published with the intent to threaten, intimidate, or harm.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Threats',\n          description:\n            'The moderators believe this account has published statements or imagery with the intent to threaten, intimidate, or harm others.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Threats',\n          description:\n            'The moderators believe this content was published with the intent to threaten, intimidate, or harm others.',\n        },\n      },\n    },\n  },\n  spoiler: {\n    id: 'spoiler',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'curation',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Spoiler',\n          description:\n            'Discussion about film, TV, etc which gives away plot points.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Spoiler Warning',\n          description:\n            'This account contains discussion about film, TV, etc which gives away plot points.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Spoiler Warning',\n          description:\n            'This content contains discussion about film, TV, etc which gives away plot points.',\n        },\n      },\n    },\n  },\n  spam: {\n    id: 'spam',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'spam',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Spam',\n          description:\n            'Repeat, low-quality messages which are clearly not designed to add to a conversation or space.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Spam',\n          description:\n            'This account publishes repeat, low-quality messages which are clearly not designed to add to a conversation or space.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Spam',\n          description:\n            'This content is a part of repeat, low-quality messages which are clearly not designed to add to a conversation or space.',\n        },\n      },\n    },\n  },\n  'account-security': {\n    id: 'account-security',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Security Concerns',\n          description:\n            'Content designed to hijack user accounts such as a phishing attack.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Security Warning',\n          description:\n            'This account has published content designed to hijack user accounts such as a phishing attack.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Security Warning',\n          description:\n            'This content is designed to hijack user accounts such as a phishing attack.',\n        },\n      },\n    },\n  },\n  'net-abuse': {\n    id: 'net-abuse',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'blur',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Network Attacks',\n          description:\n            'Content designed to attack network systems such as denial-of-service attacks.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Network Attack Warning',\n          description:\n            'This account has published content designed to attack network systems such as denial-of-service attacks.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Network Attack Warning',\n          description:\n            'This content is designed to attack network systems such as denial-of-service attacks.',\n        },\n      },\n    },\n  },\n  impersonation: {\n    id: 'impersonation',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'alert',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Impersonation',\n          description: 'Accounts which falsely assert some identity.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Impersonation Warning',\n          description:\n            'The moderators believe this account is lying about their identity.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Impersonation Warning',\n          description:\n            'The moderators believe this account is lying about their identity.',\n        },\n      },\n    },\n  },\n  scam: {\n    id: 'scam',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'alert',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Scam',\n          description: 'Fraudulent content.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Scam Warning',\n          description:\n            'The moderators believe this account publishes fraudulent content.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Scam Warning',\n          description: 'The moderators believe this is fraudulent content.',\n        },\n      },\n    },\n  },\n  misleading: {\n    id: 'misleading',\n    preferences: ['ignore', 'warn', 'hide'],\n    flags: [],\n    onwarn: 'alert',\n    groupId: 'misinfo',\n    configurable: true,\n    strings: {\n      settings: {\n        en: {\n          name: 'Misleading',\n          description: 'Accounts which share misleading information.',\n        },\n      },\n      account: {\n        en: {\n          name: 'Misleading',\n          description:\n            'The moderators believe this account is spreading misleading information.',\n        },\n      },\n      content: {\n        en: {\n          name: 'Misleading',\n          description:\n            'The moderators believe this account is spreading misleading information.',\n        },\n      },\n    },\n  },\n}\n", "import { AppBskyGraphDefs } from '../client/index'\nimport {\n  Label,\n  LabelPreference,\n  ModerationCause,\n  ModerationOpts,\n  ModerationDecision,\n} from './types'\nimport { LABELS } from './const/labels'\n\nexport class ModerationCauseAccumulator {\n  did = ''\n  causes: ModerationCause[] = []\n\n  constructor() {}\n\n  setDid(did: string) {\n    this.did = did\n  }\n\n  addBlocking(blocking: string | undefined) {\n    if (blocking) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'user' },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockingByList(\n    blockingByList: AppBskyGraphDefs.ListViewBasic | undefined,\n  ) {\n    if (blockingByList) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'list', list: blockingByList },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockedBy(blockedBy: boolean | undefined) {\n    if (blockedBy) {\n      this.causes.push({\n        type: 'blocked-by',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addBlockOther(blockOther: boolean | undefined) {\n    if (blockOther) {\n      this.causes.push({\n        type: 'block-other',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addLabel(label: Label, opts: ModerationOpts) {\n    // look up the label definition\n    const labelDef = LABELS[label.val]\n    if (!labelDef) {\n      // ignore labels we don't understand\n      return\n    }\n\n    // look up the label preference\n    const isSelf = label.src === this.did\n    const labeler = isSelf\n      ? undefined\n      : opts.labelers.find((s) => s.labeler.did === label.src)\n\n    /* TODO when 3P labelers are supported\n    if (!isSelf && !labeler) {\n      return // skip labelers not configured by the user\n    }*/\n\n    // establish the label preference for interpretation\n    let labelPref: LabelPreference = 'ignore'\n    if (!labelDef.configurable) {\n      labelPref = labelDef.preferences[0]\n    } else if (labelDef.flags.includes('adult') && !opts.adultContentEnabled) {\n      labelPref = 'hide'\n    } else if (labeler?.labels[label.val]) {\n      labelPref = labeler.labels[label.val]\n    } else if (opts.labels[label.val]) {\n      labelPref = opts.labels[label.val]\n    }\n\n    // ignore labels the user has asked to ignore\n    if (labelPref === 'ignore') {\n      return\n    }\n\n    // ignore 'unauthed' labels when the user is authed\n    if (labelDef.flags.includes('unauthed') && !!opts.userDid) {\n      return\n    }\n\n    // establish the priority of the label\n    let priority: 1 | 2 | 5 | 7 | 8\n    if (labelDef.flags.includes('no-override')) {\n      priority = 1\n    } else if (labelPref === 'hide') {\n      priority = 2\n    } else if (labelDef.onwarn === 'blur') {\n      priority = 5\n    } else if (labelDef.onwarn === 'blur-media') {\n      priority = 7\n    } else {\n      priority = 8\n    }\n\n    this.causes.push({\n      type: 'label',\n      source:\n        isSelf || !labeler\n          ? { type: 'user' }\n          : { type: 'labeler', labeler: labeler.labeler },\n      label,\n      labelDef,\n      setting: labelPref,\n      priority,\n    })\n  }\n\n  addMuted(muted: boolean | undefined) {\n    if (muted) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedByList(mutedByList: AppBskyGraphDefs.ListViewBasic | undefined) {\n    if (mutedByList) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'list', list: mutedByList },\n        priority: 6,\n      })\n    }\n  }\n\n  finalizeDecision(opts: ModerationOpts): ModerationDecision {\n    const mod = new ModerationDecision()\n    mod.did = this.did\n    if (!this.causes.length) {\n      return mod\n    }\n\n    // sort the causes by priority and then choose the top one\n    this.causes.sort((a, b) => a.priority - b.priority)\n    mod.cause = this.causes[0]\n    mod.additionalCauses = this.causes.slice(1)\n\n    // blocked user\n    if (\n      mod.cause.type === 'blocking' ||\n      mod.cause.type === 'blocked-by' ||\n      mod.cause.type === 'block-other'\n    ) {\n      // filter and blur, dont allow override\n      mod.filter = true\n      mod.blur = true\n      mod.noOverride = true\n    }\n    // muted user\n    else if (mod.cause.type === 'muted') {\n      // filter and blur\n      mod.filter = true\n      mod.blur = true\n    }\n    // labeled subject\n    else if (mod.cause.type === 'label') {\n      // 'hide' setting\n      if (mod.cause.setting === 'hide') {\n        // filter\n        mod.filter = true\n      }\n\n      // 'hide' and 'warn' setting, apply onwarn\n      switch (mod.cause.labelDef.onwarn) {\n        case 'alert':\n          mod.alert = true\n          break\n        case 'blur':\n          mod.blur = true\n          break\n        case 'blur-media':\n          mod.blurMedia = true\n          break\n        case null:\n          // do nothing\n          break\n      }\n\n      // apply noOverride as needed\n      if (mod.cause.labelDef.flags.includes('no-override')) {\n        mod.noOverride = true\n      } else if (\n        mod.cause.labelDef.flags.includes('adult') &&\n        !opts.adultContentEnabled\n      ) {\n        mod.noOverride = true\n      }\n    }\n\n    return mod\n  }\n}\n", "import { ModerationCauseAccumulator } from '../accumulator'\nimport {\n  Label,\n  ModerationSubjectProfile,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decideAccount(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  acc.setDid(subject.did)\n  if (subject.viewer?.muted) {\n    if (subject.viewer?.mutedByList) {\n      acc.addMutedByList(subject.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.viewer?.muted)\n    }\n  }\n  if (subject.viewer?.blocking) {\n    if (subject.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.viewer?.blockedBy)\n\n  for (const label of filterAccountLabels(subject.labels)) {\n    acc.addLabel(label, opts)\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function filterAccountLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter(\n    (label) =>\n      !label.uri.endsWith('/app.bsky.actor.profile/self') ||\n      label.val === '!no-unauthenticated',\n  )\n}\n", "import { ModerationCauseAccumulator } from '../accumulator'\nimport {\n  Label,\n  ModerationSubjectProfile,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decideProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  acc.setDid(subject.did)\n\n  for (const label of filterProfileLabels(subject.labels)) {\n    acc.addLabel(label, opts)\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function filterProfileLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter((label) =>\n    label.uri.endsWith('/app.bsky.actor.profile/self'),\n  )\n}\n", "import { ModerationCauseAccumulator } from '../accumulator'\nimport {\n  ModerationSubjectPost,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decidePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  acc.setDid(subject.author.did)\n\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel(label, opts)\n    }\n  }\n\n  return acc.finalizeDecision(opts)\n}\n", "import { AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia } from '../../client'\nimport { ModerationCauseAccumulator } from '../accumulator'\nimport { ModerationOpts, ModerationDecision } from '../types'\nimport { decideAccount } from './account'\n\nexport function decideQuotedPost(\n  subject: AppBskyEmbedRecord.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  if (AppBskyEmbedRecord.isViewRecord(subject.record)) {\n    acc.setDid(subject.record.author.did)\n\n    if (subject.record.labels?.length) {\n      for (const label of subject.record.labels) {\n        acc.addLabel(label, opts)\n      }\n    }\n  } else if (AppBskyEmbedRecord.isViewBlocked(subject.record)) {\n    acc.setDid(subject.record.author.did)\n    if (subject.record.author.viewer?.blocking) {\n      acc.addBlocking(subject.record.author.viewer?.blocking)\n    } else if (subject.record.author.viewer?.blockedBy) {\n      acc.addBlockedBy(subject.record.author.viewer?.blockedBy)\n    } else {\n      acc.addBlockOther(true)\n    }\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function decideQuotedPostAccount(\n  subject: AppBskyEmbedRecord.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  if (AppBskyEmbedRecord.isViewRecord(subject.record)) {\n    return decideAccount(subject.record.author, opts)\n  }\n  return ModerationDecision.noop()\n}\n\nexport function decideQuotedPostWithMedia(\n  subject: AppBskyEmbedRecordWithMedia.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationCauseAccumulator()\n\n  if (AppBskyEmbedRecord.isViewRecord(subject.record.record)) {\n    acc.setDid(subject.record.record.author.did)\n\n    if (subject.record.record.labels?.length) {\n      for (const label of subject.record.record.labels) {\n        acc.addLabel(label, opts)\n      }\n    }\n  } else if (AppBskyEmbedRecord.isViewBlocked(subject.record.record)) {\n    acc.setDid(subject.record.record.author.did)\n    if (subject.record.record.author.viewer?.blocking) {\n      acc.addBlocking(subject.record.record.author.viewer?.blocking)\n    } else if (subject.record.record.author.viewer?.blockedBy) {\n      acc.addBlockedBy(subject.record.record.author.viewer?.blockedBy)\n    } else {\n      acc.addBlockOther(true)\n    }\n  }\n\n  return acc.finalizeDecision(opts)\n}\n\nexport function decideQuotedPostWithMediaAccount(\n  subject: AppBskyEmbedRecordWithMedia.View,\n  opts: ModerationOpts,\n): ModerationDecision {\n  if (AppBskyEmbedRecord.isViewRecord(subject.record.record)) {\n    return decideAccount(subject.record.record.author, opts)\n  }\n  return ModerationDecision.noop()\n}\n", "import {\n  ModerationSubjectFeedGenerator,\n  ModerationDecision,\n  ModerationOpts,\n} from '../types'\n\nexport function decideFeedGenerator(\n  _subject: ModerationSubjectFeedGenerator,\n  _opts: ModerationOpts,\n): ModerationDecision {\n  // TODO handle labels applied on the feed generator itself\n  return ModerationDecision.noop()\n}\n", "import {\n  ModerationSubjectUserList,\n  ModerationOpts,\n  ModerationDecision,\n} from '../types'\n\nexport function decideUserList(\n  _subject: ModerationSubjectUserList,\n  _opts: ModerationOpts,\n): ModerationDecision {\n  // TODO handle labels applied on the list itself\n  return ModerationDecision.noop()\n}\n", "import { AppBskyEmbedRecord, AppBskyEmbedRecordWithMedia } from '../client'\nimport { ModerationDecision, ModerationUI } from './types'\n\nexport function takeHighestPriorityDecision(\n  ...decisions: (ModerationDecision | undefined)[]\n): ModerationDecision {\n  // remove undefined decisions\n  const filtered = decisions.filter((d) => !!d) as ModerationDecision[]\n  if (filtered.length === 0) {\n    return ModerationDecision.noop()\n  }\n\n  // sort by highest priority\n  filtered.sort((a, b) => {\n    if (a.cause && b.cause) {\n      return a.cause.priority - b.cause.priority\n    }\n    if (a.cause) {\n      return -1\n    }\n    if (b.cause) {\n      return 1\n    }\n    return 0\n  })\n\n  // use the top priority\n  return filtered[0]\n}\n\nexport function downgradeDecision(\n  decision: ModerationDecision,\n  to: 'blur' | 'alert' | 'noop',\n) {\n  decision.filter = false\n  decision.noOverride = false\n  if (to === 'noop') {\n    decision.blur = false\n    decision.blurMedia = false\n    decision.alert = false\n    delete decision.cause\n  } else if (to === 'alert') {\n    decision.blur = false\n    decision.blurMedia = false\n    decision.alert = true\n  }\n}\n\nexport function isModerationDecisionNoop(\n  decision: ModerationDecision | undefined,\n  { ignoreFilter }: { ignoreFilter: boolean } = { ignoreFilter: false },\n): boolean {\n  if (!decision) {\n    return true\n  }\n  if (decision.alert) {\n    return false\n  }\n  if (decision.blur) {\n    return false\n  }\n  if (decision.filter && !ignoreFilter) {\n    return false\n  }\n  return true\n}\n\nexport function isQuotedPost(embed: unknown): embed is AppBskyEmbedRecord.View {\n  return Boolean(embed && AppBskyEmbedRecord.isView(embed))\n}\n\nexport function isQuotedPostWithMedia(\n  embed: unknown,\n): embed is AppBskyEmbedRecordWithMedia.View {\n  return Boolean(embed && AppBskyEmbedRecordWithMedia.isView(embed))\n}\n\nexport function toModerationUI(decision: ModerationDecision): ModerationUI {\n  return {\n    cause: decision.cause,\n    filter: decision.filter,\n    blur: decision.blur,\n    alert: decision.alert,\n    noOverride: decision.noOverride,\n  }\n}\n", "import { AppBskyActorDefs } from '../client/index'\nimport {\n  ModerationSubjectProfile,\n  ModerationSubjectPost,\n  ModerationSubjectFeedGenerator,\n  ModerationSubjectUserList,\n  ModerationOpts,\n  ModerationDecision,\n  ModerationUI,\n} from './types'\nimport { decideAccount } from './subjects/account'\nimport { decideProfile } from './subjects/profile'\nimport { decidePost } from './subjects/post'\nimport {\n  decideQuotedPost,\n  decideQuotedPostAccount,\n  decideQuotedPostWithMedia,\n  decideQuotedPostWithMediaAccount,\n} from './subjects/quoted-post'\nimport { decideFeedGenerator } from './subjects/feed-generator'\nimport { decideUserList } from './subjects/user-list'\nimport {\n  takeHighestPriorityDecision,\n  downgradeDecision,\n  isModerationDecisionNoop,\n  isQuotedPost,\n  isQuotedPostWithMedia,\n  toModerationUI,\n} from './util'\n\n// profiles\n// =\n\nexport interface ProfileModeration {\n  decisions: {\n    account: ModerationDecision\n    profile: ModerationDecision\n  }\n  account: ModerationUI\n  profile: ModerationUI\n  avatar: ModerationUI\n}\n\nexport function moderateProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ProfileModeration {\n  // decide the moderation the account and the profile\n  const account = decideAccount(subject, opts)\n  const profile = decideProfile(subject, opts)\n\n  // if the decision is supposed to blur media,\n  // - have it apply to the view if it's on the account\n  // - otherwise ignore it\n  if (account.blurMedia) {\n    account.blur = true\n  }\n\n  // dont give profile.filter because that is meaningless\n  profile.filter = false\n\n  // downgrade based on authorship\n  if (!isModerationDecisionNoop(account) && account.did === opts.userDid) {\n    downgradeDecision(account, 'alert')\n  }\n  if (!isModerationDecisionNoop(profile) && profile.did === opts.userDid) {\n    downgradeDecision(profile, 'alert')\n  }\n\n  // derive avatar blurring from account & profile, but override for mutes because that shouldnt blur\n  let avatarBlur = false\n  let avatarNoOverride = false\n  if ((account.blur || account.blurMedia) && account.cause?.type !== 'muted') {\n    avatarBlur = true\n    avatarNoOverride = account.noOverride || profile.noOverride\n  } else if (profile.blur || profile.blurMedia) {\n    avatarBlur = true\n    avatarNoOverride = account.noOverride || profile.noOverride\n  }\n\n  // dont blur the account for blocking & muting\n  if (\n    account.cause?.type === 'blocking' ||\n    account.cause?.type === 'blocked-by' ||\n    account.cause?.type === 'muted'\n  ) {\n    account.blur = false\n    account.noOverride = false\n  }\n\n  return {\n    decisions: { account, profile },\n\n    // moderate all content based on account\n    account:\n      account.filter || account.blur || account.alert\n        ? toModerationUI(account)\n        : {},\n\n    // moderate the profile details based on the profile\n    profile:\n      profile.filter || profile.blur || profile.alert\n        ? toModerationUI(profile)\n        : {},\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: avatarBlur,\n      alert: account.alert || profile.alert,\n      noOverride: avatarNoOverride,\n    },\n  }\n}\n\n// posts\n// =\n\nexport interface PostModeration {\n  decisions: {\n    post: ModerationDecision\n    account: ModerationDecision\n    profile: ModerationDecision\n    quote?: ModerationDecision\n    quotedAccount?: ModerationDecision\n  }\n  content: ModerationUI\n  avatar: ModerationUI\n  embed: ModerationUI\n}\n\nexport function moderatePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): PostModeration {\n  // decide the moderation for the post, the post author's account,\n  // and the post author's profile\n  const post = decidePost(subject, opts)\n  const account = decideAccount(subject.author, opts)\n  const profile = decideProfile(subject.author, opts)\n\n  // decide the moderation for any quoted posts\n  let quote: ModerationDecision | undefined\n  let quotedAccount: ModerationDecision | undefined\n  if (isQuotedPost(subject.embed)) {\n    quote = decideQuotedPost(subject.embed, opts)\n    quotedAccount = decideQuotedPostAccount(subject.embed, opts)\n  } else if (isQuotedPostWithMedia(subject.embed)) {\n    quote = decideQuotedPostWithMedia(subject.embed, opts)\n    quotedAccount = decideQuotedPostWithMediaAccount(subject.embed, opts)\n  }\n  if (quote?.blurMedia) {\n    quote.blur = true // treat blurMedia of quote as blur of quote\n  }\n\n  // downgrade based on authorship\n  if (!isModerationDecisionNoop(post) && post.did === opts.userDid) {\n    downgradeDecision(post, 'blur')\n  }\n  if (account.cause && account.did === opts.userDid) {\n    downgradeDecision(account, 'noop')\n  }\n  if (profile.cause && profile.did === opts.userDid) {\n    downgradeDecision(profile, 'noop')\n  }\n  if (quote && !isModerationDecisionNoop(quote) && quote.did === opts.userDid) {\n    downgradeDecision(quote, 'blur')\n  }\n  if (\n    quotedAccount &&\n    !isModerationDecisionNoop(quotedAccount) &&\n    quotedAccount.did === opts.userDid\n  ) {\n    downgradeDecision(quotedAccount, 'noop')\n  }\n\n  // derive filtering from feeds from the post, post author's account,\n  // quoted post, and quoted post author's account\n  const mergedForFeed = takeHighestPriorityDecision(\n    post,\n    account,\n    quote,\n    quotedAccount,\n  )\n\n  // derive view blurring from the post and the post author's account\n  const mergedForView = takeHighestPriorityDecision(post, account)\n\n  // derive embed blurring from the quoted post and the quoted post author's account\n  const mergedQuote = takeHighestPriorityDecision(quote, quotedAccount)\n\n  // derive avatar blurring from account & profile, but override for mutes because that shouldnt blur\n  let blurAvatar = false\n  if ((account.blur || account.blurMedia) && account.cause?.type !== 'muted') {\n    blurAvatar = true\n  } else if (\n    (profile.blur || profile.blurMedia) &&\n    profile.cause?.type !== 'muted'\n  ) {\n    blurAvatar = true\n  }\n\n  return {\n    decisions: { post, account, profile, quote, quotedAccount },\n\n    // content behaviors are pulled from feed and view derivations above\n    content: {\n      cause: !isModerationDecisionNoop(mergedForView)\n        ? mergedForView.cause\n        : mergedForFeed.filter\n        ? mergedForFeed.cause\n        : undefined,\n      filter: mergedForFeed.filter,\n      blur: mergedForView.blur,\n      alert: mergedForView.alert,\n      noOverride: mergedForView.noOverride,\n    },\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: blurAvatar,\n      alert: account.alert || profile.alert,\n      noOverride: account.noOverride || profile.noOverride,\n    },\n\n    // blur the embed if the quoted post required it,\n    // or else if the account or post decision was to blur media\n    embed: !isModerationDecisionNoop(mergedQuote, { ignoreFilter: true })\n      ? {\n          cause: mergedQuote.cause,\n          blur: mergedQuote.blur,\n          alert: mergedQuote.alert,\n          noOverride: mergedQuote.noOverride,\n        }\n      : account.blurMedia\n      ? {\n          cause: account.cause,\n          blur: true,\n          noOverride: account.noOverride,\n        }\n      : post.blurMedia\n      ? {\n          cause: post.cause,\n          blur: true,\n          noOverride: post.noOverride,\n        }\n      : {},\n  }\n}\n\n// feed generators\n// =\n\nexport interface FeedGeneratorModeration {\n  decisions: {\n    feedGenerator: ModerationDecision\n    account: ModerationDecision\n    profile: ModerationDecision\n  }\n  content: ModerationUI\n  avatar: ModerationUI\n}\n\nexport function moderateFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): FeedGeneratorModeration {\n  // decide the moderation for the generator, the generator creator's account,\n  // and the generator creator's profile\n  const feedGenerator = decideFeedGenerator(subject, opts)\n  const account = decideAccount(subject.creator, opts)\n  const profile = decideProfile(subject.creator, opts)\n\n  // derive behaviors from feeds from the generator and the generator's account\n  const merged = takeHighestPriorityDecision(feedGenerator, account)\n\n  return {\n    decisions: { feedGenerator, account, profile },\n\n    // content behaviors are pulled from merged decisions\n    content: {\n      cause: isModerationDecisionNoop(merged) ? undefined : merged.cause,\n      filter: merged.filter,\n      blur: merged.blur,\n      alert: merged.alert,\n      noOverride: merged.noOverride,\n    },\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: account.blurMedia || profile.blurMedia,\n      alert: account.alert,\n      noOverride: account.noOverride || profile.noOverride,\n    },\n  }\n}\n\n// user lists\n// =\n\nexport interface UserListModeration {\n  decisions: {\n    userList: ModerationDecision\n    account: ModerationDecision\n    profile: ModerationDecision\n  }\n  content: ModerationUI\n  avatar: ModerationUI\n}\n\nexport function moderateUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): UserListModeration {\n  // decide the moderation for the list, the list creator's account,\n  // and the list creator's profile\n  const userList = decideUserList(subject, opts)\n  const account = AppBskyActorDefs.isProfileViewBasic(subject.creator)\n    ? decideAccount(subject.creator, opts)\n    : ModerationDecision.noop()\n  const profile = AppBskyActorDefs.isProfileViewBasic(subject.creator)\n    ? decideProfile(subject.creator, opts)\n    : ModerationDecision.noop()\n\n  // derive behaviors from feeds from the list and the list's account\n  const merged = takeHighestPriorityDecision(userList, account)\n\n  return {\n    decisions: { userList, account, profile },\n\n    // content behaviors are pulled from merged decisions\n    content: {\n      cause: isModerationDecisionNoop(merged) ? undefined : merged.cause,\n      filter: merged.filter,\n      blur: merged.blur,\n      alert: merged.alert,\n      noOverride: merged.noOverride,\n    },\n\n    // blur or alert the avatar based on the account and profile decisions\n    avatar: {\n      blur: account.blurMedia || profile.blurMedia,\n      alert: account.alert,\n      noOverride: account.noOverride || profile.noOverride,\n    },\n  }\n}\n", "/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { LabelGroupDefinitionMap } from '../types'\nimport { LABELS } from './labels'\n\nexport const LABEL_GROUPS: LabelGroupDefinitionMap = {\n  system: {\n    id: 'system',\n    configurable: false,\n    labels: [\n      LABELS['!hide'],\n      LABELS['!no-promote'],\n      LABELS['!warn'],\n      LABELS['!no-unauthenticated'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'System',\n          description: 'Moderator overrides for special cases.',\n        },\n      },\n    },\n  },\n  legal: {\n    id: 'legal',\n    configurable: false,\n    labels: [LABELS['dmca-violation'], LABELS['doxxing']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Legal',\n          description: 'Content removed for legal reasons.',\n        },\n      },\n    },\n  },\n  sexual: {\n    id: 'sexual',\n    configurable: true,\n    labels: [LABELS['porn'], LABELS['sexual'], LABELS['nudity']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Adult Content',\n          description: 'Content which is sexual in nature.',\n        },\n      },\n    },\n  },\n  violence: {\n    id: 'violence',\n    configurable: true,\n    labels: [\n      LABELS['nsfl'],\n      LABELS['corpse'],\n      LABELS['gore'],\n      LABELS['torture'],\n      LABELS['self-harm'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'Violence',\n          description: 'Content which is violent or deeply disturbing.',\n        },\n      },\n    },\n  },\n  intolerance: {\n    id: 'intolerance',\n    configurable: true,\n    labels: [\n      LABELS['intolerant-race'],\n      LABELS['intolerant-gender'],\n      LABELS['intolerant-sexual-orientation'],\n      LABELS['intolerant-religion'],\n      LABELS['intolerant'],\n      LABELS['icon-intolerant'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'Intolerance',\n          description:\n            'Content or behavior which is hateful or intolerant toward a group of people.',\n        },\n      },\n    },\n  },\n  rude: {\n    id: 'rude',\n    configurable: true,\n    labels: [LABELS['threat']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Rude',\n          description: 'Behavior which is rude toward other users.',\n        },\n      },\n    },\n  },\n  curation: {\n    id: 'curation',\n    configurable: true,\n    labels: [LABELS['spoiler']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Curational',\n          description:\n            'Subjective moderation geared towards curating a more positive environment.',\n        },\n      },\n    },\n  },\n  spam: {\n    id: 'spam',\n    configurable: true,\n    labels: [LABELS['spam']],\n    strings: {\n      settings: {\n        en: {\n          name: 'Spam',\n          description: \"Content which doesn't add to the conversation.\",\n        },\n      },\n    },\n  },\n  misinfo: {\n    id: 'misinfo',\n    configurable: true,\n    labels: [\n      LABELS['account-security'],\n      LABELS['net-abuse'],\n      LABELS['impersonation'],\n      LABELS['scam'],\n      LABELS['misleading'],\n    ],\n    strings: {\n      settings: {\n        en: {\n          name: 'Misinformation',\n          description: 'Content which misleads or defrauds users.',\n        },\n      },\n    },\n  },\n}\n", "import { AtUri } from '@atproto/syntax'\nimport { AtpAgent } from './agent'\nimport {\n  AppBskyFeedPost,\n  AppBskyActorProfile,\n  AppBskyActorDefs,\n  ComAtprotoRepoPutRecord,\n} from './client'\nimport {\n  BskyPreferences,\n  BskyLabelPreference,\n  BskyFeedViewPreference,\n  BskyThreadViewPreference,\n} from './types'\n\nconst FEED_VIEW_PREF_DEFAULTS = {\n  hideReplies: false,\n  hideRepliesByUnfollowed: false,\n  hideRepliesByLikeCount: 0,\n  hideReposts: false,\n  hideQuotePosts: false,\n}\nconst THREAD_VIEW_PREF_DEFAULTS = {\n  sort: 'oldest',\n  prioritizeFollowedUsers: true,\n}\n\ndeclare global {\n  interface Array<T> {\n    findLast(\n      predicate: (value: T, index: number, obj: T[]) => unknown,\n      thisArg?: any,\n    ): T\n  }\n}\n\nexport class BskyAgent extends AtpAgent {\n  get app() {\n    return this.api.app\n  }\n\n  getTimeline: typeof this.api.app.bsky.feed.getTimeline = (params, opts) =>\n    this.api.app.bsky.feed.getTimeline(params, opts)\n\n  getAuthorFeed: typeof this.api.app.bsky.feed.getAuthorFeed = (params, opts) =>\n    this.api.app.bsky.feed.getAuthorFeed(params, opts)\n\n  getActorLikes: typeof this.api.app.bsky.feed.getActorLikes = (params, opts) =>\n    this.api.app.bsky.feed.getActorLikes(params, opts)\n\n  getPostThread: typeof this.api.app.bsky.feed.getPostThread = (params, opts) =>\n    this.api.app.bsky.feed.getPostThread(params, opts)\n\n  getPost: typeof this.api.app.bsky.feed.post.get = (params) =>\n    this.api.app.bsky.feed.post.get(params)\n\n  getPosts: typeof this.api.app.bsky.feed.getPosts = (params, opts) =>\n    this.api.app.bsky.feed.getPosts(params, opts)\n\n  getLikes: typeof this.api.app.bsky.feed.getLikes = (params, opts) =>\n    this.api.app.bsky.feed.getLikes(params, opts)\n\n  getRepostedBy: typeof this.api.app.bsky.feed.getRepostedBy = (params, opts) =>\n    this.api.app.bsky.feed.getRepostedBy(params, opts)\n\n  getFollows: typeof this.api.app.bsky.graph.getFollows = (params, opts) =>\n    this.api.app.bsky.graph.getFollows(params, opts)\n\n  getFollowers: typeof this.api.app.bsky.graph.getFollowers = (params, opts) =>\n    this.api.app.bsky.graph.getFollowers(params, opts)\n\n  getProfile: typeof this.api.app.bsky.actor.getProfile = (params, opts) =>\n    this.api.app.bsky.actor.getProfile(params, opts)\n\n  getProfiles: typeof this.api.app.bsky.actor.getProfiles = (params, opts) =>\n    this.api.app.bsky.actor.getProfiles(params, opts)\n\n  getSuggestions: typeof this.api.app.bsky.actor.getSuggestions = (\n    params,\n    opts,\n  ) => this.api.app.bsky.actor.getSuggestions(params, opts)\n\n  searchActors: typeof this.api.app.bsky.actor.searchActors = (params, opts) =>\n    this.api.app.bsky.actor.searchActors(params, opts)\n\n  searchActorsTypeahead: typeof this.api.app.bsky.actor.searchActorsTypeahead =\n    (params, opts) =>\n      this.api.app.bsky.actor.searchActorsTypeahead(params, opts)\n\n  listNotifications: typeof this.api.app.bsky.notification.listNotifications = (\n    params,\n    opts,\n  ) => this.api.app.bsky.notification.listNotifications(params, opts)\n\n  countUnreadNotifications: typeof this.api.app.bsky.notification.getUnreadCount =\n    (params, opts) =>\n      this.api.app.bsky.notification.getUnreadCount(params, opts)\n\n  async post(\n    record: Partial<AppBskyFeedPost.Record> &\n      Omit<AppBskyFeedPost.Record, 'createdAt'>,\n  ) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    record.createdAt = record.createdAt || new Date().toISOString()\n    return this.api.app.bsky.feed.post.create(\n      { repo: this.session.did },\n      record as AppBskyFeedPost.Record,\n    )\n  }\n\n  async deletePost(postUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const postUrip = new AtUri(postUri)\n    return await this.api.app.bsky.feed.post.delete({\n      repo: postUrip.hostname,\n      rkey: postUrip.rkey,\n    })\n  }\n\n  async like(uri: string, cid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.feed.like.create(\n      { repo: this.session.did },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteLike(likeUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const likeUrip = new AtUri(likeUri)\n    return await this.api.app.bsky.feed.like.delete({\n      repo: likeUrip.hostname,\n      rkey: likeUrip.rkey,\n    })\n  }\n\n  async repost(uri: string, cid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.feed.repost.create(\n      { repo: this.session.did },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteRepost(repostUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const repostUrip = new AtUri(repostUri)\n    return await this.api.app.bsky.feed.repost.delete({\n      repo: repostUrip.hostname,\n      rkey: repostUrip.rkey,\n    })\n  }\n\n  async follow(subjectDid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.graph.follow.create(\n      { repo: this.session.did },\n      {\n        subject: subjectDid,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteFollow(followUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const followUrip = new AtUri(followUri)\n    return await this.api.app.bsky.graph.follow.delete({\n      repo: followUrip.hostname,\n      rkey: followUrip.rkey,\n    })\n  }\n\n  async upsertProfile(\n    updateFn: (\n      existing: AppBskyActorProfile.Record | undefined,\n    ) => AppBskyActorProfile.Record | Promise<AppBskyActorProfile.Record>,\n  ) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n\n    let retriesRemaining = 5\n    while (retriesRemaining >= 0) {\n      // fetch existing\n      const existing = await this.com.atproto.repo\n        .getRecord({\n          repo: this.session.did,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n        })\n        .catch((_) => undefined)\n\n      // run the update\n      const updated = await updateFn(existing?.data.value)\n      if (updated) {\n        updated.$type = 'app.bsky.actor.profile'\n      }\n\n      // validate the record\n      const validation = AppBskyActorProfile.validateRecord(updated)\n      if (!validation.success) {\n        throw validation.error\n      }\n\n      try {\n        // attempt the put\n        await this.com.atproto.repo.putRecord({\n          repo: this.session.did,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n          record: updated,\n          swapRecord: existing?.data.cid || null,\n        })\n      } catch (e: unknown) {\n        if (\n          retriesRemaining > 0 &&\n          e instanceof ComAtprotoRepoPutRecord.InvalidSwapError\n        ) {\n          // try again\n          retriesRemaining--\n          continue\n        } else {\n          throw e\n        }\n      }\n      break\n    }\n  }\n\n  async mute(actor: string) {\n    return this.api.app.bsky.graph.muteActor({ actor })\n  }\n\n  async unmute(actor: string) {\n    return this.api.app.bsky.graph.unmuteActor({ actor })\n  }\n\n  async muteModList(uri: string) {\n    return this.api.app.bsky.graph.muteActorList({\n      list: uri,\n    })\n  }\n\n  async unmuteModList(uri: string) {\n    return this.api.app.bsky.graph.unmuteActorList({\n      list: uri,\n    })\n  }\n\n  async blockModList(uri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.graph.listblock.create(\n      { repo: this.session.did },\n      {\n        subject: uri,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async unblockModList(uri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const listInfo = await this.api.app.bsky.graph.getList({\n      list: uri,\n      limit: 1,\n    })\n    if (!listInfo.data.list.viewer?.blocked) {\n      return\n    }\n    const { rkey } = new AtUri(listInfo.data.list.viewer.blocked)\n    return await this.api.app.bsky.graph.listblock.delete({\n      repo: this.session.did,\n      rkey,\n    })\n  }\n\n  async updateSeenNotifications(seenAt?: string) {\n    seenAt = seenAt || new Date().toISOString()\n    return this.api.app.bsky.notification.updateSeen({\n      seenAt,\n    })\n  }\n\n  async getPreferences(): Promise<BskyPreferences> {\n    const prefs: BskyPreferences = {\n      feeds: {\n        saved: undefined,\n        pinned: undefined,\n      },\n      feedViewPrefs: {\n        home: {\n          ...FEED_VIEW_PREF_DEFAULTS,\n        },\n      },\n      threadViewPrefs: { ...THREAD_VIEW_PREF_DEFAULTS },\n      adultContentEnabled: false,\n      contentLabels: {},\n      birthDate: undefined,\n    }\n    const res = await this.app.bsky.actor.getPreferences({})\n    for (const pref of res.data.preferences) {\n      if (\n        AppBskyActorDefs.isAdultContentPref(pref) &&\n        AppBskyActorDefs.validateAdultContentPref(pref).success\n      ) {\n        prefs.adultContentEnabled = pref.enabled\n      } else if (\n        AppBskyActorDefs.isContentLabelPref(pref) &&\n        AppBskyActorDefs.validateAdultContentPref(pref).success\n      ) {\n        let value = pref.visibility\n        if (value === 'show') {\n          value = 'ignore'\n        }\n        if (value === 'ignore' || value === 'warn' || value === 'hide') {\n          prefs.contentLabels[pref.label] = value as BskyLabelPreference\n        }\n      } else if (\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success\n      ) {\n        prefs.feeds.saved = pref.saved\n        prefs.feeds.pinned = pref.pinned\n      } else if (\n        AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n        AppBskyActorDefs.validatePersonalDetailsPref(pref).success\n      ) {\n        if (pref.birthDate) {\n          prefs.birthDate = new Date(pref.birthDate)\n        }\n      } else if (\n        AppBskyActorDefs.isFeedViewPref(pref) &&\n        AppBskyActorDefs.validateFeedViewPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, feed, ...v } = pref\n        prefs.feedViewPrefs[pref.feed] = { ...FEED_VIEW_PREF_DEFAULTS, ...v }\n      } else if (\n        AppBskyActorDefs.isThreadViewPref(pref) &&\n        AppBskyActorDefs.validateThreadViewPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.threadViewPrefs = { ...prefs.threadViewPrefs, ...v }\n      }\n    }\n    return prefs\n  }\n\n  async setSavedFeeds(saved: string[], pinned: string[]) {\n    return updateFeedPreferences(this, () => ({\n      saved,\n      pinned,\n    }))\n  }\n\n  async addSavedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned,\n    }))\n  }\n\n  async removeSavedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: saved.filter((uri) => uri !== v),\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async addPinnedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned: [...pinned.filter((uri) => uri !== v), v],\n    }))\n  }\n\n  async removePinnedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved,\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async setAdultContentEnabled(v: boolean) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let adultContentPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isAdultContentPref(pref) &&\n          AppBskyActorDefs.validateAdultContentPref(pref).success,\n      )\n      if (adultContentPref) {\n        adultContentPref.enabled = v\n      } else {\n        adultContentPref = {\n          $type: 'app.bsky.actor.defs#adultContentPref',\n          enabled: v,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isAdultContentPref(pref))\n        .concat([adultContentPref])\n    })\n  }\n\n  async setContentLabelPref(key: string, value: BskyLabelPreference) {\n    // TEMP update old value\n    if (value === 'show') {\n      value = 'ignore'\n    }\n\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let labelPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isContentLabelPref(pref) &&\n          AppBskyActorDefs.validateAdultContentPref(pref).success &&\n          pref.label === key,\n      )\n      if (labelPref) {\n        labelPref.visibility = value\n      } else {\n        labelPref = {\n          $type: 'app.bsky.actor.defs#contentLabelPref',\n          label: key,\n          visibility: value,\n        }\n      }\n      return prefs\n        .filter(\n          (pref) =>\n            !AppBskyActorDefs.isContentLabelPref(pref) || pref.label !== key,\n        )\n        .concat([labelPref])\n    })\n  }\n\n  async setPersonalDetails({\n    birthDate,\n  }: {\n    birthDate: string | Date | undefined\n  }) {\n    birthDate = birthDate instanceof Date ? birthDate.toISOString() : birthDate\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let personalDetailsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n          AppBskyActorDefs.validatePersonalDetailsPref(pref).success,\n      )\n      if (personalDetailsPref) {\n        personalDetailsPref.birthDate = birthDate\n      } else {\n        personalDetailsPref = {\n          $type: 'app.bsky.actor.defs#personalDetailsPref',\n          birthDate,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isPersonalDetailsPref(pref))\n        .concat([personalDetailsPref])\n    })\n  }\n\n  async setFeedViewPrefs(feed: string, pref: Partial<BskyFeedViewPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isFeedViewPref(pref) &&\n          AppBskyActorDefs.validateFeedViewPref(pref).success &&\n          pref.feed === feed,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter(\n          (p) => !AppBskyActorDefs.isFeedViewPref(pref) || p.feed !== feed,\n        )\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#feedViewPref', feed }])\n    })\n  }\n\n  async setThreadViewPrefs(pref: Partial<BskyThreadViewPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isThreadViewPref(pref) &&\n          AppBskyActorDefs.validateThreadViewPref(pref).success,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isThreadViewPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#threadViewPref' }])\n    })\n  }\n}\n\n/**\n * This function updates the preferences of a user and allows for a callback function to be executed\n * before the update.\n * @param cb - cb is a callback function that takes in a single parameter of type\n * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n * update the preferences of the user. The function is called with the current preferences as an\n * argument and if the callback returns false, the preferences are not updated.\n */\nasync function updatePreferences(\n  agent: BskyAgent,\n  cb: (\n    prefs: AppBskyActorDefs.Preferences,\n  ) => AppBskyActorDefs.Preferences | false,\n) {\n  const res = await agent.app.bsky.actor.getPreferences({})\n  const newPrefs = cb(res.data.preferences)\n  if (newPrefs === false) {\n    return\n  }\n  await agent.app.bsky.actor.putPreferences({\n    preferences: newPrefs,\n  })\n}\n\n/**\n * A helper specifically for updating feed preferences\n */\nasync function updateFeedPreferences(\n  agent: BskyAgent,\n  cb: (\n    saved: string[],\n    pinned: string[],\n  ) => { saved: string[]; pinned: string[] },\n): Promise<{ saved: string[]; pinned: string[] }> {\n  let res\n  await updatePreferences(agent, (prefs: AppBskyActorDefs.Preferences) => {\n    let feedsPref = prefs.findLast(\n      (pref) =>\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success,\n    ) as AppBskyActorDefs.SavedFeedsPref | undefined\n    if (feedsPref) {\n      res = cb(feedsPref.saved, feedsPref.pinned)\n      feedsPref.saved = res.saved\n      feedsPref.pinned = res.pinned\n    } else {\n      res = cb([], [])\n      feedsPref = {\n        $type: 'app.bsky.actor.defs#savedFeedsPref',\n        saved: res.saved,\n        pinned: res.pinned,\n      }\n    }\n    return prefs\n      .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n      .concat([feedsPref])\n  })\n  return res\n}\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = document.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      this._accessibilityContainer.remove();\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityContainer.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      this._liveRegion.remove();\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkProvider, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // Sanity check, this shouldn't happen in practice as this listener would be disposed\n          if (!this._currentLink) {\n            return;\n          }\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const end = this._bufferService.buffer.ydisp + 1 + e.end;\n          // Only clear the link if the viewport change happened on this line\n          if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n            this._clearCurrentLink(start, end);\n            if (this._lastMouseEvent && this._element) {\n              // re-eval previously active link after changes\n              const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n              if (position) {\n                this._askForLink(position, false);\n              }\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { color, rgba } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from 'xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        el.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        el.addEventListener('mouseup', eventListeners.mouseup);\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(document);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          text += chars;\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document) {\n    this._container = _document.createElement('div');\n    this._container.style.position = 'absolute';\n    this._container.style.top = '-50000px';\n    this._container.style.width = '50000px';\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n\n    const bold = _document.createElement('span');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _document.body.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      return this._flat[cp] !== WidthCacheSettings.FLAT_UNSET\n        ? this._flat[cp]\n        : (this._flat[cp] = this._measure(c, 0));\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      this._holey!.set(key, width);\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n\nconst enum MeasureSettings {\n  REPEAT = 32\n}\n\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses\n// ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(MeasureSettings.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = {\n      height: Number(this._measureElement.offsetHeight),\n      width: Number(this._measureElement.offsetWidth)\n    };\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width / MeasureSettings.REPEAT;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value!.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from 'xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from '@xterm/xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n", "// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as atproto from '@atproto/api';\n// import atproto_repo from '@atproto/repo';\n\nimport { CarReader } from '@ipld/car';\nimport * as cbor_x from 'cbor-x';\nimport * as multiformats from 'multiformats';\n\nimport xterm from 'xterm';\nimport xterm_addon_fit from '@xterm/addon-fit';\n\n// import { oldFirehose } from './old-firehose';\nimport { firehose } from './firehose';\nimport { initXTerminal } from './init-xterm';\nimport { patchBskyAgent, patchBskyAgentWithCORSProxy } from './init-at-client';\n\n\nexport function exportToGlobal(exports) {\n  exports.atproto = atproto;\n  //exports.atproto_repo = atproto_repo;\n  exports.cbor_x = cbor_x;\n  exports.ipld_car = { CarReader };\n  exports.multiformats = multiformats;\n\n  exports.xterm = xterm;\n  exports.xterm_fit = xterm_addon_fit;\n\n  //exports.oldFirehose = oldFirehose;\n  exports.initXTerminal = initXTerminal;\n  exports.patchBskyAgent = patchBskyAgent;\n  exports.patchBskyAgentWithCORSProxy = patchBskyAgentWithCORSProxy;\n  exports.firehose = firehose;\n}\n\nif (typeof window !== 'undefined' && window) {\n  exportToGlobal(window);\n} else if (typeof process !== 'undefined' && typeof process?.exit === 'function') {\n  module.exports = {};\n  exportToGlobal(module.exports);\n}\n", "import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nexport async function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}", "class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};", "export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}", "import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}", "const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}", "import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};", "import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;", "import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}", "import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};", "import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      if (useMaps && m.has(key) || !useMaps && key in obj) {\n        throw new Error(`${ decodeErrPrefix } found repeat map key \"${ key }\"`);\n      }\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};", "import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);", "import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;", "import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};", "export { Encoder, addExtension, encode, encodeAsIterable, encodeAsAsyncIterable, NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT, REUSE_BUFFER_MODE } from './encode.js'\nexport { Tag, Decoder, decodeMultiple, decode, FLOAT32_OPTIONS, clearSource, roundFloat32, isNativeAccelerationEnabled } from './decode.js'\nexport { decodeIter, encodeIter } from './iterators.js'\n", "let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) && !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared && !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r => this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end > -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues &&\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position >= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token >> 5\n\ttoken = token & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 > 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType > 1) {\n\t\t\t\t\tif (dataView.getUint32(position) > 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) while((key = read()) != STOP_CODE) object[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\telse while ((key = read()) != STOP_CODE) object[safeKey(key)] = read()\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) while((key = read()) != STOP_CODE) map.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\telse while ((key = read()) != STOP_CODE) map.set(key, read())\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd >= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token < 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i < token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i < token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i < token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token >= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token & 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token < 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token & 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i < currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token >> 5\n\t\tlength = length & 0x1f\n\t\tif (length > 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ >= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key => validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i < length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\treturn key === '__proto__' ? '__proto_' : key\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 & 0x7f) >> 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 & 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 & 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 & 3) << 8) | byte1) / (1 << 24)\n\t\treturn (byte0 & 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 & 0x80) | // sign bit\n\t\t((exponent >> 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 & 7) << 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 >> 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 << 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0x60 && length < 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) => {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) => {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) => {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i < l; i++) {\n\t\tvalue = BigInt(buffer[i]) + value << BigInt(8)\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) => {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) => {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) => {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) => {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i < length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) => { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) => {\n\tif (src[position++] != 0x84) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\tif (src.length < position)\n\t\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tlet newPackedValues = read() // packed values\n\tif (!newPackedValues || !newPackedValues.length) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data >= 0 ? 2 * data : (-2 * data - 1))]\n\tlet error = new Error('No support for non-integer packed references yet')\n\tif (data === undefined)\n\t\terror.incomplete = true\n\tthrow error\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) => { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token >> 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) // there is a cycle, so we have to assign properties to original target\n\t\treturn Object.assign(target, targetProperties)\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) => {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) => {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n\tif (tag >= 225 && tag <= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag >= 28704 && tag <= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag >= 1879052288 && tag <= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag >= 216 && tag <= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag >= 27647 && tag <= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag >= 1811940352 && tag <= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i < typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n\t\tif (!littleEndian && bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : 3\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tif (!currentDecoder.copyBuffers) {\n\t\t\t\t// try provide a direct view, but will only work if we are byte-aligned\n\t\t\t\tif (bytesPerElement === 1 ||\n\t\t\t\t\tbytesPerElement === 2 && !(buffer.byteOffset & 1) ||\n\t\t\t\t\tbytesPerElement === 4 && !(buffer.byteOffset & 3) ||\n\t\t\t\t\tbytesPerElement === 8 && !(buffer.byteOffset & 7))\n\t\t\t\t\treturn new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n\t\t\t}\n\t\t\t// we have to slice/copy here to get a new ArrayBuffer, if we are not word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length >> sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i < elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i << sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i < length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() => {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\n", "import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures > 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap && !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r => this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength > maxSharedStructures && !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length > 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions & THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length > maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate && encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length > maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () => {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) => {\n\t\t\t\tlet threshold = options && options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count > threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared && this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition >= 0) {\n\t\t\t\t\t\tif (packedPosition < 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition & 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) >> 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) >> 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues && !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat && value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat && value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value >= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value >= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value, true)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag && extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag < 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag >> 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag & 0xff\n\t\t\t\t\t\t\t\t} else if (tag > -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON && value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as object\n\t\t\t\t\t\twriteObject(value, !value.hasOwnProperty) // if it doesn't have hasOwnProperty, don't do hasOwnProperty checks\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(64)) && value >= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value > -(BigInt(1)<<BigInt(64)) && value < 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError(value + ' was too large to fit in CBOR 64-bit integer format, set largeBigIntToFloat to convert to float-64')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(object, safePrototype) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k => this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (safePrototype || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] & 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] & 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId &= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId >= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId < maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] & 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length >= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (safePrototype === null) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (safePrototype || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (safePrototype === null) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (safePrototype || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, null); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable && position > start) yield target.subarray(start, position);\n\t\t\telse if (position - start > chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start > chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options && options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared => (existingShared && existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) => this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length < 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length < 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length > 3) {\n\t\t\t\tif (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i < l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer && this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length > 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine && size > 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length < 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length < 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length >= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1)\n\tfor (let id = 0; id < idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id >> 8\n\t\t\tserialized[position] = id & 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n", "import { Encoder } from './encode.js'\nimport { Decoder } from './decode.js'\n\n/**\n * Given an Iterable first argument, returns an Iterable where each value is encoded as a Buffer\n * If the argument is only Async Iterable, the return value will be an Async Iterable.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterator} objectIterator - iterable source, like a Readable object stream, an array, Set, or custom object\n * @param {options} [options] - cbor-x Encoder options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator>}\n */\nexport function encodeIter (objectIterator, options = {}) {\n  if (!objectIterator || typeof objectIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, or a Promise for an Async Iterable')\n  } else if (typeof objectIterator[Symbol.iterator] === 'function') {\n    return encodeIterSync(objectIterator, options)\n  } else if (typeof objectIterator.then === 'function' || typeof objectIterator[Symbol.asyncIterator] === 'function') {\n    return encodeIterAsync(objectIterator, options)\n  } else {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a Promise')\n  }\n}\n\nfunction * encodeIterSync (objectIterator, options) {\n  const encoder = new Encoder(options)\n  for (const value of objectIterator) {\n    yield encoder.encode(value)\n  }\n}\n\nasync function * encodeIterAsync (objectIterator, options) {\n  const encoder = new Encoder(options)\n  for await (const value of objectIterator) {\n    yield encoder.encode(value)\n  }\n}\n\n/**\n * Given an Iterable/Iterator input which yields buffers, returns an IterableIterator which yields sync decoded objects\n * Or, given an Async Iterable/Iterator which yields promises resolving in buffers, returns an AsyncIterableIterator.\n * @param {Iterable|Iterator|AsyncIterable|AsyncIterableIterator} bufferIterator\n * @param {object} [options] - Decoder options\n * @returns {IterableIterator|Promise.<AsyncIterableIterator}\n */\nexport function decodeIter (bufferIterator, options = {}) {\n  if (!bufferIterator || typeof bufferIterator !== 'object') {\n    throw new Error('first argument must be an Iterable, Async Iterable, Iterator, Async Iterator, or a promise')\n  }\n\n  const decoder = new Decoder(options)\n  let incomplete\n  const parser = (chunk) => {\n    let yields\n    // if there's incomplete data from previous chunk, concatinate and try again\n    if (incomplete) {\n      chunk = Buffer.concat([incomplete, chunk])\n      incomplete = undefined\n    }\n\n    try {\n      yields = decoder.decodeMultiple(chunk)\n    } catch (err) {\n      if (err.incomplete) {\n        incomplete = chunk.slice(err.lastPosition)\n        yields = err.values\n      } else {\n        throw err\n      }\n    }\n    return yields\n  }\n\n  if (typeof bufferIterator[Symbol.iterator] === 'function') {\n    return (function * iter () {\n      for (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  } else if (typeof bufferIterator[Symbol.asyncIterator] === 'function') {\n    return (async function * iter () {\n      for await (const value of bufferIterator) {\n        yield * parser(value)\n      }\n    })()\n  }\n}\n", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "// @ts-check\n\nimport { CarReader } from '@ipld/car';\nimport * as cbor_x from 'cbor-x';\nimport * as multiformats from 'multiformats';\n\nvar cbor_x_extended = false;\n\n/**\n * @param {{\n *   record(op, commit, record): void;\n  *  error?(error: Error, timeMsec: number): void;\n  * }} callbacks\n  */\nexport  function firehose(callbacks) {\n  /** @type {typeof WebSocket} */\n  const WebSocketImpl = typeof WebSocket === 'function' ? WebSocket : cacheRequire('ws');\n\n  if (!cbor_x_extended) {\n    cbor_x_extended = true;\n\n    cbor_x.addExtension({\n      Class: multiformats.CID,\n      tag: 42,\n      encode: () => {\n        throw new Error(\"cannot encode cids\");\n      },\n      decode: (bytes) => {\n        if (bytes[0] !== 0) throw new Error(\"invalid cid for cbor tag 42\");\n        return multiformats.CID.decode(bytes.subarray(1)); // ignore leading 0x00\n      },\n    });\n  }\n\n  let now = Date.now();\n\n  const wsAddress =\n    'wss://bsky.network/xrpc/com.atproto.sync.subscribeRepos';\n\n    // bskyService.replace(/^(http|https)\\:/, 'wss:') + 'com.atproto.sync.subscribeRepos';\n  const ws = new WebSocketImpl(wsAddress);\n  ws.addEventListener('message', handleMessage);\n  ws.addEventListener('error', error => handleError(error));\n\n  return { stop };\n\n  function stop() {\n    ws.close();\n  }\n\n  async function handleMessage(event) {\n    now = Date.now();\n    if (typeof event.data?.arrayBuffer === 'function')\n      return event.data.arrayBuffer().then(convertMessageBuf);\n    else if (typeof event.data?.byteLength === 'number')\n      return convertMessageBuf(event.data);\n    // TODO: alert unusual message\n  }\n\n  async function convertMessageBuf(messageBuf) {\n    const entry = /** @type {any[]} */(cbor_x.decodeMultiple(new Uint8Array(messageBuf)));\n    if (!entry || entry[0]?.op !== 1) return;\n    const commit = entry[1];\n    if (!commit.blocks) return; // TODO: alert unusual commit\n    if (!commit.repo) return;\n\n    const car = await CarReader.fromBytes(commit.blocks);\n\n    for (const op of commit.ops) {\n      const block = op.cid && await car.get(/** @type {*} */(op.cid));\n      if (!block) continue; // TODO: alert unusual op\n\n      const record = cbor_x.decode(block.bytes);\n      // record.repo = commit.repo;\n      // record.rev = /** @type {string} */(commit.rev);\n      // record.seq = commit.seq;\n      // record.since = /** @type {string} */(commit.since);\n      // record.action = op.action;\n      // record.cid = cid;\n      // record.path = op.path;\n      // record.timestamp = commit.time ? Date.parse(commit.time) : Date.now();\n\n      callbacks.record(op, commit, record);\n    }\n  }\n\n  function handleError(event) {\n    if (typeof callbacks.error !== 'function') return;\n    callbacks.error(event, now);\n  }\n}", "// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport { FitAddon } from '@xterm/addon-fit';\nimport { Terminal } from 'xterm';\n\nexport function initXTerminal() {\n  const termContainer = document.createElement('div');\n  termContainer.className = 'terminalContainer';\n  termContainer.style.cssText = `\n  position: absolute;\n  left: 0; top: 0;\n  width: 100%; height: 100%;\n  border: solid 1em transparent;\n  box-sizing: border-box;\n  `;\n  const termHost = document.createElement('div');\n  termHost.className = 'terminalHost';\n  termHost.style.cssText = `\n  position: relative;\n  width: 100%; height: 100%;\n  box-sizing: border-box;\n  `;\n\n  document.body.appendChild(termContainer);\n  termContainer.appendChild(termHost);\n\n  const measure = document.createElement('div');\n  measure.style.cssText = `\n  font-size: 2vh;\n  z-index: -1;\n  position: absolute;\n  opacity: 0;\n  `;\n  measure.textContent = 'M';\n  document.body.appendChild(measure);\n  const sz = measure.getBoundingClientRect();\n  document.body.removeChild(measure);\n\n  /** @type {import('xterm').Terminal} */\n  const terminal = new Terminal({\n    allowTransparency: true,\n    cursorBlink: true,\n    cursorStyle: 'block',\n    disableStdin: false,\n    fontSize: Math.round(sz.height),\n    theme: {\n      background: '#00000000'\n    }\n  });\n\n  const fitAddon = new FitAddon();\n  terminal.loadAddon(fitAddon);\n\n  terminal.open(termHost);\n  fitAddon.fit();\n\n  var debounce;\n  window.addEventListener('resize', () => {\n    clearTimeout(debounce);\n    debounce = setTimeout(() => fitAddon.fit(), 150);\n  });\n\n  terminal.focus();\n\n  return { read, write, red, green, blue, nocolor };\n\n  /**\n   * @param {string} text\n   */\n  function write(text) {\n    return terminal.write(text);\n  }\n\n  function red() {\n    terminal.write('x1B[38;5;197m');\n  }\n\n  function green() {\n    terminal.write('\\x1B[38;5;3m');\n  }\n\n  function blue() {\n    terminal.write('\\x1B[38;5;51m');\n  }\n\n  function nocolor() {\n    terminal.write('\\x1B[0m');\n  }\n\n  /** @param {boolean} [silent] */\n  function read(silent) {\n    return new Promise(resolve => {\n      let buf = '';\n      const dataSub = terminal.onData(data => {\n        buf += data = [...data].filter(ch =>\n          ch.length > 1 ||\n          ch.charCodeAt(0) >= 32 && ch.charCodeAt(0) !== 0x7F\n        ).join('');\n        terminal.write(!silent ? data : data.replace(/./g, '*'));\n      });\n      const keySub = terminal.onKey(e => {\n        if (e.key === '\\r') {\n          dataSub.dispose();\n          keySub.dispose();\n          terminal.write('\\r\\n');\n          resolve(buf);\n        } if (e.key === '\\x7F') {\n          if (buf) {\n            const newBuf = buf.slice(0, buf.length - 1);\n            buf = newBuf;\n            terminal.write('\\b \\b');\n          }\n        }\n      });\n    });\n  }\n}", "// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport { BskyAgent } from '@atproto/api';\n\nexport async function initAtClient({ identifier, password }) {\n  const oldXrpc = 'https://bsky.social/xrpc';\n  const newXrpc = 'https://bsky.network/xrpc';\n\n  const oldAtClient = new BskyAgent({\n    service: oldXrpc,\n    persistSession: (evt, sess) => {\n      writeStored(sess);\n    }\n  });\n\n  /** @type {import('@atproto/api').AtpSessionData | undefined} */\n  const sessionData = readStored();\n  let loggedIn = false;\n  if (sessionData) {\n    try {\n      const resum = await oldAtClient.resumeSession(sessionData);\n    } catch (error) {\n      sessionData.handle\n    }\n  }\n\n  const res = await oldAtClient.login(\n    { identifier, password }\n  );\n\n  /** @type {*} */\n  const didDoc = res?.data?.didDoc;\n  const serviceURL =\n    didDoc?.service?.find(svc => /pds/i.test(svc?.id || ''))?.serviceEndpoint;\n\n  const authenticatedAtClient = new BskyAgent({ service: serviceURL });\n  patchBskyAgentWithCORSProxy(authenticatedAtClient);\n  await authenticatedAtClient.login({ identifier, password });\n\n  const unaunthenticatedAtClient = new BskyAgent({ service: newXrpc });\n  patchBskyAgentWithCORSProxy(unaunthenticatedAtClient);\n\n  return { oldAtClient, authenticatedAtClient, unaunthenticatedAtClient };\n}\n\nexport function patchBskyAgent(atClient) {\n  atClient.com.atproto.sync._service.xrpc.baseClient.lex.assertValidXrpcOutput = function (lexUri, value, ...rest) {\n    return true;\n  };\n}\n\n/** @param {BskyAgent} atClient */\nexport function patchBskyAgentWithCORSProxy(atClient) {\n  atClient.com.atproto.sync._service.xrpc.baseClient.lex.assertValidXrpcOutput = function (lexUri, value, ...rest) {\n    return true;\n  };\n\n  if (typeof window !== \"undefined\" && window) {\n    const baseFetch = atClient.com.atproto.sync._service.xrpc.baseClient.fetch;\n    atClient.com.atproto.sync._service.xrpc.baseClient.fetch = function (reqUri, ...args) {\n      if (/com\\.atproto/.test(reqUri))\n        reqUri = \"https://corsproxy.io/?\" + reqUri;\n\n      return baseFetch.call(\n        atClient.com.atproto.sync._service.xrpc.baseClient,\n        reqUri,\n        ...args\n      );\n    };\n  }\n}\n"],
  "mappings": "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kBAAM,IAAI,UAAU,GAAsB,OAAO,CAAC,CAAC;UACrD;QACF;;AAEA,eAAA,oBAA6B,GAAoC;AAC/D,eAAO,kBAAkB,UAAU,CAAC,EAAE;MACxC;ACpKA,UAAM,cAAc,IAAI,OAAO;ACCxB,UAAM,aAAa;QACxB,qBAAqB;UACnB,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,YAAY;cACV,MAAM;cACN,UAAU,CAAC,SAAS;cACpB,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,KAAK;kBACH,MAAM;gBACR;cACF;YACF;YACA,cAAc;cACZ,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,IAAI;kBACF,MAAM;gBACR;gBACA,OAAO;kBACL,MAAM;kBACN,MAAM;oBACJ;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;kBACF;gBACF;gBACA,SAAS;kBACP,MAAM;kBACN,MAAM;oBACJ;oBACA;kBACF;gBACF;gBACA,iBAAiB;kBACf,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,eAAe;kBACb,MAAM;gBACR;gBACA,eAAe;kBACb,MAAM;gBACR;cACF;YACF;YACA,oBAAoB;cAClB,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,IAAI;kBACF,MAAM;gBACR;gBACA,OAAO;kBACL,MAAM;kBACN,MAAM;oBACJ;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;kBACF;gBACF;gBACA,SAAS;kBACP,MAAM;kBACN,MAAM;oBACJ;oBACA;oBACA;oBACA;kBACF;gBACF;gBACA,cAAc;kBACZ,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,YAAY;cACV,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,IAAI;kBACF,MAAM;gBACR;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;gBACA,SAAS;kBACP,MAAM;gBACR;gBACA,mBAAmB;kBACjB,MAAM;gBACR;gBACA,SAAS;kBACP,MAAM;kBACN,MAAM;oBACJ;oBACA;kBACF;gBACF;gBACA,YAAY;kBACV,MAAM;kBACN,QAAQ;gBACV;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,qBAAqB;kBACnB,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;cACF;YACF;YACA,mBAAmB;cACjB,MAAM;cACN,UAAU,CAAC,MAAM,WAAW,aAAa,aAAa,aAAa;cACnE,YAAY;gBACV,IAAI;kBACF,MAAM;gBACR;gBACA,SAAS;kBACP,MAAM;kBACN,MAAM;oBACJ;oBACA;kBACF;gBACF;gBACA,iBAAiB;kBACf,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,QAAQ;kBACV;gBACF;gBACA,mBAAmB;kBACjB,MAAM;gBACR;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;kBACR,aACE;gBACJ;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;kBACR,aACE;gBACJ;gBACA,aAAa;kBACX,MAAM;kBACN,KAAK;gBACP;gBACA,SAAS;kBACP,MAAM;kBACN,aAAa;gBACf;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,gBAAgB;kBACd,MAAM;kBACN,QAAQ;gBACV;gBACA,gBAAgB;kBACd,MAAM;kBACN,QAAQ;gBACV;gBACA,gBAAgB;kBACd,MAAM;kBACN,QAAQ;gBACV;gBACA,gBAAgB;kBACd,MAAM;kBACN,QAAQ;kBACR,aACE;gBACJ;gBACA,WAAW;kBACT,MAAM;gBACR;gBACA,UAAU;kBACR,MAAM;kBACN,aACE;gBACJ;gBACA,cAAc;kBACZ,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,kBAAkB;cAChB,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,IAAI;kBACF,MAAM;gBACR;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;gBACA,SAAS;kBACP,MAAM;gBACR;gBACA,SAAS;kBACP,MAAM;kBACN,MAAM;oBACJ;oBACA;oBACA;oBACA;kBACF;gBACF;gBACA,eAAe;kBACb,MAAM;kBACN,KAAK;gBACP;gBACA,YAAY;kBACV,MAAM;kBACN,QAAQ;gBACV;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,mBAAmB;kBACjB,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;cACF;YACF;YACA,UAAU;cACR,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,QAAQ;kBACN,MAAM;kBACN,QAAQ;gBACV;gBACA,OAAO;kBACL,MAAM;gBACR;gBACA,gBAAgB;kBACd,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;gBACA,WAAW;kBACT,MAAM;kBACN,KAAK;gBACP;gBACA,iBAAiB;kBACf,MAAM;gBACR;gBACA,YAAY;kBACV,MAAM;gBACR;cACF;YACF;YACA,gBAAgB;cACd,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,QAAQ;kBACN,MAAM;kBACN,QAAQ;gBACV;gBACA,OAAO;kBACL,MAAM;gBACR;gBACA,gBAAgB;kBACd,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;gBACA,QAAQ;kBACN,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,KAAK;gBACP;gBACA,SAAS;kBACP,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;gBACA,iBAAiB;kBACf,MAAM;gBACR;gBACA,YAAY;kBACV,MAAM;gBACR;gBACA,kBAAkB;kBAChB,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,aAAa;cACX,MAAM;cACN,UAAU,CAAC,OAAO,UAAU,WAAW;cACvC,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,QAAQ;kBACN,MAAM;kBACN,QAAQ;gBACV;gBACA,OAAO;kBACL,MAAM;gBACR;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,WAAW;kBACT,MAAM;kBACN,KAAK;gBACP;gBACA,SAAS;kBACP,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;gBACA,iBAAiB;kBACf,MAAM;gBACR;gBACA,kBAAkB;kBAChB,MAAM;kBACN,QAAQ;gBACV;gBACA,YAAY;kBACV,MAAM;gBACR;cACF;YACF;YACA,kBAAkB;cAChB,MAAM;cACN,UAAU,CAAC,KAAK;cAChB,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,SAAS;cACP,MAAM;cACN,UAAU,CAAC,KAAK;cAChB,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,aAAa;cACX,MAAM;cACN,UAAU,CAAC,OAAO,KAAK;cACvB,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,YAAY;cACV,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,OAAO;kBACL,MAAM;gBACR;gBACA,UAAU;kBACR,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,QAAQ;kBACV;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;gBACA,MAAM;kBACJ,MAAM;kBACN,KAAK;gBACP;cACF;YACF;YACA,kBAAkB;cAChB,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,OAAO;kBACL,MAAM;gBACR;gBACA,OAAO;kBACL,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;gBACA,QAAQ;kBACN,MAAM;kBACN,OAAO;oBACL,MAAM;oBACN,KAAK;kBACP;gBACF;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;gBACA,MAAM;kBACJ,MAAM;kBACN,KAAK;gBACP;cACF;YACF;YACA,oBAAoB;cAClB,MAAM;cACN,UAAU,CAAC,KAAK;cAChB,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;cACF;YACF;YACA,YAAY;cACV,MAAM;cACN,YAAY;gBACV,eAAe;kBACb,MAAM;kBACN,KAAK;gBACP;cACF;YACF;YACA,kBAAkB;cAChB,MAAM;cACN,YAAY;gBACV,eAAe;kBACb,MAAM;kBACN,KAAK;gBACP;cACF;YACF;YACA,UAAU;cACR,MAAM;cACN,UAAU,CAAC,OAAO,YAAY,QAAQ,WAAW;cACjD,YAAY;gBACV,KAAK;kBACH,MAAM;kBACN,QAAQ;gBACV;gBACA,UAAU;kBACR,MAAM;gBACR;gBACA,MAAM;kBACJ,MAAM;gBACR;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,SAAS;kBACP,MAAM;kBACN,MAAM;oBACJ;oBACA;kBACF;gBACF;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;cACF;YACF;YACA,cAAc;cACZ,MAAM;cACN,UAAU,CAAC,SAAS,QAAQ;cAC5B,YAAY;gBACV,OAAO;kBACL,MAAM;gBACR;gBACA,QAAQ;kBACN,MAAM;gBACR;cACF;YACF;YACA,cAAc;cACZ,MAAM;cACN,UAAU,CAAC,SAAS,UAAU,QAAQ;cACtC,YAAY;gBACV,OAAO;kBACL,MAAM;gBACR;gBACA,QAAQ;kBACN,MAAM;gBACR;gBACA,QAAQ;kBACN,MAAM;gBACR;cACF;YACF;YACA,oBAAoB;cAClB,MAAM;cACN,aAAa;gBACX;gBACA;gBACA;cACF;YACF;YACA,YAAY;cACV,MAAM;cACN,aACE;YACJ;YACA,iBAAiB;cACf,MAAM;cACN,aACE;YACJ;YACA,cAAc;cACZ,MAAM;cACN,aACE;YACJ;YACA,kBAAkB;cAChB,MAAM;cACN,aAAa;cACb,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,iBAAiB;kBACf,MAAM;kBACN,aACE;gBACJ;cACF;YACF;YACA,yBAAyB;cACvB,MAAM;cACN,aAAa;cACb,YAAY;gBACV,SAAS;kBACP,MAAM;kBACN,aAAa;gBACf;cACF;YACF;YACA,uBAAuB;cACrB,MAAM;cACN,aAAa;cACb,YAAY;gBACV,SAAS;kBACP,MAAM;kBACN,aAAa;gBACf;cACF;YACF;YACA,iBAAiB;cACf,MAAM;cACN,aAAa;cACb,UAAU,CAAC,SAAS;cACpB,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,QAAQ;kBACN,MAAM;kBACN,aAAa;gBACf;cACF;YACF;YACA,gBAAgB;cACd,MAAM;cACN,aAAa;cACb,UAAU,CAAC,YAAY;cACvB,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,YAAY;kBACV,MAAM;kBACN,KAAK;gBACP;cACF;YACF;YACA,eAAe;cACb,MAAM;cACN,aAAa;cACb,UAAU,CAAC,mBAAmB,iBAAiB;cAC/C,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,iBAAiB;kBACf,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;gBACA,iBAAiB;kBACf,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;cACF;YACF;YACA,qBAAqB;cACnB,MAAM;cACN,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;cACF;YACF;YACA,kBAAkB;cAChB,MAAM;cACN,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;cACF;YACF;YACA,cAAc;cACZ,MAAM;cACN,aAAa;cACb,UAAU,CAAC,iBAAiB;cAC5B,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,iBAAiB;kBACf,MAAM;kBACN,aAAa;gBACf;cACF;YACF;YACA,gBAAgB;cACd,MAAM;cACN,aAAa;cACb,YAAY;gBACV,SAAS;kBACP,MAAM;kBACN,aAAa;gBACf;cACF;YACF;YACA,eAAe;cACb,MAAM;cACN,aAAa;cACb,UAAU,CAAC,aAAa;cACxB,YAAY;gBACV,aAAa;kBACX,MAAM;kBACN,aAAa;gBACf;gBACA,SAAS;kBACP,MAAM;kBACN,aAAa;gBACf;cACF;YACF;UACF;QACF;QACA,8BAA8B;UAC5B,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,MAAM;cACJ,MAAM;cACN,aAAa;cACb,OAAO;gBACL,UAAU;gBACV,QAAQ;kBACN,MAAM;kBACN,UAAU,CAAC,KAAK;kBAChB,YAAY;oBACV,KAAK;sBACH,MAAM;sBACN,QAAQ;oBACV;kBACF;gBACF;cACF;YACF;UACF;QACF;QACA,sCAAsC;UACpC,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,MAAM;cACJ,MAAM;cACN,aACE;cACF,OAAO;gBACL,UAAU;gBACV,QAAQ;kBACN,MAAM;kBACN,UAAU,CAAC,SAAS;kBACpB,YAAY;oBACV,SAAS;sBACP,MAAM;sBACN,QAAQ;oBACV;oBACA,MAAM;sBACJ,MAAM;sBACN,aAAa;oBACf;kBACF;gBACF;cACF;YACF;UACF;QACF;QACA,mCAAmC;UACjC,SAAS;UACT,IAAI;UACJ,MAAM;YA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AM;kBACN,UAAU;oBACR;oBACA;oBACA;oBACA;oBACA;kBACF;kBACA,YAAY;oBACV,IAAI;sBACF,MAAM;oBACR;oBACA,YAAY;sBACV,MAAM;sBACN,KAAK;oBACP;oBACA,QAAQ;sBACN,MAAM;sBACN,cAAc;sBACd,WAAW;oBACb;oBACA,SAAS;sBACP,MAAM;sBACN,MAAM;wBACJ;wBACA;sBACF;oBACF;oBACA,YAAY;sBACV,MAAM;sBACN,QAAQ;oBACV;oBACA,WAAW;sBACT,MAAM;sBACN,QAAQ;oBACV;kBACF;gBACF;cACF;YACF;UACF;QACF;QACA,0BAA0B;UACxB,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,YAAY;cACV,MAAM;cACN,aAAa;gBACX;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;YACF;YACA,YAAY;cACV,MAAM;cACN,aAAa;YACf;YACA,iBAAiB;cACf,MAAM;cACN,aAAa;YACf;YACA,kBAAkB;cAChB,MAAM;cACN,aAAa;YACf;YACA,cAAc;cACZ,MAAM;cACN,aAAa;YACf;YACA,YAAY;cACV,MAAM;cACN,aACE;YACJ;YACA,aAAa;cACX,MAAM;cACN,aAAa;YACf;YACA,cAAc;cACZ,MAAM;cACN,aAAa;YACf;UACF;QACF;QACA,2BAA2B;UACzB,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,MAAM;cACJ,MAAM;cACN,aACE;cACF,OAAO;gBACL,UAAU;gBACV,QAAQ;kBACN,MAAM;kBACN,UAAU,CAAC,QAAQ,QAAQ;kBAC3B,YAAY;oBACV,MAAM;sBACJ,MAAM;sBACN,QAAQ;sBACR,aAAa;oBACf;oBACA,UAAU;sBACR,MAAM;sBACN,SAAS;sBACT,aAAa;oBACf;oBACA,QAAQ;sBACN,MAAM;sBACN,OAAO;wBACL,MAAM;wBACN,MAAM;0BACJ;0BACA;0BACA;wBACF;wBACA,QAAQ;sBACV;oBACF;oBACA,YAAY;sBACV,MAAM;sBACN,QAAQ;oBACV;kBACF;gBACF;cACF;cACA,QAAQ;gBACN;kBACE,MAAM;gBACR;cACF;YACF;YACA,QAAQ;cACN,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;kBAClB,YAAY;oBACV,OAAO;sBACL,MAAM;sBACN,OAAO;wBACL,MAAM;wBACN,KAAK;sBACP;oBACF;kBACF;gBACF;cACF;YACF;YACA,cAAc;cACZ,MAAM;cACN,UAAU,CAAC,WAAW,OAAO;cAC7B,YAAY;gBACV,SAAS;kBACP,MAAM;gBACR;gBACA,OAAO;kBACL,MAAM;kBACN,OAAO;oBACL,MAAM;kBACR;gBACF;cACF;YACF;UACF;QACF;QACA,+BAA+B;UAC7B,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,MAAM;cACJ,MAAM;cACN,aAAa;cACb,OAAO;gBACL,UAAU;gBACV,QAAQ;kBACN,MAAM;kBACN,UAAU,CAAC,cAAc,UAAU;kBACnC,YAAY;oBACV,YAAY;sBACV,MAAM;sBACN,aACE;oBACJ;oBACA,UAAU;sBACR,MAAM;oBACR;kBACF;gBACF;cACF;cACA,QAAQ;gBACN,UAAU;gBACV,QAAQ;kBACN,MAAM;kBACN,UAAU,CAAC,aAAa,cAAc,UAAU,KAAK;kBACrD,YAAY;oBACV,WAAW;sBACT,MAAM;oBACR;oBACA,YAAY;sBACV,MAAM;oBACR;oBACA,QAAQ;sBACN,MAAM;sBACN,QAAQ;oBACV;oBACA,KAAK;sBACH,MAAM;sBACN,QAAQ;oBACV;oBACA,QAAQ;sBACN,MAAM;oBACR;oBACA,OAAO;sBACL,MAAM;oBACR;oBACA,gBAAgB;sBACd,MAAM;oBACR;kBACF;gBACF;cACF;cACA,QAAQ;gBACN;kBACE,MAAM;gBACR;cACF;YACF;UACF;QACF;QACA,sBAAsB;UACpB,SAAS;UACT,IAAI;UACJ,MAAM;YACJ,YAAY;cACV,MAAM;cACN,UAAU;gBACR;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;cACF;cACA,YAAY;gBACV,MAAM;kBACJ,MAAM;gBACR;gBACA,WAAW;kBACT,MAAM;gBACR;gBACA,UAAU;kBACR,MAAM;gBACR;gBACA,YAAY;kBACV,MAAM;gBACR;gBACA,WAAW;kBACT,MAAM;gBACR;gBACA,WAAW;kBACT,MAAM;kBACN,QAAQ;gBACV;gBACA,MAAM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;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,kBAAkB;UAChB,IAAI;UACJ,aAAa,CAAC,MAAM;UACpB,OAAO,CAAC,aAAa;UACrB,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aAAa;cACf;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,SAAS;UACP,IAAI;UACJ,aAAa,CAAC,MAAM;UACpB,OAAO,CAAC,aAAa;UACrB,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,MAAM;UACJ,IAAI;UACJ,aAAa,CAAC,UAAU,QAAQ,MAAM;UACtC,OAAO,CAAC,OAAO;UACf,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,QAAQ;UACN,IAAI;UACJ,aAAa,CAAC,UAAU,QAAQ,MAAM;UACtC,OAAO,CAAC,OAAO;UACf,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gB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CE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,uBAAuB;UACrB,IAAI;UACJ,aAAa,CAAC,UAAU,QAAQ,MAAM;UACtC,OAAO,CAAC;UACR,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,YAAY;UACV,IAAI;UACJ,aAAa,CAAC,UAAU,QAAQ,MAAM;UACtC,OAAO,CAAC;UACR,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aAAa;cACf;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aAAa;cACf;YACF;UACF;QACF;QACA,mBAAmB;UACjB,IAAI;UACJ,aAAa,CAAC,UAAU,QAAQ,MAAM;UACtC,OAAO,CAAC;UACR,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;UACF;QACF;QACA,QAAQ;UACN,IAAI;UACJ,aAAa,CAAC,UAAU,QAAQ,MAAM;UACtC,OAAO,CAAC;UACR,QAAQ;UACR,SAAS;UACT,cAAc;UACd,SAAS;YACP,UAAU;cACR,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE;cACJ;YACF;YACA,SAAS;cACP,IAAI;gBACF,MAAM;gBACN,aACE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Q,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAC7C,CAAC,MAAQ,IAAA,GAAS,CAAC,MAAQ,IAAA,GAAS,CAAC,OAAQ,KAAA,GAC7C,CAAC,OAAQ,KAAA,GAAS,CAAC,OAAQ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",
  "names": ["__commonJS", "exports", "require_dist", "__export", "BskyAgent", "module", "target", "version2", "coerce", "NEVER", "is", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "decode", "read", "MSB$1", "REST$1", "buf", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "decode2", "encodeTo", "encodingLength", "empty", "equals", "coerce2", "fromString", "toString", "create", "Digest", "decode3", "equals2", "base58btc", "base58flickr", "base", "encode5", "length2", "decode6", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "Encoder", "Decoder", "decoder2", "or", "ComposedDecoder", "Codec", "from", "baseX", "decode4", "encode2", "rfc4648", "base32", "base32hex", "base32hexpad", "base32hexpadupper", "base32hexupper", "base32pad", "base32padupper", "base32upper", "base32z", "CID", "hidden", "readonly", "DAG_PB_CODE", "SHA_256_CODE", "toStringV0", "toStringV1", "deprecate", "IS_CID_DEPRECATION", "cidSymbol", "encodeCID", "parseCIDtoBytes", "version", "base2", "encode3", "decode5", "from2", "Hasher", "encode4", "textEncoder", "textDecoder", "fromString2", "toString2", "__toESM", "src2", "opts", "decoder", "module", "encode", "MSB", "REST", "MSBALL", "INT", "module", "read", "MSB", "REST", "buf", "module", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "module", "root", "factory", "exports", "module", "define", "amd", "a", "i", "self", "e", "t", "s", "r", "n", "o", "AccessibilityManager", "Disposable", "_terminal", "super", "_renderService", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityContainer", "document", "createElement", "classList", "add", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_liveRegion", "_liveRegionDebouncer", "register", "TimeBasedDebouncer", "_renderRows", "bind", "element", "Error", "insertAdjacentElement", "onResize", "_handleResize", "onRender", "_refreshRows", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "_screenDprMonitor", "ScreenDprMonitor", "window", "setListener", "addDisposableDomListener", "toDisposable", "remove", "MAX_ROWS_TO_READ", "shift", "textContent", "Strings", "tooMuchOutput", "isMac", "parentNode", "setTimeout", "keyChar", "test", "push", "refresh", "buffer", "setSize", "lines", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "removeEventListener", "newElement", "unshift", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "tabIndex", "_refreshRowDimensions", "dimensions", "css", "cell", "height", "style", "width", "canvas", "IRenderService", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "optionsService", "decPrivateModes", "rawOptions", "ignoreBracketedPasteMode", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "bg", "fg", "set", "get", "clear", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "currentLink", "_currentLink", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_wasResized", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "_clearCurrentLink", "linkProvider", "providerIndex", "indexOf", "splice", "mouseService", "renderService", "_element", "_mouseService", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "_currentDevicePixelRatio", "devicePixelRatio", "clearListener", "listener", "_listener", "_outerListener", "_updateDpr", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "Terminal", "CoreTerminal", "onFocus", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "onWillOpen", "_onWillOpen", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_accessibilityManager", "MutableDisposable", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_setup", "linkifier2", "_instantiationService", "createInstance", "registerLinkProvider", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "_document", "ownerDocument", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "_coreBrowserService", "CoreBrowserService", "defaultView", "ICoreBrowserService", "_handleTextAreaFocus", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "onRequestScrollLines", "amount", "suppressScrollEvent", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "attachToDom", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "onSpecificOptionChange", "_handleScreenReaderModeOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "customKeyEventHandler", "joinerId", "deregister", "markers", "cursorYOffset", "addMarker", "decorationOptions", "registerDecoration", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "_scrollArea", "h", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "_onRequestScrollLines", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "_refresh", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_bubbleScroll", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "startLine", "endLine", "cursorElement", "currentLine", "bufferElements", "isWrapped", "translateToString", "div", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "addRefreshCallback", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "layer", "marker", "display", "onRenderEmitter", "_createElement", "onDispose", "delete", "anchor", "right", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_width", "c", "_coreBrowseService", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "parentElement", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "setPadding", "_refreshDecorations", "clearRect", "addDecoration", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_isComposing", "_textarea", "_coreService", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "ROW_CONTAINER_CLASS", "FG_CLASS_PREFIX", "BG_CLASS_PREFIX", "FOCUS_CLASS", "SELECTION_CLASS", "nextTerminalId", "_linkifier2", "instantiationService", "l", "u", "p", "_terminalClass", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_widthCache", "_themeStyleElement", "_dimensionsStyleElement", "WidthCache", "setFont", "fontWeight", "fontWeightBold", "_setDefaultSpacing", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "multiplyOpacity", "cursor", "cursorAccent", "cursorWidth", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "spacing", "defaultSpacing", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "replaceChildren", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "cursorAbsoluteY", "cursorBlink", "cursorStyle", "cursorInactiveStyle", "rowElement", "createRow", "_setCellUnderline", "enabled", "maxY", "bufferline", "IInstantiationService", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "widthCache", "linkStart", "linkEnd", "elements", "joinedRanges", "getJoinedCharacters", "charElement", "getNoBgTrimmedLength", "cellAmount", "oldBg", "oldFg", "oldExt", "oldLinkHover", "oldSpacing", "oldIsInSelection", "classes", "hasHover", "isJoined", "lastCharX", "JoinedCellData", "isInSelection", "_isCellInSelection", "isCursorCell", "isLinkHover", "isDecorated", "forEachDecorationAtCell", "d", "chars", "getChars", "WHITESPACE_CELL_CHAR", "isUnderline", "isOverline", "isBold", "isItalic", "selectionForeground", "ext", "isCursorHidden", "isFocused", "isDim", "isInvisible", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "textDecoration", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "resolvedBg", "isTop", "backgroundColorRGB", "foregroundColorRGB", "_addStyle", "padStart", "_applyMinimumContrast", "className", "minimumContrastRatio", "excludeFromContrastRatioDemands", "getCode", "cache", "_getContrastCache", "adjustedColor", "getColor", "ratio", "ensureContrastRatio", "setColor", "halfContrastCache", "contrastCache", "padChar", "_flat", "Float32Array", "_font", "_fontSize", "_weight", "_weightBold", "_measureElements", "whiteSpace", "fontKerning", "regular", "bold", "italic", "fontStyle", "boldItalic", "body", "_holey", "fill", "font", "weight", "weightBold", "cp", "_measure", "variant", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "Number", "firstCell", "content", "combinedData", "isCombined", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "newRange", "inRange", "_isFocused", "_cachedIsFocused", "hasFocus", "queueMicrotask", "_renderer", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "handleTrim", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectWordAtCursor", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "_getMouseEventScrollAmount", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "charIndex", "_isClickInSelection", "followWrappedLinesAbove", "followWrappedLinesBelow", "_convertViewportColToCharacterIndex", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "_getWordAt", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "g", "b", "toCss", "toRgba", "_colors", "_contrastCache", "ColorContrastCache", "_halfContrastCache", "_onChangeColors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onScrollApi", "_windowsWrappingHeuristics", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsPtyOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "write", "maxSubsequentCalls", "LogLevelEnum", "WARN", "writeSync", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "eraseAttr", "scroll", "pageCount", "scrollToTop", "scrollAmount", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsPty", "buildNumber", "backend", "windowsMode", "_enableWindowsWrappingHeuristics", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "arg1", "arg2", "queue", "call", "clearListeners", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "getAttrData", "_curAttrData", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "_logSlowResolvingAsync", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "subarray", "_preserveStack", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "wcwidth", "ch", "stringFromCodePoint", "addLineToLink", "_eraseAttrData", "insertCells", "getNullCell", "NULL_CELL_CODE", "NULL_CELL_WIDTH", "addCodepointToCell", "precedingCodepoint", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "diffToTop", "_moveCursor", "diffToBottom", "param", "tabs", "prevStop", "clearWrap", "respectProtect", "replaceCells", "clearMarkers", "_eraseInBufferLine", "_resetBufferLine", "scrollBackSize", "trimStart", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "m", "mode", "c1", "c2", "c3", "fromColorRGB", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "_updateAttrColor", "underlineColor", "updateExtended", "_processSGR0", "_processUnderline", "_extractColor", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "isValidColorIndex", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "shiftElements", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "_value", "f", "array", "_data", "third", "fourth", "navigator", "userAgent", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "_search", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "constructor", "_queue", "enqueue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "_urlId", "_ext", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "BufferLine", "relativeY", "correctBufferLength", "scrollback", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "copyCellsFrom", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "lineIndex", "trimRight", "tabStopWidth", "Marker", "_removeMarker", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "CHAR_DATA_ATTR_INDEX", "CHAR_DATA_CHAR_INDEX", "CHAR_DATA_WIDTH_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "fillViewportRows", "_alt", "inactiveBuffer", "obj", "setFromCharData", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "_id", "isDisposed", "_nextId", "_onDispose", "disposable", "C", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "handlerList", "handlerIndex", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "next", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "setDefault", "addMany", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "_identifier", "registerHandler", "clearHandler", "setHandlerFallback", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "k", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "terminal", "loadedAddon", "_wrappedAddonDispose", "_buffer", "viewportY", "baseY", "BufferLineApiView", "_line", "startColumn", "endColumn", "BufferNamespaceApi", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "init", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "copyFrom", "oldYdisp", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "S", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "insert", "xmin", "xmax", "getKeyIterator", "forEachByKey", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "trace", "TRACE", "info", "INFO", "ERROR", "off", "OFF", "traceLogger", "_logLevel", "_updateLogLevel", "optionalParams", "message", "_evalLazyOptionalParams", "logger", "_log", "log", "_target", "descriptor", "fn", "JSON", "stringify", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "DI_TARGET", "DI_DEPENDENCIES", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "attachCustomKeyEventHandler", "registerCharacterJoiner", "deregisterCharacterJoiner", "registerMarker", "_verifyPositiveIntegers", "scrollPages", "scrollToLine", "addon", "loadAddon", "strings", "Infinity", "root", "factory", "exports", "module", "define", "amd", "self", "terminal", "this", "_terminal", "dispose", "fit", "dims", "proposeDimensions", "isNaN", "cols", "rows", "core", "_core", "_renderService", "clear", "resize", "element", "parentElement", "dimensions", "css", "cell", "width", "height", "scrollbarWidth", "options", "scrollback", "viewport", "scrollBarWidth", "parentElementStyle", "window", "getComputedStyle", "parentElementHeight", "parseInt", "getPropertyValue", "parentElementWidth", "Math", "max", "elementStyle", "availableHeight", "availableWidth", "floor", "import_varint", "decode", "buf", "decode", "target", "decode", "equals", "decode", "equals", "encode", "length", "i", "j", "decode", "buffer", "decoder", "encode", "decode", "buffer", "version", "equals", "base", "decode", "length", "decoder", "cid", "isBuffer", "buf", "toString", "fromString", "isBuffer", "length", "isBuffer", "length", "buf", "buf", "encodedSize", "buf", "encodedSize", "compareTokens", "length", "buf", "fromString", "encodedSize", "compareTokens", "toToken", "length", "toString", "toToken", "length", "buf", "encodedSize", "toToken", "length", "buf", "encodedSize", "buf", "encodedSize", "buf", "encodedSize", "ui8a", "length", "decoder", "decode", "decode", "varint", "length", "decode", "bytes", "multihash", "version", "read", "version", "decoder", "import_varint", "Decoder", "Encoder", "addExtension", "decode", "encode", "src", "dataView", "Decoder", "src", "dataView", "read", "src", "dataView", "length", "structure", "length", "src", "src", "buffer", "length", "read", "src", "target", "dataView", "Decoder", "decode", "textEncoder", "Buffer", "position", "bundledStrings", "Encoder", "Decoder", "referenceMap", "textEncoder", "packedObjectMap", "sharedPackedObjectMap", "sharedValues", "packedValues", "encode", "options", "length", "maxBytes", "buffer", "version", "isLittleEndianMachine", "Buffer", "addExtension", "Encoder", "decoder", "Decoder", "iter", "from", "from", "encode", "import_xterm", "import_addon_fit", "addExtension", "decode", "read", "buf", "xterm", "xterm_addon_fit"]
}
